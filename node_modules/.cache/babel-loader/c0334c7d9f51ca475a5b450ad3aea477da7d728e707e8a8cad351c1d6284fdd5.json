{"ast":null,"code":"var _jsxFileName = \"/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedIdleRPG.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdvancedIdleRPG = ({\n  onAction,\n  isSimulating,\n  currentAction,\n  userStats,\n  setUserStats,\n  currentUser\n}) => {\n  _s();\n  const {\n    colors\n  } = useTheme();\n  const {\n    t\n  } = useLanguage();\n\n  // 스킬 데미지 계산 함수\n  const calculateSkillDamage = (skill, character) => {\n    if (skill.level === 0 || !skill.isLearned) return 0;\n    let damage = skill.baseDamage;\n\n    // 레벨에 따른 데미지 증가\n    damage += skill.baseDamage * skill.damageMultiplier * (skill.level - 1);\n\n    // 스탯에 따른 데미지 증가\n    if (skill.statMultiplier.attack) {\n      damage += character.attack * skill.statMultiplier.attack * skill.level;\n    }\n    if (skill.statMultiplier.defense) {\n      damage += character.defense * skill.statMultiplier.defense * skill.level;\n    }\n    if (skill.statMultiplier.hp) {\n      damage += character.maxHp * skill.statMultiplier.hp * skill.level;\n    }\n    if (skill.statMultiplier.mp) {\n      damage += character.maxMp * skill.statMultiplier.mp * skill.level;\n    }\n    return Math.floor(damage);\n  };\n\n  // CSS 애니메이션 추가\n  React.useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const [character, setCharacter] = useState({\n    id: '1',\n    name: '용사',\n    level: 1,\n    exp: 0,\n    maxExp: 100,\n    hp: 100,\n    maxHp: 100,\n    mp: 50,\n    maxMp: 50,\n    attack: 20,\n    defense: 10,\n    speed: 15,\n    gold: 100,\n    class: '전사',\n    skills: [],\n    equipment: {},\n    stats: {\n      strength: 10,\n      agility: 8,\n      intelligence: 5,\n      vitality: 12,\n      luck: 7,\n      availablePoints: 0\n    },\n    prestige: 0,\n    rebirth: 0,\n    buffs: {\n      attack: {\n        amount: 0,\n        duration: 0\n      },\n      defense: {\n        amount: 0,\n        duration: 0\n      },\n      speed: {\n        amount: 0,\n        duration: 0\n      }\n    }\n  });\n  const [currentTab, setCurrentTab] = useState('lobby');\n  const [gameMode, setGameMode] = useState('lobby');\n  const [isAutoFighting, setIsAutoFighting] = useState(false);\n  const [currentMonster, setCurrentMonster] = useState(null);\n  const [combatLog, setCombatLog] = useState([]);\n  const [selectedDungeon, setSelectedDungeon] = useState(null);\n  const [inventory, setInventory] = useState([]);\n  const [availableDungeons, setAvailableDungeons] = useState([]);\n  const [currentDungeon, setCurrentDungeon] = useState(null);\n  const [inDungeon, setInDungeon] = useState(false);\n  const [guild, setGuild] = useState(null);\n  const [shop, setShop] = useState([]);\n  const [achievements, setAchievements] = useState([]);\n  const [monstersDefeated, setMonstersDefeated] = useState(0);\n  const [totalGoldEarned, setTotalGoldEarned] = useState(0);\n  const [showDungeonChoice, setShowDungeonChoice] = useState(false);\n  const logRef = useRef(null);\n\n  // 게임 초기화\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  // 캐릭터 상태가 변경될 때마다 userStats 업데이트\n  useEffect(() => {\n    setUserStats({\n      level: character.level,\n      gold: character.gold,\n      attack: character.attack,\n      defense: character.defense,\n      hp: character.hp,\n      maxHp: character.maxHp,\n      exp: character.exp,\n      maxExp: character.maxExp,\n      monsters_defeated: monstersDefeated,\n      character_class: character.class,\n      total_gold_earned: totalGoldEarned,\n      inventory_items: inventory.map(item => ({\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: item.rarity,\n        quantity: item.quantity || 1,\n        stats: item.stats\n      })),\n      skills: character.skills.map(skill => ({\n        id: skill.id,\n        name: skill.name,\n        level: skill.level,\n        type: skill.type\n      })),\n      current_buffs: Object.entries(character.buffs).filter(([_, buff]) => buff.duration > 0).map(([type, buff]) => ({\n        type,\n        amount: buff.amount,\n        duration: Math.ceil(buff.duration / 1000)\n      }))\n    });\n  }, [character, inventory, monstersDefeated, totalGoldEarned, setUserStats]);\n  const initializeGame = () => {\n    // 언어별 텍스트 정의\n    const translations = {\n      ko: {\n        character: {\n          name: '용사',\n          class: '전사'\n        },\n        skills: {\n          slash: {\n            name: '강력한 베기',\n            description: '강력한 일격을 가합니다.'\n          },\n          heal: {\n            name: '치유',\n            description: 'HP를 회복합니다.'\n          },\n          critical: {\n            name: '치명타 숙련',\n            description: '치명타 확률을 증가시킵니다.'\n          }\n        },\n        dungeons: {\n          forest: {\n            name: '어둠의 숲',\n            description: '초보자를 위한 던전입니다.'\n          },\n          cave: {\n            name: '고블린 동굴',\n            description: '고블린들이 서식하는 위험한 동굴입니다.'\n          },\n          tower: {\n            name: '마법사의 탑',\n            description: '강력한 마법 몬스터들이 있는 탑입니다.'\n          }\n        },\n        items: {\n          sword1: '강철 검',\n          armor1: '가죽 갑옷',\n          helmet1: '철제 투구',\n          health_potion: '체력 물약',\n          mana_potion: '마나 물약',\n          greater_health_potion: '고급 체력 물약',\n          strength_potion: '힘의 물약',\n          defense_potion: '방어의 물약'\n        },\n        monsters: {\n          slime: '슬라임',\n          goblin: '고블린',\n          orc: '오크',\n          troll: '트롤',\n          dragon: '드래곤'\n        },\n        combat: {\n          appeared: '이 나타났다!',\n          attack: '의 공격!',\n          damage: '데미지!',\n          critical: '치명타!',\n          levelUp: '🎉 레벨업! Lv.',\n          defeated: '를 물리쳤다! EXP +',\n          gold: ', 골드 +',\n          itemObtained: '✨ 을 획득했습니다!',\n          dungeonCleared: '🎉  던전을 클리어했습니다!',\n          nextFloor: '층으로 자동 진행합니다!',\n          dungeonExited: '던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',\n          hpMpRecovered: '체력과 마나가 완전히 회복되었습니다!',\n          defeat: '전투에서 패배했습니다...'\n        }\n      },\n      en: {\n        character: {\n          name: 'Hero',\n          class: 'Warrior'\n        },\n        skills: {\n          slash: {\n            name: 'Power Slash',\n            description: 'Delivers a powerful strike.'\n          },\n          heal: {\n            name: 'Heal',\n            description: 'Restores HP.'\n          },\n          critical: {\n            name: 'Critical Mastery',\n            description: 'Increases critical hit chance.'\n          }\n        },\n        dungeons: {\n          forest: {\n            name: 'Dark Forest',\n            description: 'A dungeon for beginners.'\n          },\n          cave: {\n            name: 'Goblin Cave',\n            description: 'A dangerous cave inhabited by goblins.'\n          },\n          tower: {\n            name: 'Mage Tower',\n            description: 'A tower with powerful magic monsters.'\n          }\n        },\n        items: {\n          sword1: 'Steel Sword',\n          armor1: 'Leather Armor',\n          helmet1: 'Iron Helmet',\n          health_potion: 'Health Potion',\n          mana_potion: 'Mana Potion',\n          greater_health_potion: 'Greater Health Potion',\n          strength_potion: 'Strength Potion',\n          defense_potion: 'Defense Potion'\n        },\n        monsters: {\n          slime: 'Slime',\n          goblin: 'Goblin',\n          orc: 'Orc',\n          troll: 'Troll',\n          dragon: 'Dragon'\n        },\n        combat: {\n          appeared: ' appeared!',\n          attack: \"'s attack!\",\n          damage: ' damage!',\n          critical: ' (Critical!)',\n          levelUp: '🎉 Level up! Lv.',\n          defeated: ' defeated! EXP +',\n          gold: ', Gold +',\n          itemObtained: '✨ obtained!',\n          dungeonCleared: '🎉  dungeon cleared!',\n          nextFloor: 'Proceeding to floor  automatically!',\n          dungeonExited: 'Automatically exited dungeon. HP and MP fully restored!',\n          hpMpRecovered: 'HP and MP fully restored!',\n          defeat: 'Defeated in battle...'\n        }\n      },\n      zh: {\n        character: {\n          name: '勇者',\n          class: '战士'\n        },\n        skills: {\n          slash: {\n            name: '强力斩击',\n            description: '发动强力一击。'\n          },\n          heal: {\n            name: '治疗',\n            description: '恢复生命值。'\n          },\n          critical: {\n            name: '暴击精通',\n            description: '增加暴击几率。'\n          }\n        },\n        dungeons: {\n          forest: {\n            name: '黑暗森林',\n            description: '适合新手的地下城。'\n          },\n          cave: {\n            name: '哥布林洞穴',\n            description: '哥布林栖息的危险洞穴。'\n          },\n          tower: {\n            name: '法师塔',\n            description: '有强力魔法怪物的塔。'\n          }\n        },\n        items: {\n          sword1: '钢铁剑',\n          armor1: '皮甲',\n          helmet1: '铁盔',\n          health_potion: '生命药水',\n          mana_potion: '魔法药水',\n          greater_health_potion: '高级生命药水',\n          strength_potion: '力量药水',\n          defense_potion: '防御药水'\n        },\n        monsters: {\n          slime: '史莱姆',\n          goblin: '哥布林',\n          orc: '兽人',\n          troll: '巨魔',\n          dragon: '龙'\n        },\n        combat: {\n          appeared: '出现了！',\n          attack: '的攻击！',\n          damage: '伤害！',\n          critical: '暴击！',\n          levelUp: '🎉 升级！Lv.',\n          defeated: '被击败！经验 +',\n          gold: '，金币 +',\n          itemObtained: '✨ 获得了！',\n          dungeonCleared: '🎉 地下城通关！',\n          nextFloor: '自动前往第 层！',\n          dungeonExited: '自动离开地下城。生命值和魔法值完全恢复！',\n          hpMpRecovered: '生命值和魔法值完全恢复！',\n          defeat: '战斗失败...'\n        }\n      }\n    };\n\n    // 현재 언어 가져오기 (기본값: 한국어)\n    const currentLang = localStorage.getItem('language') || 'ko';\n    const texts = translations[currentLang] || translations.ko;\n    // 모든 스킬 정의 함수 (공통 사용)\n    const getAllSkills = (currentLevel, existingSkills) => {\n      var _existingSkills$find;\n      const allSkills = [\n      // 전투 스킬 (레벨 1)\n      {\n        id: 'slash',\n        name: '강력한 베기',\n        level: (existingSkills === null || existingSkills === void 0 ? void 0 : (_existingSkills$find = existingSkills.find(s => s.id === 'slash')) === null || _existingSkills$find === void 0 ? void 0 : _existingSkills$find.level) || 0,\n        maxLevel: 10,\n        baseDamage: 20,\n        damageMultiplier: 0.5,\n        statMultiplier: {\n          attack: 2.0\n        },\n        manaCost: 10,\n        cooldown: 3000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'combat',\n        description: '강력한 일격을 가합니다. (기본 데미지 + 공격력 x 2.0)',\n        requiredLevel: 1,\n        isUnlocked: currentLevel >= 1,\n        isLearned: false\n      }, {\n        id: 'heal',\n        name: '치유',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 30,\n        damageMultiplier: 0.3,\n        statMultiplier: {\n          mp: 1.5\n        },\n        manaCost: 15,\n        cooldown: 5000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'support',\n        description: 'HP를 회복합니다. (기본 회복량 + 마나 x 1.5)',\n        requiredLevel: 1,\n        isUnlocked: currentLevel >= 1,\n        isLearned: false\n      }, {\n        id: 'critical',\n        name: '치명타 숙련',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: {},\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: 'passive',\n        category: 'passive',\n        description: '치명타 확률을 증가시킵니다. (레벨당 +2%)',\n        requiredLevel: 1,\n        isUnlocked: currentLevel >= 1,\n        isLearned: false\n      },\n      // 레벨 5 스킬\n      {\n        id: 'double_strike',\n        name: '이중 공격',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 25,\n        damageMultiplier: 0.4,\n        statMultiplier: {\n          attack: 1.5\n        },\n        manaCost: 20,\n        cooldown: 4000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'combat',\n        description: '연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)',\n        requiredLevel: 5,\n        isUnlocked: currentLevel >= 5,\n        isLearned: false\n      }, {\n        id: 'mana_shield',\n        name: '마나 방패',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 20,\n        damageMultiplier: 0.2,\n        statMultiplier: {\n          mp: 1.0,\n          defense: 0.5\n        },\n        manaCost: 25,\n        cooldown: 8000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'magic',\n        description: '마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)',\n        requiredLevel: 5,\n        isUnlocked: currentLevel >= 5,\n        isLearned: false\n      }, {\n        id: 'defense_mastery',\n        name: '방어 숙련',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: {},\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: 'passive',\n        category: 'passive',\n        description: '방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)',\n        requiredLevel: 5,\n        isUnlocked: currentLevel >= 5,\n        isLearned: false\n      },\n      // 레벨 10 스킬\n      {\n        id: 'whirlwind',\n        name: '회오리 공격',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 40,\n        damageMultiplier: 0.6,\n        statMultiplier: {\n          attack: 1.8\n        },\n        manaCost: 35,\n        cooldown: 6000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'combat',\n        description: '주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)',\n        requiredLevel: 10,\n        isUnlocked: currentLevel >= 10,\n        isLearned: false\n      }, {\n        id: 'regeneration',\n        name: '재생',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 50,\n        damageMultiplier: 0.4,\n        statMultiplier: {\n          hp: 0.1,\n          mp: 2.0\n        },\n        manaCost: 40,\n        cooldown: 12000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'support',\n        description: '지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)',\n        requiredLevel: 10,\n        isUnlocked: currentLevel >= 10,\n        isLearned: false\n      }, {\n        id: 'mp_efficiency',\n        name: '마나 효율',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: {},\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: 'passive',\n        category: 'passive',\n        description: '모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)',\n        requiredLevel: 10,\n        isUnlocked: currentLevel >= 10,\n        isLearned: false\n      },\n      // 레벨 15 스킬\n      {\n        id: 'meteor',\n        name: '메테오',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 80,\n        damageMultiplier: 1.0,\n        statMultiplier: {\n          mp: 3.0,\n          attack: 1.0\n        },\n        manaCost: 60,\n        cooldown: 10000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'magic',\n        description: '강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)',\n        requiredLevel: 15,\n        isUnlocked: currentLevel >= 15,\n        isLearned: false\n      }, {\n        id: 'time_stop',\n        name: '시간 정지',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: {\n          mp: 1.0\n        },\n        manaCost: 80,\n        cooldown: 15000,\n        currentCooldown: 0,\n        type: 'active',\n        category: 'magic',\n        description: '모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)',\n        requiredLevel: 15,\n        isUnlocked: currentLevel >= 15,\n        isLearned: false\n      }, {\n        id: 'exp_boost',\n        name: '경험치 증폭',\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: {},\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: 'passive',\n        category: 'passive',\n        description: '획득하는 경험치를 증가시킵니다. (레벨당 +10%)',\n        requiredLevel: 15,\n        isUnlocked: currentLevel >= 15,\n        isLearned: false\n      }];\n\n      // 해금된 스킬만 반환\n      return allSkills.filter(skill => skill.isUnlocked);\n    };\n    const initialSkills = getAllSkills(1);\n\n    // 던전 초기화\n    const initialDungeons = [{\n      id: 'forest',\n      name: '어둠의 숲',\n      level: 1,\n      description: '초보자를 위한 던전입니다.',\n      floors: 10,\n      currentFloor: 1,\n      clearedFloors: new Set(),\n      monsters: [],\n      rewards: {\n        goldRange: [10, 25],\n        expRange: [15, 30],\n        itemDropChance: 0.1\n      },\n      requiredLevel: 1,\n      isUnlocked: true\n    }, {\n      id: 'cave',\n      name: '고블린 동굴',\n      level: 5,\n      description: '고블린들이 서식하는 위험한 동굴입니다.',\n      floors: 15,\n      currentFloor: 1,\n      clearedFloors: new Set(),\n      monsters: [],\n      rewards: {\n        goldRange: [25, 50],\n        expRange: [40, 75],\n        itemDropChance: 0.15\n      },\n      requiredLevel: 5,\n      isUnlocked: false\n    }, {\n      id: 'tower',\n      name: '마법사의 탑',\n      level: 10,\n      description: '강력한 마법 몬스터들이 있는 탑입니다.',\n      floors: 20,\n      currentFloor: 1,\n      clearedFloors: new Set(),\n      monsters: [],\n      rewards: {\n        goldRange: [50, 100],\n        expRange: [80, 150],\n        itemDropChance: 0.2\n      },\n      requiredLevel: 10,\n      isUnlocked: false\n    }, {\n      id: 'abyss',\n      name: '심연의 던전',\n      level: 20,\n      description: '업데이트 예정 - 최강의 도전자들을 위한 던전입니다.',\n      floors: 50,\n      currentFloor: 1,\n      clearedFloors: new Set(),\n      monsters: [],\n      rewards: {\n        goldRange: [100, 200],\n        expRange: [200, 300],\n        itemDropChance: 0.3\n      },\n      requiredLevel: 20,\n      isUnlocked: false,\n      isComingSoon: true // 업데이트 예정 플래그\n    }];\n\n    // 상점 아이템 초기화 (기본 아이템들)\n    const getShopItems = () => {\n      var _availableDungeons$fi;\n      const baseItems = [{\n        id: 'sword1',\n        name: '강철 검',\n        type: 'weapon',\n        rarity: 'common',\n        level: 1,\n        stats: {\n          attack: 15\n        },\n        price: 200,\n        enhancement: 0\n      }, {\n        id: 'armor1',\n        name: '가죽 갑옷',\n        type: 'armor',\n        rarity: 'common',\n        level: 1,\n        stats: {\n          defense: 10,\n          hp: 20\n        },\n        price: 150,\n        enhancement: 0\n      }, {\n        id: 'helmet1',\n        name: '철제 투구',\n        type: 'helmet',\n        rarity: 'common',\n        level: 1,\n        stats: {\n          defense: 5,\n          hp: 15\n        },\n        price: 100,\n        enhancement: 0\n      },\n      // 기본 물약들\n      {\n        id: 'health_potion',\n        name: '체력 물약',\n        type: 'consumable',\n        rarity: 'common',\n        level: 1,\n        stats: {},\n        price: 50,\n        enhancement: 0,\n        consumableEffect: {\n          healHp: 50\n        },\n        quantity: 1\n      }, {\n        id: 'mana_potion',\n        name: '마나 물약',\n        type: 'consumable',\n        rarity: 'common',\n        level: 1,\n        stats: {},\n        price: 40,\n        enhancement: 0,\n        consumableEffect: {\n          healMp: 30\n        },\n        quantity: 1\n      }];\n\n      // 고블린 동굴이 해금되면 고급 아이템 추가\n      const goblinCaveUnlocked = (_availableDungeons$fi = availableDungeons.find(d => d.id === 'goblin_cave')) === null || _availableDungeons$fi === void 0 ? void 0 : _availableDungeons$fi.isUnlocked;\n      if (goblinCaveUnlocked) {\n        baseItems.push(\n        // 고급 장비\n        {\n          id: 'steel_sword',\n          name: '강화 강철 검',\n          type: 'weapon',\n          rarity: 'rare',\n          level: 3,\n          stats: {\n            attack: 25\n          },\n          price: 500,\n          enhancement: 0\n        }, {\n          id: 'plate_armor',\n          name: '판금 갑옷',\n          type: 'armor',\n          rarity: 'rare',\n          level: 3,\n          stats: {\n            defense: 20,\n            hp: 40\n          },\n          price: 400,\n          enhancement: 0\n        }, {\n          id: 'steel_helmet',\n          name: '강철 투구',\n          type: 'helmet',\n          rarity: 'rare',\n          level: 3,\n          stats: {\n            defense: 12,\n            hp: 25\n          },\n          price: 300,\n          enhancement: 0\n        },\n        // 고급 물약들\n        {\n          id: 'greater_health_potion',\n          name: '고급 체력 물약',\n          type: 'consumable',\n          rarity: 'rare',\n          level: 2,\n          stats: {},\n          price: 120,\n          enhancement: 0,\n          consumableEffect: {\n            healHp: 120\n          },\n          quantity: 1\n        }, {\n          id: 'greater_mana_potion',\n          name: '고급 마나 물약',\n          type: 'consumable',\n          rarity: 'rare',\n          level: 2,\n          stats: {},\n          price: 100,\n          enhancement: 0,\n          consumableEffect: {\n            healMp: 80\n          },\n          quantity: 1\n        }, {\n          id: 'strength_potion',\n          name: '힘의 물약',\n          type: 'consumable',\n          rarity: 'rare',\n          level: 2,\n          stats: {},\n          price: 150,\n          enhancement: 0,\n          consumableEffect: {\n            buffType: 'attack',\n            buffAmount: 10,\n            buffDuration: 30000\n          },\n          quantity: 1\n        }, {\n          id: 'defense_potion',\n          name: '방어의 물약',\n          type: 'consumable',\n          rarity: 'rare',\n          level: 2,\n          stats: {},\n          price: 150,\n          enhancement: 0,\n          consumableEffect: {\n            buffType: 'defense',\n            buffAmount: 8,\n            buffDuration: 30000\n          },\n          quantity: 1\n        });\n      }\n      return baseItems;\n    };\n    const shopItems = getShopItems();\n    setCharacter(prev => ({\n      ...prev,\n      name: texts.character.name,\n      class: texts.character.class,\n      skills: initialSkills\n    }));\n    setAvailableDungeons(initialDungeons);\n    setShop(shopItems);\n    // Store texts globally for other functions to use\n    window.gameTexts = texts;\n\n    // 던전에 있지 않을 때만 일반 몬스터 생성\n    if (!inDungeon) {\n      spawnMonster();\n    }\n  };\n\n  // 던전 해금 상태에 따른 상점 업데이트\n  useEffect(() => {\n    const updateShop = () => {\n      const getShopItems = () => {\n        var _availableDungeons$fi2, _availableDungeons$fi3;\n        const baseItems = [{\n          id: 'sword1',\n          name: '강철 검',\n          type: 'weapon',\n          rarity: 'common',\n          level: 1,\n          stats: {\n            attack: 15\n          },\n          price: 200,\n          enhancement: 0\n        }, {\n          id: 'armor1',\n          name: '가죽 갑옷',\n          type: 'armor',\n          rarity: 'common',\n          level: 1,\n          stats: {\n            defense: 10,\n            hp: 20\n          },\n          price: 150,\n          enhancement: 0\n        }, {\n          id: 'helmet1',\n          name: '철제 투구',\n          type: 'helmet',\n          rarity: 'common',\n          level: 1,\n          stats: {\n            defense: 5,\n            hp: 15\n          },\n          price: 100,\n          enhancement: 0\n        },\n        // 기본 물약들\n        {\n          id: 'health_potion',\n          name: '체력 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 50,\n          enhancement: 0,\n          consumableEffect: {\n            healHp: 50\n          },\n          quantity: 1\n        }, {\n          id: 'mana_potion',\n          name: '마나 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 40,\n          enhancement: 0,\n          consumableEffect: {\n            healMp: 30\n          },\n          quantity: 1\n        }];\n\n        // 고블린 동굴이 해금되면 고급 아이템 추가\n        const goblinCaveUnlocked = (_availableDungeons$fi2 = availableDungeons.find(d => d.id === 'goblin_cave')) === null || _availableDungeons$fi2 === void 0 ? void 0 : _availableDungeons$fi2.isUnlocked;\n        if (goblinCaveUnlocked) {\n          // 중복 방지: 이미 있는 아이템은 추가하지 않음\n          const existingIds = baseItems.map(item => item.id);\n          const newItems = [{\n            id: 'steel_sword',\n            name: '강화 강철 검',\n            type: 'weapon',\n            rarity: 'rare',\n            level: 3,\n            stats: {\n              attack: 25\n            },\n            price: 500,\n            enhancement: 0\n          }, {\n            id: 'plate_armor',\n            name: '판금 갑옷',\n            type: 'armor',\n            rarity: 'rare',\n            level: 3,\n            stats: {\n              defense: 20,\n              hp: 40\n            },\n            price: 400,\n            enhancement: 0\n          }, {\n            id: 'steel_helmet',\n            name: '강철 투구',\n            type: 'helmet',\n            rarity: 'rare',\n            level: 3,\n            stats: {\n              defense: 12,\n              hp: 25\n            },\n            price: 300,\n            enhancement: 0\n          }, {\n            id: 'greater_health_potion',\n            name: '고급 체력 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 120,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 120\n            },\n            quantity: 1\n          }, {\n            id: 'greater_mana_potion',\n            name: '고급 마나 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 100,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 80\n            },\n            quantity: 1\n          }, {\n            id: 'strength_potion',\n            name: '힘의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'attack',\n              buffAmount: 10,\n              buffDuration: 30000\n            },\n            quantity: 1\n          }, {\n            id: 'defense_potion',\n            name: '방어의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'defense',\n              buffAmount: 8,\n              buffDuration: 30000\n            },\n            quantity: 1\n          }].filter(item => !existingIds.includes(item.id));\n          baseItems.push(...newItems);\n        }\n\n        // 마법사의 탑이 해금되면 최고급 아이템 추가\n        const wizardTowerUnlocked = (_availableDungeons$fi3 = availableDungeons.find(d => d.id === 'wizard_tower')) === null || _availableDungeons$fi3 === void 0 ? void 0 : _availableDungeons$fi3.isUnlocked;\n        if (wizardTowerUnlocked) {\n          const existingIds = baseItems.map(item => item.id);\n          const wizardItems = [{\n            id: 'enchanted_sword',\n            name: '마법 부여 검',\n            type: 'weapon',\n            rarity: 'epic',\n            level: 5,\n            stats: {\n              attack: 40,\n              mp: 20\n            },\n            price: 1200,\n            enhancement: 0\n          }, {\n            id: 'dragon_armor',\n            name: '드래곤 갑옷',\n            type: 'armor',\n            rarity: 'epic',\n            level: 5,\n            stats: {\n              defense: 35,\n              hp: 80\n            },\n            price: 1000,\n            enhancement: 0\n          }, {\n            id: 'mystic_helmet',\n            name: '신비의 투구',\n            type: 'helmet',\n            rarity: 'epic',\n            level: 5,\n            stats: {\n              defense: 20,\n              hp: 40,\n              mp: 30\n            },\n            price: 800,\n            enhancement: 0\n          }, {\n            id: 'supreme_health_potion',\n            name: '최고급 체력 물약',\n            type: 'consumable',\n            rarity: 'epic',\n            level: 3,\n            stats: {},\n            price: 300,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 250\n            },\n            quantity: 1\n          }, {\n            id: 'supreme_mana_potion',\n            name: '최고급 마나 물약',\n            type: 'consumable',\n            rarity: 'epic',\n            level: 3,\n            stats: {},\n            price: 250,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 200\n            },\n            quantity: 1\n          }, {\n            id: 'berserker_potion',\n            name: '광전사의 물약',\n            type: 'consumable',\n            rarity: 'epic',\n            level: 3,\n            stats: {},\n            price: 400,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'attack',\n              buffAmount: 25,\n              buffDuration: 60000\n            },\n            quantity: 1\n          }, {\n            id: 'guardian_potion',\n            name: '수호자의 물약',\n            type: 'consumable',\n            rarity: 'epic',\n            level: 3,\n            stats: {},\n            price: 400,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'defense',\n              buffAmount: 20,\n              buffDuration: 60000\n            },\n            quantity: 1\n          }].filter(item => !existingIds.includes(item.id));\n          baseItems.push(...wizardItems);\n        }\n        return baseItems;\n      };\n      setShop(getShopItems());\n    };\n    updateShop();\n  }, [availableDungeons]);\n\n  // 레벨업 시 스킬 업데이트\n  useEffect(() => {\n    const updateSkills = () => {\n      setCharacter(prev => {\n        // 기존 스킬들의 해금 상태만 업데이트\n        const updatedSkills = prev.skills.map(skill => ({\n          ...skill,\n          isUnlocked: prev.level >= (skill.requiredLevel || 1)\n        }));\n        return {\n          ...prev,\n          skills: updatedSkills\n        };\n      });\n    };\n    updateSkills();\n  }, [character.level]);\n\n  // 스킬 사용 함수 (수정된 데미지 계산 포함)\n  const executeSkill = skill => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    if (character.mp < skill.manaCost) {\n      addToCombatLog('마나가 부족합니다!');\n      return;\n    }\n    if (skill.currentCooldown > 0) {\n      addToCombatLog('스킬이 재사용 대기 중입니다!');\n      return;\n    }\n    const damage = calculateSkillDamage(skill, character);\n\n    // 스킬 사용 로직\n    if (skill.id === 'heal' || skill.id === 'regeneration') {\n      // 힐링 스킬\n      const healAmount = damage;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);\n    } else if (currentMonster) {\n      // 공격 스킬\n      const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n      setCurrentMonster(prev => prev ? {\n        ...prev,\n        hp: newMonsterHp\n      } : null);\n      setCharacter(prev => ({\n        ...prev,\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);\n      if (newMonsterHp === 0) {\n        setTimeout(defeatMonster, 500);\n      }\n    }\n\n    // 쿨다운 설정\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => s.id === skill.id ? {\n        ...s,\n        currentCooldown: skill.cooldown\n      } : s)\n    }));\n  };\n\n  // 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\n  const learnSkill = skill => {\n    if (skill.level > 0) {\n      addToCombatLog('이미 배운 스킬입니다!');\n      return;\n    }\n    const cost = 100; // 스킬 배우기 비용\n    if (character.gold < cost) {\n      addToCombatLog('골드가 부족합니다!');\n      return;\n    }\n    setCharacter(prev => ({\n      ...prev,\n      gold: prev.gold - cost,\n      skills: prev.skills.map(s => s.id === skill.id ? {\n        ...s,\n        level: 1,\n        isLearned: true\n      } : s)\n    }));\n    addToCombatLog(`${skill.name}을(를) 배웠습니다!`);\n  };\n\n  // 스킬 렌더링 함수 (분류별)\n  // 스킬 아이콘 맵핑\n  const getSkillIcon = skill => {\n    const iconMap = {\n      // 전투 스킬\n      'basic-attack': '⚔️',\n      'power-strike': '💥',\n      'fire-slash': '🔥',\n      'lightning-bolt': '⚡',\n      'ice-shard': '❄️',\n      'double-attack': '⚔️⚔️',\n      // 지원 스킬\n      'heal': '💚',\n      'mana-recovery': '💙',\n      'shield': '🛡️',\n      'haste': '💨',\n      'blessing': '✨',\n      // 패시브 스킬\n      'strength-boost': '💪',\n      'defense-boost': '🛡️',\n      'agility-boost': '🏃',\n      'mana-boost': '🔮',\n      'critical-chance': '💎',\n      'vampire': '🩸'\n    };\n    return iconMap[skill.id] || '📜';\n  };\n\n  // 선택된 스킬 상태\n  const [selectedSkill, setSelectedSkill] = useState(null);\n\n  // 스킬 탭 내부의 서브 탭 상태\n  const [skillSubTab, setSkillSubTab] = React.useState('combat');\n\n  // 스킬 탭 컨텐츠 렌더링 (탭 분리)\n  const renderSkillsTab = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#1f2937',\n      minHeight: '600px'\n    },\n    children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 0 10px 0',\n          fontSize: '24px'\n        },\n        children: \"\\u2728 \\uC2A4\\uD0AC \\uD2B8\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          opacity: 0.9\n        },\n        children: \"\\uC2A4\\uD0AC\\uC744 \\uBC30\\uC6B0\\uACE0 \\uB808\\uBCA8\\uC5C5\\uD558\\uC5EC \\uB354\\uC6B1 \\uAC15\\uD574\\uC9C0\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        background: 'rgba(255, 255, 255, 0.1)',\n        borderRadius: '10px',\n        marginBottom: '20px',\n        overflow: 'hidden'\n      },\n      children: [{\n        id: 'combat',\n        label: '⚔️ 전투 스킬',\n        color: '#dc2626'\n      }, {\n        id: 'support',\n        label: '💚 지원 스킬',\n        color: '#10b981'\n      }, {\n        id: 'passive',\n        label: '🛡️ 패시브 스킬',\n        color: '#f59e0b'\n      }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSkillSubTab(tab.id),\n        style: {\n          flex: 1,\n          padding: '15px 20px',\n          background: skillSubTab === tab.id ? `linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)` : 'transparent',\n          color: skillSubTab === tab.id ? 'white' : '#9ca3af',\n          border: 'none',\n          cursor: 'pointer',\n          fontSize: '14px',\n          fontWeight: skillSubTab === tab.id ? 'bold' : 'normal',\n          transition: 'all 0.3s ease'\n        },\n        children: tab.label\n      }, tab.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 7\n    }, this), skillSubTab === 'combat' && renderSkillsByCategory('combat'), skillSubTab === 'combat' && renderSkillsByCategory('magic'), \" \", skillSubTab === 'support' && renderSkillsByCategory('support'), skillSubTab === 'passive' && renderSkillsByCategory('passive')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1358,\n    columnNumber: 5\n  }, this);\n\n  // 몬스터 생성\n  const spawnMonster = () => {\n    // 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\n    if (currentMonster || inDungeon) {\n      return;\n    }\n    const gameTexts = window.gameTexts || {\n      monsters: {\n        slime: '슬라임',\n        goblin: '고블린',\n        orc: '오크',\n        troll: '트롤',\n        dragon: '드래곤'\n      },\n      combat: {\n        appeared: '이 나타났다!'\n      }\n    };\n    const monsters = [{\n      name: gameTexts.monsters.slime,\n      baseHp: 40,\n      baseAttack: 8,\n      baseDefense: 2,\n      exp: 15,\n      gold: 10,\n      minLevel: 1,\n      maxLevel: 3\n    }, {\n      name: gameTexts.monsters.goblin,\n      baseHp: 60,\n      baseAttack: 12,\n      baseDefense: 4,\n      exp: 25,\n      gold: 18,\n      minLevel: 3,\n      maxLevel: 6\n    }, {\n      name: gameTexts.monsters.orc,\n      baseHp: 100,\n      baseAttack: 18,\n      baseDefense: 8,\n      exp: 40,\n      gold: 30,\n      minLevel: 6,\n      maxLevel: 10\n    }, {\n      name: gameTexts.monsters.troll,\n      baseHp: 150,\n      baseAttack: 25,\n      baseDefense: 12,\n      exp: 60,\n      gold: 45,\n      minLevel: 10,\n      maxLevel: 15\n    }, {\n      name: gameTexts.monsters.dragon,\n      baseHp: 300,\n      baseAttack: 40,\n      baseDefense: 20,\n      exp: 120,\n      gold: 100,\n      minLevel: 15,\n      maxLevel: 999\n    }];\n\n    // 캐릭터 레벨에 적합한 몬스터만 필터링\n    const availableMonsters = monsters.filter(monster => character.level >= monster.minLevel && character.level <= monster.maxLevel);\n\n    // 적합한 몬스터가 없으면 레벨 범위를 확장\n    const finalMonsters = availableMonsters.length > 0 ? availableMonsters : monsters.filter(monster => Math.abs(character.level - monster.minLevel) <= 2);\n    const randomMonster = finalMonsters[Math.floor(Math.random() * finalMonsters.length)];\n    const levelMultiplier = 1 + (character.level - 1) * 0.3;\n    const monster = {\n      id: `monster_${Date.now()}`,\n      name: randomMonster.name,\n      level: Math.max(1, character.level + Math.floor(Math.random() * 3 - 1)),\n      hp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      attack: Math.floor(randomMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(randomMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(randomMonster.exp * levelMultiplier),\n      gold: Math.floor(randomMonster.gold * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: Math.random() < 0.1 // 10% 보스 확률\n    };\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 3;\n      monster.maxHp *= 3;\n      monster.attack *= 2;\n      monster.defense *= 2;\n      monster.exp *= 5;\n      monster.gold *= 3;\n    }\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);\n  };\n\n  // 드롭 아이템 생성\n  const generateDropItems = () => {\n    const dropChance = Math.random();\n    if (dropChance < 0.1) {\n      // 10% 확률로 아이템 드롭\n      const rarities = ['common', 'rare', 'epic', 'legendary', 'mythic'];\n      const rarity = rarities[Math.floor(Math.random() * rarities.length)];\n      const itemTypes = ['weapon', 'armor', 'helmet', 'boots', 'ring', 'amulet'];\n      const itemType = itemTypes[Math.floor(Math.random() * itemTypes.length)];\n      return [{\n        id: `drop_${Date.now()}`,\n        name: generateItemName(rarity, itemType),\n        type: itemType,\n        rarity,\n        level: character.level,\n        stats: generateItemStats(rarity),\n        price: calculateItemPrice(rarity, character.level),\n        enhancement: 0\n      }];\n    }\n    return [];\n  };\n  const generateItemName = (rarity, itemType) => {\n    const prefixes = {\n      common: ['낡은', '일반적인', '기본'],\n      rare: ['날카로운', '튼튼한', '마법의'],\n      epic: ['전설적인', '고대의', '신성한'],\n      legendary: ['전설의', '영웅의', '불멸의'],\n      mythic: ['신화의', '창조의', '절대의']\n    };\n    const itemNames = {\n      weapon: ['검', '도끼', '창', '활', '지팡이'],\n      armor: ['갑옷', '로브', '사슬갑옷', '가죽갑옷'],\n      helmet: ['투구', '모자', '관', '헬름'],\n      boots: ['신발', '부츠', '장화', '샌들'],\n      ring: ['반지', '링', '밴드'],\n      amulet: ['목걸이', '부적', '펜던트']\n    };\n    const prefix = prefixes[rarity][Math.floor(Math.random() * 3)];\n    const itemTypeNames = itemNames[itemType] || ['아이템'];\n    const item = itemTypeNames[Math.floor(Math.random() * itemTypeNames.length)];\n    return `${prefix} ${item}`;\n  };\n  const generateItemStats = rarity => {\n    const multipliers = {\n      common: 1,\n      rare: 1.5,\n      epic: 2.5,\n      legendary: 4,\n      mythic: 7\n    };\n    const base = multipliers[rarity];\n    return {\n      attack: Math.floor(Math.random() * 20 * base),\n      defense: Math.floor(Math.random() * 15 * base),\n      hp: Math.floor(Math.random() * 50 * base),\n      mp: Math.floor(Math.random() * 30 * base),\n      speed: Math.floor(Math.random() * 10 * base),\n      critRate: Math.floor(Math.random() * 10 * base),\n      critDamage: Math.floor(Math.random() * 20 * base)\n    };\n  };\n  const calculateItemPrice = (rarity, level) => {\n    const basePrice = {\n      common: 50,\n      rare: 150,\n      epic: 500,\n      legendary: 2000,\n      mythic: 10000\n    };\n    return Math.floor(basePrice[rarity] * (1 + level * 0.2));\n  };\n\n  // 전투 시스템\n  const attack = () => {\n    if (!currentMonster) return;\n    const buffedAttack = character.attack + character.buffs.attack.amount;\n    const damage = calculateDamage(buffedAttack, currentMonster.defense);\n    const isCritical = Math.random() < 0.1 + character.stats.luck * 0.01;\n    const finalDamage = isCritical ? Math.floor(damage * 1.5) : damage;\n    const newMonsterHp = Math.max(0, currentMonster.hp - finalDamage);\n    setCurrentMonster(prev => prev ? {\n      ...prev,\n      hp: newMonsterHp\n    } : null);\n    const gameTexts = window.gameTexts || {\n      combat: {\n        attack: '의 공격!',\n        damage: '데미지!',\n        critical: '치명타!'\n      }\n    };\n    addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical ? ` (${gameTexts.combat.critical})` : ''} ${gameTexts.combat.damage}`);\n    onAction('combat_attack', {\n      user_id: currentUser.user_id,\n      damage: finalDamage,\n      is_critical: isCritical,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      character_attack: character.attack,\n      monster_hp_remaining: newMonsterHp,\n      dungeon_name: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.name) || null,\n      dungeon_floor: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.currentFloor) || null\n    });\n    if (newMonsterHp <= 0) {\n      defeatMonster();\n    } else {\n      // 몬스터 반격\n      setTimeout(() => monsterAttack(), 1000);\n    }\n  };\n  const monsterAttack = () => {\n    if (!currentMonster || currentMonster.hp <= 0) return;\n    const buffedDefense = character.defense + character.buffs.defense.amount;\n    const damage = calculateDamage(currentMonster.attack, buffedDefense);\n    const newHp = Math.max(0, character.hp - damage);\n    setCharacter(prev => ({\n      ...prev,\n      hp: newHp\n    }));\n    const gameTexts = window.gameTexts || {\n      combat: {\n        attack: '의 공격!',\n        damage: '데미지!'\n      }\n    };\n    addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);\n    if (newHp <= 0) {\n      const gameTexts = window.gameTexts || {\n        combat: {\n          defeat: '전투에서 패배했습니다...'\n        }\n      };\n      addToCombatLog(gameTexts.combat.defeat);\n      setIsAutoFighting(false);\n\n      // 전투 실패 이벤트 로깅\n      onAction('combat_defeat', {\n        monster_name: currentMonster.name,\n        monster_level: currentMonster.level,\n        character_level: character.level,\n        dungeon_id: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.id) || 'field',\n        dungeon_name: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.name) || 'field',\n        damage_taken: currentMonster.attack,\n        character_defense: character.defense\n      });\n\n      // 던전에서 나가고 체력/마나 완전 회복\n      setTimeout(() => {\n        setCharacter(prev => ({\n          ...prev,\n          hp: prev.maxHp,\n          mp: prev.maxMp\n        }));\n        if (inDungeon && currentDungeon) {\n          // 던전에서 나가기 (죽음으로 인한 자동 퇴장)\n          onAction('dungeon_exited', {\n            dungeon_id: currentDungeon.id,\n            dungeon_name: currentDungeon.name,\n            current_floor: currentDungeon.currentFloor,\n            total_floors: currentDungeon.floors,\n            character_level: character.level,\n            exit_reason: 'death',\n            time_spent: new Date().getTime()\n          });\n          setInDungeon(false);\n          setCurrentDungeon(null);\n          setCurrentTab('lobby');\n          setGameMode('lobby');\n          addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n        } else {\n          // 일반 필드에서는 새 몬스터 스폰\n          addToCombatLog('체력과 마나가 완전히 회복되었습니다!');\n          spawnMonster();\n        }\n      }, 2000);\n    }\n  };\n  const calculateDamage = (attack, defense) => {\n    const baseDamage = Math.max(1, attack - Math.floor(defense * 0.5));\n    return Math.floor(baseDamage * (0.8 + Math.random() * 0.4));\n  };\n  const defeatMonster = () => {\n    if (!currentMonster) return;\n    const expGained = currentMonster.exp;\n    const goldGained = currentMonster.gold;\n    setCharacter(prev => {\n      let newExp = prev.exp + expGained;\n      const newGold = prev.gold + goldGained;\n      let newLevel = prev.level;\n      let newMaxExp = prev.maxExp;\n      let newHp = prev.hp;\n      let newMp = prev.mp;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let availablePoints = prev.stats.availablePoints;\n\n      // 레벨업 체크\n      while (newExp >= newMaxExp) {\n        newLevel += 1;\n        newExp -= newMaxExp;\n        newMaxExp = Math.floor(newMaxExp * 1.5);\n        newMaxHp += 20;\n        newMaxMp += 10;\n        newHp = newMaxHp; // 레벨업 시 체력 완전 회복\n        newMp = newMaxMp; // 레벨업 시 마나 완전 회복\n        availablePoints += 5;\n        addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);\n        onAction('level_up', {\n          user_id: currentUser.user_id,\n          new_level: newLevel,\n          character_class: prev.class,\n          stat_points_gained: 5\n        });\n\n        // 던전 해금 체크\n        setAvailableDungeons(prevDungeons => prevDungeons.map(dungeon => ({\n          ...dungeon,\n          isUnlocked: dungeon.isUnlocked || newLevel >= dungeon.requiredLevel\n        })));\n      }\n      return {\n        ...prev,\n        exp: newExp,\n        gold: newGold,\n        level: newLevel,\n        maxExp: newMaxExp,\n        hp: newHp,\n        mp: newMp,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        stats: {\n          ...prev.stats,\n          availablePoints\n        }\n      };\n    });\n\n    // 아이템 드롭 처리\n    if (currentMonster.dropItems.length > 0) {\n      setInventory(prev => [...prev, ...currentMonster.dropItems]);\n      addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);\n    }\n    addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);\n\n    // 추적 카운터 업데이트\n    setMonstersDefeated(prev => prev + 1);\n    setTotalGoldEarned(prev => prev + goldGained);\n    onAction('monster_defeated', {\n      user_id: currentUser.user_id,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      exp_gained: expGained,\n      gold_gained: goldGained,\n      items_dropped: currentMonster.dropItems.length,\n      character_attack: character.attack,\n      dungeon_name: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.name) || null,\n      dungeon_floor: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.currentFloor) || null\n    });\n\n    // 현재 몬스터 제거\n    setCurrentMonster(null);\n\n    // 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\n    if (inDungeon && currentDungeon) {\n      // 현재 층을 클리어한 것으로 마킹\n      const updatedDungeon = {\n        ...currentDungeon,\n        clearedFloors: new Set([...Array.from(currentDungeon.clearedFloors), currentDungeon.currentFloor])\n      };\n      setCurrentDungeon(updatedDungeon);\n\n      // 던전 리스트에서도 업데이트\n      setAvailableDungeons(prev => prev.map(d => d.id === updatedDungeon.id ? updatedDungeon : d));\n\n      // 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\n      addToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);\n      setTimeout(() => {\n        spawnDungeonMonster(updatedDungeon, true);\n      }, 2000);\n    } else {\n      // 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\n      if (!inDungeon) {\n        setTimeout(() => {\n          spawnMonster();\n        }, 2000);\n      }\n    }\n  };\n\n  // 다음 층으로 진행\n  const proceedToNextFloor = () => {\n    if (!currentDungeon) return;\n    const updatedDungeon = {\n      ...currentDungeon,\n      currentFloor: currentDungeon.currentFloor + 1\n    };\n    setCurrentDungeon(updatedDungeon);\n    setShowDungeonChoice(false);\n    setTimeout(() => {\n      spawnDungeonMonster(updatedDungeon, true); // 강제 스폰\n      addToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);\n    }, 500);\n  };\n\n  // 던전 나가기\n  const exitDungeonAfterVictory = () => {\n    if (!currentDungeon) return;\n\n    // 던전 나가기 이벤트 로깅\n    onAction('dungeon_exited', {\n      dungeon_id: currentDungeon.id,\n      dungeon_name: currentDungeon.name,\n      current_floor: currentDungeon.currentFloor,\n      total_floors: currentDungeon.floors,\n      character_level: character.level,\n      exit_reason: 'victory_choice',\n      time_spent: new Date().getTime()\n    });\n\n    // 던전 리셋 (현재 층을 1층으로 되돌림)\n    const resetDungeon = {\n      ...currentDungeon,\n      currentFloor: 1\n    };\n    setAvailableDungeons(prev => prev.map(d => d.id === resetDungeon.id ? resetDungeon : d));\n    setInDungeon(false);\n    setCurrentDungeon(null);\n    setCurrentTab('lobby');\n    setGameMode('lobby');\n    setShowDungeonChoice(false);\n\n    // 체력과 마나 완전 회복\n    setCharacter(prev => ({\n      ...prev,\n      hp: prev.maxHp,\n      mp: prev.maxMp\n    }));\n    addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n\n    // 새로운 일반 몬스터 생성\n    setTimeout(() => {\n      spawnMonster();\n    }, 1000);\n  };\n\n  // 자동 전투\n  useEffect(() => {\n    if (isAutoFighting && currentMonster && currentMonster.hp > 0 && character.hp > 0) {\n      const autoAttackTimer = setTimeout(() => {\n        attack();\n      }, 2000);\n      return () => clearTimeout(autoAttackTimer);\n    }\n  }, [isAutoFighting, currentMonster, character.hp]);\n\n  // 스킬 쿨다운 및 MP 회복\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + 1),\n        skills: prev.skills.map(skill => ({\n          ...skill,\n          currentCooldown: Math.max(0, skill.currentCooldown - 100)\n        })),\n        buffs: {\n          attack: {\n            amount: prev.buffs.attack.duration > 0 ? prev.buffs.attack.amount : 0,\n            duration: Math.max(0, prev.buffs.attack.duration - 100)\n          },\n          defense: {\n            amount: prev.buffs.defense.duration > 0 ? prev.buffs.defense.amount : 0,\n            duration: Math.max(0, prev.buffs.defense.duration - 100)\n          },\n          speed: {\n            amount: prev.buffs.speed.duration > 0 ? prev.buffs.speed.amount : 0,\n            duration: Math.max(0, prev.buffs.speed.duration - 100)\n          }\n        }\n      }));\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const addToCombatLog = message => {\n    setCombatLog(prev => {\n      const newLog = [...prev, message];\n      if (newLog.length > 50) newLog.shift();\n      return newLog;\n    });\n\n    // Auto-scroll to bottom immediately and with backup timing\n    if (logRef.current) {\n      logRef.current.scrollTop = logRef.current.scrollHeight;\n    }\n\n    // Additional scroll with slight delay to ensure content is rendered\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 10);\n\n    // Final backup scroll\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  // 스탯 분배\n  const allocateStatPoint = stat => {\n    if (character.stats.availablePoints <= 0) return;\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [stat]: prev.stats[stat] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      },\n      // 스탯에 따른 능력치 업데이트\n      attack: stat === 'strength' ? prev.attack + 2 : prev.attack,\n      defense: stat === 'vitality' ? prev.defense + 1 : prev.defense,\n      maxHp: stat === 'vitality' ? prev.maxHp + 10 : prev.maxHp,\n      maxMp: stat === 'intelligence' ? prev.maxMp + 5 : prev.maxMp,\n      speed: stat === 'agility' ? prev.speed + 1 : prev.speed\n    }));\n  };\n\n  // 아이템 장착\n  const equipItem = item => {\n    // 소비 아이템은 장착할 수 없음\n    if (item.type === 'consumable') {\n      return;\n    }\n\n    // 기존에 장착된 아이템이 있는지 확인\n    const slot = item.type;\n    const currentEquippedItem = character.equipment[slot];\n    setCharacter(prev => {\n      const newEquipment = {\n        ...prev.equipment\n      };\n      newEquipment[slot] = item;\n\n      // 기존 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n      if (currentEquippedItem) {\n        if (currentEquippedItem.stats.attack) newAttack -= currentEquippedItem.stats.attack;\n        if (currentEquippedItem.stats.defense) newDefense -= currentEquippedItem.stats.defense;\n        if (currentEquippedItem.stats.hp) newMaxHp -= currentEquippedItem.stats.hp;\n        if (currentEquippedItem.stats.mp) newMaxMp -= currentEquippedItem.stats.mp;\n        if (currentEquippedItem.stats.speed) newSpeed -= currentEquippedItem.stats.speed;\n      }\n\n      // 새 아이템의 스탯 적용\n      if (item.stats.attack) newAttack += item.stats.attack;\n      if (item.stats.defense) newDefense += item.stats.defense;\n      if (item.stats.hp) newMaxHp += item.stats.hp;\n      if (item.stats.mp) newMaxMp += item.stats.mp;\n      if (item.stats.speed) newSpeed += item.stats.speed;\n\n      // 스탯이 최소값 이하로 내려가지 않도록 보정\n      newAttack = Math.max(1, newAttack);\n      newDefense = Math.max(0, newDefense);\n      newMaxHp = Math.max(100, newMaxHp);\n      newMaxMp = Math.max(50, newMaxMp);\n      newSpeed = Math.max(1, newSpeed);\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: newAttack,\n        defense: newDefense,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        speed: newSpeed,\n        hp: Math.min(prev.hp, newMaxHp),\n        // 최대 체력이 줄어들 경우 현재 체력도 조정\n        mp: Math.min(prev.mp, newMaxMp) // 최대 마나가 줄어들 경우 현재 마나도 조정\n      };\n    });\n\n    // 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\n    if (currentEquippedItem) {\n      setInventory(prev => [...prev, currentEquippedItem]);\n      addToCombatLog(`기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`);\n    } else {\n      addToCombatLog(`${item.name}을 장착했습니다!`);\n    }\n\n    // 인벤토리에서 새 아이템 제거\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n  };\n\n  // 장비 해제\n  const unequipItem = slot => {\n    const equippedItem = character.equipment[slot];\n    if (!equippedItem) return;\n    setCharacter(prev => {\n      const newEquipment = {\n        ...prev.equipment\n      };\n      newEquipment[slot] = undefined;\n\n      // 장착 해제한 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n      if (equippedItem.stats.attack) newAttack -= equippedItem.stats.attack;\n      if (equippedItem.stats.defense) newDefense -= equippedItem.stats.defense;\n      if (equippedItem.stats.hp) newMaxHp -= equippedItem.stats.hp;\n      if (equippedItem.stats.mp) newMaxMp -= equippedItem.stats.mp;\n      if (equippedItem.stats.speed) newSpeed -= equippedItem.stats.speed;\n\n      // HP가 maxHp를 초과하지 않도록 조정\n      const adjustedHp = Math.min(prev.hp, newMaxHp);\n      const adjustedMp = Math.min(prev.mp, newMaxMp);\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: Math.max(1, newAttack),\n        // 최소 공격력 1\n        defense: Math.max(0, newDefense),\n        maxHp: Math.max(100, newMaxHp),\n        // 최소 체력 100\n        maxMp: Math.max(50, newMaxMp),\n        // 최소 마나 50\n        speed: Math.max(1, newSpeed),\n        // 최소 속도 1\n        hp: adjustedHp,\n        mp: adjustedMp\n      };\n    });\n\n    // 인벤토리에 아이템 추가\n    setInventory(prev => [...prev, equippedItem]);\n    addToCombatLog(`${equippedItem.name}을 해제했습니다!`);\n  };\n\n  // 아이템 판매\n  const sellItem = item => {\n    const sellPrice = Math.floor(item.price * 0.7);\n    setCharacter(prev => ({\n      ...prev,\n      gold: prev.gold + sellPrice\n    }));\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);\n  };\n\n  // 아이템 구매\n  const buyItem = item => {\n    if (character.gold < item.price) return;\n    setCharacter(prev => ({\n      ...prev,\n      gold: prev.gold - item.price\n    }));\n    setInventory(prev => [...prev, {\n      ...item,\n      id: `${item.id}_${Date.now()}`\n    }]);\n    addToCombatLog(`${item.name}을 구매했습니다!`);\n  };\n  const getRarityColor = rarity => {\n    const colors = {\n      common: '#9ca3af',\n      rare: '#3b82f6',\n      epic: '#8b5cf6',\n      legendary: '#f59e0b',\n      mythic: '#ef4444'\n    };\n    return colors[rarity] || '#9ca3af';\n  };\n\n  // 던전 입장 함수\n  const enterDungeon = dungeon => {\n    if (dungeon.isComingSoon) {\n      addToCombatLog('이 던전은 아직 업데이트 예정입니다!');\n      return;\n    }\n    if (character.level < dungeon.requiredLevel) {\n      addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);\n      return;\n    }\n    setCurrentDungeon(dungeon);\n    setInDungeon(true);\n    setGameMode('dungeon');\n    setCurrentTab('dungeon');\n    spawnDungeonMonster(dungeon);\n\n    // 이벤트 로깅\n    onAction('dungeon_entered', {\n      dungeon_id: dungeon.id,\n      dungeon_name: dungeon.name,\n      character_level: character.level,\n      floor: dungeon.currentFloor,\n      character_attack: character.attack,\n      character_defense: character.defense,\n      character_hp: character.hp,\n      character_mp: character.mp,\n      entry_time: new Date().getTime()\n    });\n  };\n\n  // 던전 몬스터 스폰\n  const spawnDungeonMonster = (dungeon, forceSpawn = false) => {\n    // 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\n    if (currentMonster && !forceSpawn) return;\n\n    // 강제 생성인 경우 기존 몬스터를 먼저 제거\n    if (forceSpawn && currentMonster) {\n      setCurrentMonster(null);\n    }\n    // 던전별 고유 몬스터 타입 정의\n    const getDungeonMonsters = dungeonId => {\n      switch (dungeonId) {\n        case 'forest':\n          // 어둠의 숲\n          return [{\n            name: '늑대',\n            baseHp: 40,\n            baseAttack: 10,\n            baseDefense: 3\n          }, {\n            name: '곰',\n            baseHp: 80,\n            baseAttack: 16,\n            baseDefense: 6\n          }, {\n            name: '거대 거미',\n            baseHp: 120,\n            baseAttack: 22,\n            baseDefense: 10\n          }, {\n            name: '숲의 수호자',\n            baseHp: 200,\n            baseAttack: 35,\n            baseDefense: 18\n          }, {\n            name: '고대 엔트',\n            baseHp: 350,\n            baseAttack: 45,\n            baseDefense: 25\n          }];\n        case 'cave':\n          // 고블린 동굴\n          return [{\n            name: '고블린 전사',\n            baseHp: 60,\n            baseAttack: 14,\n            baseDefense: 5\n          }, {\n            name: '고블린 궁수',\n            baseHp: 45,\n            baseAttack: 18,\n            baseDefense: 3\n          }, {\n            name: '고블린 마법사',\n            baseHp: 50,\n            baseAttack: 20,\n            baseDefense: 4\n          }, {\n            name: '고블린 우두머리',\n            baseHp: 180,\n            baseAttack: 30,\n            baseDefense: 15\n          }, {\n            name: '고블린 왕',\n            baseHp: 400,\n            baseAttack: 50,\n            baseDefense: 28\n          }];\n        case 'tower':\n          // 마법사의 탑\n          return [{\n            name: '마법 골렘',\n            baseHp: 100,\n            baseAttack: 20,\n            baseDefense: 12\n          }, {\n            name: '스켈레톤 메이지',\n            baseHp: 70,\n            baseAttack: 25,\n            baseDefense: 8\n          }, {\n            name: '플레임 엘리멘탈',\n            baseHp: 110,\n            baseAttack: 28,\n            baseDefense: 10\n          }, {\n            name: '리치',\n            baseHp: 250,\n            baseAttack: 40,\n            baseDefense: 20\n          }, {\n            name: '고대 마법사',\n            baseHp: 500,\n            baseAttack: 60,\n            baseDefense: 35\n          }];\n        default:\n          return [{\n            name: '슬라임',\n            baseHp: 30,\n            baseAttack: 8,\n            baseDefense: 2\n          }, {\n            name: '고블린',\n            baseHp: 50,\n            baseAttack: 12,\n            baseDefense: 4\n          }, {\n            name: '오크',\n            baseHp: 100,\n            baseAttack: 18,\n            baseDefense: 8\n          }, {\n            name: '트롤',\n            baseHp: 150,\n            baseAttack: 25,\n            baseDefense: 12\n          }, {\n            name: '드래곤',\n            baseHp: 300,\n            baseAttack: 40,\n            baseDefense: 20\n          }];\n      }\n    };\n    const baseMonsters = getDungeonMonsters(dungeon.id);\n\n    // 층수에 따른 점진적 몬스터 선택 로직\n    const floorBasedMonsterIndex = () => {\n      const currentFloor = dungeon.currentFloor;\n      if (currentFloor <= 3) return 0; // 첫 번째 몬스터 (1~3층)\n      if (currentFloor <= 7) return 1; // 두 번째 몬스터 (4~7층)  \n      if (currentFloor <= 12) return 2; // 세 번째 몬스터 (8~12층)\n      if (currentFloor <= 18) return 3; // 네 번째 몬스터 (13~18층)\n      return 4; // 다섯 번째 몬스터 (19층 이상)\n    };\n\n    // 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\n    const baseIndex = floorBasedMonsterIndex();\n    const randomVariation = Math.random() < 0.3 && baseIndex > 0 ? -1 : 0; // 30% 확률로 한 단계 낮은 몬스터\n    const selectedIndex = Math.max(0, baseIndex + randomVariation);\n    const selectedMonster = baseMonsters[selectedIndex];\n    const levelMultiplier = 1 + (dungeon.level + dungeon.currentFloor - 1) * 0.2;\n    const monster = {\n      id: `dungeon_${dungeon.id}_${Date.now()}`,\n      name: selectedMonster.name,\n      level: dungeon.level + dungeon.currentFloor,\n      hp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      attack: Math.floor(selectedMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(selectedMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor((20 + dungeon.level * 8 + dungeon.currentFloor * 3) * levelMultiplier),\n      gold: Math.floor((10 + dungeon.level * 3) * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: dungeon.currentFloor % 5 === 0\n    };\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 2;\n      monster.maxHp *= 2;\n      monster.attack *= 1.5;\n      monster.exp *= 3;\n      monster.gold *= 2;\n    }\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);\n  };\n\n  // 물약 사용 함수\n  const consumeItem = item => {\n    if (item.type !== 'consumable' || !item.consumableEffect) return;\n    const effect = item.consumableEffect;\n\n    // 체력 회복\n    if (effect.healHp) {\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + effect.healHp)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);\n    }\n\n    // 마나 회복\n    if (effect.healMp) {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + effect.healMp)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);\n    }\n\n    // 버프 효과\n    if (effect.buffType && effect.buffAmount && effect.buffDuration) {\n      setCharacter(prev => ({\n        ...prev,\n        buffs: {\n          ...prev.buffs,\n          [effect.buffType]: {\n            amount: effect.buffAmount,\n            duration: effect.buffDuration\n          }\n        }\n      }));\n      addToCombatLog(`${item.name}을 사용하여 ${effect.buffType === 'attack' ? '공격력' : effect.buffType === 'defense' ? '방어력' : '속도'} ${effect.buffAmount} 증가! (${effect.buffDuration / 1000}초)`);\n    }\n\n    // 인벤토리에서 물약 제거 또는 수량 감소\n    setInventory(prev => {\n      const itemIndex = prev.findIndex(invItem => invItem.id === item.id);\n      if (itemIndex !== -1) {\n        const newInventory = [...prev];\n        const currentItem = newInventory[itemIndex];\n        if (currentItem.quantity && currentItem.quantity > 1) {\n          newInventory[itemIndex] = {\n            ...currentItem,\n            quantity: currentItem.quantity - 1\n          };\n        } else {\n          newInventory.splice(itemIndex, 1);\n        }\n        return newInventory;\n      }\n      return prev;\n    });\n\n    // 이벤트 로깅\n    onAction('consumable_used', {\n      item_name: item.name,\n      item_type: item.type,\n      character_level: character.level,\n      heal_hp: effect.healHp || 0,\n      heal_mp: effect.healMp || 0,\n      buff_type: effect.buffType || 'none',\n      buff_amount: effect.buffAmount || 0,\n      character_hp_before: character.hp,\n      character_mp_before: character.mp,\n      dungeon_name: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.name) || null\n    });\n  };\n\n  // 스킬 사용 함수\n  const castSkill = skill => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    if (skill.currentCooldown > 0 || character.mp < skill.manaCost) return;\n\n    // 스킬 사용 로직\n    if (skill.id === 'heal') {\n      const healAmount = 30 + skill.level * 5;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${healAmount}만큼 회복했다!`);\n    } else {\n      // 공격 스킬\n      if (currentMonster) {\n        const damage = calculateSkillDamage(skill, character);\n        const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n        setCurrentMonster(prev => prev ? {\n          ...prev,\n          hp: newMonsterHp\n        } : null);\n        setCharacter(prev => ({\n          ...prev,\n          mp: prev.mp - skill.manaCost\n        }));\n        addToCombatLog(`${skill.name}로 ${damage} 데미지!`);\n\n        // 몬스터가 죽지 않았으면 반격\n        if (newMonsterHp > 0) {\n          setTimeout(() => {\n            monsterAttack();\n          }, 1000);\n        } else {\n          // 몬스터가 죽었으면 처치 처리\n          setTimeout(() => {\n            defeatMonster();\n          }, 1500);\n        }\n      }\n    }\n\n    // 쿨다운 적용\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => s.id === skill.id ? {\n        ...s,\n        currentCooldown: s.cooldown\n      } : s)\n    }));\n\n    // 이벤트 로깅\n    onAction('skill_used', {\n      skill_name: skill.name,\n      skill_level: skill.level,\n      mana_cost: skill.manaCost,\n      character_level: character.level,\n      character_mp_before: character.mp,\n      character_mp_after: character.mp - skill.manaCost,\n      dungeon_name: (currentDungeon === null || currentDungeon === void 0 ? void 0 : currentDungeon.name) || null\n    });\n  };\n\n  // 스탯 포인트 할당\n  const allocateStat = statName => {\n    if (character.stats.availablePoints <= 0) return;\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [statName]: prev.stats[statName] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      }\n    }));\n\n    // 스탯에 따른 능력치 업데이트\n    let hpBonus = 0,\n      mpBonus = 0,\n      attackBonus = 0,\n      defenseBonus = 0;\n    if (statName === 'vitality') hpBonus = 5;\n    if (statName === 'intelligence') mpBonus = 3;\n    if (statName === 'strength') attackBonus = 2;\n    if (statName === 'agility') {\n      attackBonus = 1;\n      defenseBonus = 1;\n    }\n    setCharacter(prev => ({\n      ...prev,\n      maxHp: prev.maxHp + hpBonus,\n      hp: prev.hp + hpBonus,\n      maxMp: prev.maxMp + mpBonus,\n      mp: prev.mp + mpBonus,\n      attack: prev.attack + attackBonus,\n      defense: prev.defense + defenseBonus\n    }));\n\n    // 이벤트 로깅\n    onAction('stat_allocated', {\n      stat_name: statName,\n      stat_value: character.stats[statName] + 1,\n      character_level: character.level,\n      available_points: character.stats.availablePoints - 1\n    });\n  };\n\n  // 공통 캐릭터 정보 헤더 컴포넌트\n  const renderCharacterHeader = () => {\n    const expPercentage = character.exp / character.maxExp * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n        borderRadius: '15px',\n        padding: '15px 20px',\n        marginBottom: '20px',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n          gap: '15px',\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '20px',\n              fontWeight: 'bold',\n              color: '#ffffff'\n            },\n            children: [\"Lv.\", character.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uB808\\uBCA8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '20px',\n              fontWeight: 'bold',\n              color: '#fbbf24'\n            },\n            children: [character.gold, \"G\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uACE8\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '16px',\n              fontWeight: 'bold',\n              color: '#f87171'\n            },\n            children: character.attack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uACF5\\uACA9\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '16px',\n              fontWeight: 'bold',\n              color: '#60a5fa'\n            },\n            children: character.defense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uBC29\\uC5B4\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '16px',\n              fontWeight: 'bold',\n              color: '#34d399'\n            },\n            children: [character.hp, \"/\", character.maxHp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uCCB4\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '16px',\n              fontWeight: 'bold',\n              color: '#a78bfa'\n            },\n            children: [character.mp, \"/\", character.maxMp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e0e7ff',\n              fontSize: '12px'\n            },\n            children: \"\\uB9C8\\uB098\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '14px',\n              color: '#e0e7ff'\n            },\n            children: \"\\uACBD\\uD5D8\\uCE58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '14px',\n              color: '#ffffff',\n              fontWeight: 'bold'\n            },\n            children: [character.exp, \" / \", character.maxExp, \" (\", Math.floor(expPercentage), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '8px',\n            backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${expPercentage}%`,\n              height: '100%',\n              background: 'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',\n              borderRadius: '10px',\n              transition: 'width 0.3s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2363,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 로비 렌더링\n  const renderLobbyTab = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#1f2937',\n      minHeight: '600px'\n    },\n    children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 0 10px 0',\n          fontSize: '24px'\n        },\n        children: \"\\uD83C\\uDFE0 \\uBAA8\\uD5D8\\uAC00 \\uB85C\\uBE44\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          opacity: 0.9\n        },\n        children: \"\\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uBAA8\\uD5D8\\uC744 \\uC2DC\\uC791\\uD558\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'white',\n          marginBottom: '15px',\n          fontSize: '20px'\n        },\n        children: \"\\uD83C\\uDFF0 \\uB358\\uC804 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gap: '15px'\n        },\n        children: availableDungeons.map(dungeon => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: dungeon.isUnlocked ? '#374151' : '#1f2937',\n            borderRadius: '10px',\n            padding: '20px',\n            border: dungeon.isUnlocked ? '2px solid #10b981' : '2px solid #4b5563',\n            opacity: dungeon.isUnlocked ? 1 : 0.6\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: 'white',\n                  margin: '0 0 5px 0',\n                  fontSize: '18px'\n                },\n                children: [dungeon.name, \" (Lv.\", dungeon.level, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#9ca3af',\n                  margin: '0 0 10px 0',\n                  fontSize: '14px'\n                },\n                children: dungeon.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#6b7280'\n                },\n                children: [\"\\uD544\\uC694 \\uB808\\uBCA8: \", dungeon.requiredLevel, \" | \\uCE35\\uC218: \", dungeon.floors, \"\\uCE35 | \\uD604\\uC7AC \\uCE35: \", dungeon.currentFloor, \"\\uCE35\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2489,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => enterDungeon(dungeon),\n              disabled: !dungeon.isUnlocked || character.level < dungeon.requiredLevel || dungeon.isComingSoon,\n              style: {\n                background: dungeon.isComingSoon ? 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)' : dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)' : '#4b5563',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '12px 20px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: dungeon.isUnlocked && character.level >= dungeon.requiredLevel && !dungeon.isComingSoon ? 'pointer' : 'not-allowed',\n                transition: 'all 0.3s ease'\n              },\n              children: dungeon.isComingSoon ? '업데이트 예정' : dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? '입장' : '잠금'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2493,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2481,\n            columnNumber: 15\n          }, this)\n        }, dungeon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2471,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2469,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2450,\n    columnNumber: 5\n  }, this);\n\n  // 던전 탭 렌더링\n  const renderDungeonTab = () => {\n    if (!inDungeon || !currentDungeon) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '100px 20px',\n          textAlign: 'center',\n          background: '#1f2937',\n          color: '#9ca3af'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB358\\uC804\\uC5D0 \\uC785\\uC7A5\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uBE44\\uC5D0\\uC11C \\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2527,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        background: '#1f2937',\n        minHeight: '600px'\n      },\n      children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                margin: '0 0 5px 0',\n                fontSize: '24px'\n              },\n              children: [\"\\uD83C\\uDFF0 \", currentDungeon.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                opacity: 0.9,\n                fontSize: '14px'\n              },\n              children: [currentDungeon.currentFloor, \"\\uCE35 / \", currentDungeon.floors, \"\\uCE35\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2552,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              // 던전 나가기 이벤트 로깅\n              onAction('dungeon_exited', {\n                dungeon_id: currentDungeon.id,\n                dungeon_name: currentDungeon.name,\n                current_floor: currentDungeon.currentFloor,\n                total_floors: currentDungeon.floors,\n                character_level: character.level,\n                exit_reason: 'manual',\n                time_spent: new Date().getTime()\n              });\n              setInDungeon(false);\n              setCurrentDungeon(null);\n              setCurrentTab('lobby');\n              setGameMode('lobby');\n            },\n            style: {\n              background: '#374151',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              padding: '10px 15px',\n              cursor: 'pointer'\n            },\n            children: \"\\uB358\\uC804 \\uB098\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '15px',\n            background: 'rgba(0, 0, 0, 0.2)',\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (currentDungeon.currentFloor > 1) {\n                const updatedDungeon = {\n                  ...currentDungeon,\n                  currentFloor: currentDungeon.currentFloor - 1\n                };\n                setCurrentDungeon(updatedDungeon);\n                setCurrentMonster(null);\n                addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                setTimeout(() => {\n                  spawnDungeonMonster(updatedDungeon, true);\n                }, 1000);\n              }\n            },\n            disabled: currentDungeon.currentFloor <= 1,\n            style: {\n              background: currentDungeon.currentFloor <= 1 ? '#6b7280' : '#3b82f6',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              padding: '8px 12px',\n              cursor: currentDungeon.currentFloor <= 1 ? 'not-allowed' : 'pointer',\n              fontSize: '14px'\n            },\n            children: \"\\u2B06\\uFE0F \\uC774\\uC804 \\uCE35\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: currentDungeon.floors,\n            value: currentDungeon.currentFloor,\n            placeholder: \"\\uCE35\",\n            onChange: e => {\n              const targetFloor = parseInt(e.target.value);\n              if (targetFloor >= 1 && targetFloor <= currentDungeon.floors) {\n                // Check if all previous floors are cleared\n                let canMoveTo = true;\n                for (let i = 1; i < targetFloor; i++) {\n                  if (!currentDungeon.clearedFloors.has(i)) {\n                    canMoveTo = false;\n                    addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);\n                    break;\n                  }\n                }\n                if (canMoveTo) {\n                  const updatedDungeon = {\n                    ...currentDungeon,\n                    currentFloor: targetFloor\n                  };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${targetFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                }\n              }\n            },\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              color: 'white',\n              border: '1px solid rgba(255, 255, 255, 0.3)',\n              borderRadius: '6px',\n              padding: '8px 12px',\n              fontSize: '16px',\n              fontWeight: 'bold',\n              textAlign: 'center',\n              width: '80px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const nextFloor = currentDungeon.currentFloor + 1;\n              const currentFloorCleared = currentDungeon.clearedFloors.has(currentDungeon.currentFloor);\n              if (currentDungeon.currentFloor < currentDungeon.floors && currentFloorCleared) {\n                const updatedDungeon = {\n                  ...currentDungeon,\n                  currentFloor: nextFloor\n                };\n                setCurrentDungeon(updatedDungeon);\n                setCurrentMonster(null);\n                addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                setTimeout(() => {\n                  spawnDungeonMonster(updatedDungeon, true);\n                }, 1000);\n              } else if (!currentFloorCleared) {\n                addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);\n              }\n            },\n            disabled: currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor),\n            style: {\n              background: currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor) ? '#6b7280' : '#10b981',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              padding: '8px 12px',\n              cursor: currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor) ? 'not-allowed' : 'pointer',\n              fontSize: '14px'\n            },\n            children: \"\\u2B07\\uFE0F \\uB2E4\\uC74C \\uCE35\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2665,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2540,\n        columnNumber: 9\n      }, this), showDungeonChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            marginBottom: '10px'\n          },\n          children: \"\\uD83C\\uDFC3 \\uB2E4\\uC74C \\uCE35\\uC73C\\uB85C \\uC774\\uB3D9 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2708,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            height: '8px',\n            overflow: 'hidden',\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'linear-gradient(90deg, #10b981, #059669)',\n              height: '100%',\n              width: '100%',\n              borderRadius: '10px',\n              animation: 'progress 3s linear'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2718,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2711,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            opacity: 0.9\n          },\n          children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2726,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2700,\n        columnNumber: 9\n      }, this), currentMonster && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#374151',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: '20px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '80px',\n                height: '80px',\n                background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                borderRadius: '50%',\n                margin: '0 auto 10px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '30px'\n              },\n              children: \"\\u2694\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2743,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'white',\n                marginBottom: '10px'\n              },\n              children: [character.name, \" Lv.\", character.level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2756,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#1f2937',\n                borderRadius: '10px',\n                padding: '5px',\n                marginBottom: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                  height: '8px',\n                  borderRadius: '4px',\n                  width: `${character.hp / character.maxHp * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2765,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'white',\n                  fontSize: '12px',\n                  marginTop: '5px'\n                },\n                children: [\"HP: \", character.hp, \"/\", character.maxHp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2771,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2759,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '80px',\n                height: '80px',\n                background: 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',\n                borderRadius: '50%',\n                margin: '0 auto 10px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '30px'\n              },\n              children: \"\\uD83D\\uDC79\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2779,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'white',\n                marginBottom: '10px'\n              },\n              children: [currentMonster.name, \" Lv.\", currentMonster.level, currentMonster.isBoss && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#fbbf24'\n                },\n                children: \" \\uD83D\\uDC51\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2794,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2792,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#1f2937',\n                borderRadius: '10px',\n                padding: '5px',\n                marginBottom: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                  height: '8px',\n                  borderRadius: '4px',\n                  width: `${currentMonster.hp / currentMonster.maxHp * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2802,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'white',\n                  fontSize: '12px',\n                  marginTop: '5px'\n                },\n                children: [\"HP: \", currentMonster.hp, \"/\", currentMonster.maxHp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2808,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2796,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2778,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: attack,\n            disabled: character.hp <= 0,\n            style: {\n              background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '10px',\n              padding: '12px 24px',\n              fontSize: '16px',\n              fontWeight: 'bold',\n              cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n              opacity: character.hp > 0 ? 1 : 0.5\n            },\n            children: \"\\u2694\\uFE0F \\uACF5\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAutoFighting(!isAutoFighting),\n            style: {\n              background: isAutoFighting ? 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)' : 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '10px',\n              padding: '12px 24px',\n              fontSize: '16px',\n              fontWeight: 'bold',\n              cursor: 'pointer'\n            },\n            children: isAutoFighting ? '⏸️ 자동 중지' : '▶️ 자동 전투'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2834,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2816,\n          columnNumber: 13\n        }, this), character.skills.filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '10px',\n              textAlign: 'center',\n              fontSize: '16px'\n            },\n            children: [\"\\u2728 \\uC2A4\\uD0AC \\uC0AC\\uC6A9 (MP: \", character.mp, \"/\", character.maxMp, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2856,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px',\n              justifyContent: 'center',\n              flexWrap: 'wrap'\n            },\n            children: character.skills.filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0).map(skill => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => castSkill(skill),\n              disabled: character.hp <= 0 || skill.currentCooldown > 0 || character.mp < skill.manaCost,\n              style: {\n                background: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)' : '#4b5563',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '10px 16px',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                cursor: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 'pointer' : 'not-allowed',\n                opacity: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 1 : 0.6,\n                position: 'relative'\n              },\n              title: `${skill.description}\\n대미지: ${calculateSkillDamage(skill, character)} | 마나: ${skill.manaCost}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: skill.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2883,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  opacity: 0.8\n                },\n                children: [\"MP: \", skill.manaCost, skill.currentCooldown > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\" | \", (skill.currentCooldown / 1000).toFixed(1), \"s\"]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2884,\n                columnNumber: 25\n              }, this)]\n            }, skill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2863,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2859,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2855,\n          columnNumber: 15\n        }, this), inventory.filter(item => item.type === 'consumable').length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '10px',\n              textAlign: 'center',\n              fontSize: '16px'\n            },\n            children: \"\\uD83E\\uDDEA \\uBB3C\\uC57D \\uC0AC\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2899,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px',\n              justifyContent: 'center',\n              flexWrap: 'wrap'\n            },\n            children: inventory.filter(item => item.type === 'consumable').map(item => {\n              var _item$consumableEffec, _item$consumableEffec2, _item$consumableEffec3, _item$consumableEffec4, _item$consumableEffec5;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => consumeItem(item),\n                disabled: character.hp <= 0,\n                style: {\n                  background: character.hp > 0 ? `linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)` : '#4b5563',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '8px',\n                  padding: '8px 12px',\n                  fontSize: '12px',\n                  fontWeight: 'bold',\n                  cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                  opacity: character.hp > 0 ? 1 : 0.6,\n                  position: 'relative'\n                },\n                title: `${item.name}\\n${(_item$consumableEffec = item.consumableEffect) !== null && _item$consumableEffec !== void 0 && _item$consumableEffec.healHp ? `HP +${item.consumableEffect.healHp}` : ''}${(_item$consumableEffec2 = item.consumableEffect) !== null && _item$consumableEffec2 !== void 0 && _item$consumableEffec2.healMp ? `MP +${item.consumableEffect.healMp}` : ''}${(_item$consumableEffec3 = item.consumableEffect) !== null && _item$consumableEffec3 !== void 0 && _item$consumableEffec3.buffType ? `${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}` : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2926,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '10px',\n                    opacity: 0.8\n                  },\n                  children: [item.quantity && item.quantity > 1 ? `x${item.quantity}` : '', ((_item$consumableEffec4 = item.consumableEffect) === null || _item$consumableEffec4 === void 0 ? void 0 : _item$consumableEffec4.healHp) && ` HP+${item.consumableEffect.healHp}`, ((_item$consumableEffec5 = item.consumableEffect) === null || _item$consumableEffec5 === void 0 ? void 0 : _item$consumableEffec5.healMp) && ` MP+${item.consumableEffect.healMp}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2927,\n                  columnNumber: 25\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2906,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2902,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2898,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#1f2937',\n            borderRadius: '10px',\n            padding: '15px',\n            height: '200px',\n            overflowY: 'auto',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#9ca3af',\n              marginBottom: '10px',\n              fontWeight: 'bold'\n            },\n            children: \"\\uC804\\uD22C \\uB85C\\uADF8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2947,\n            columnNumber: 15\n          }, this), combatLog.slice(-10).map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e5e7eb',\n              marginBottom: '5px',\n              lineHeight: '1.4'\n            },\n            children: log\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2951,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2939,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2734,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2535,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 캐릭터 탭 렌더링 (RPG 스타일 UI)\n  const renderCharacterTab = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#1f2937',\n      minHeight: '600px'\n    },\n    children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n        border: '2px solid #475569',\n        borderRadius: '12px',\n        padding: '20px',\n        display: 'flex',\n        gap: '30px',\n        minHeight: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#f1f5f9',\n            margin: '0 0 20px 0',\n            fontSize: '18px',\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"\\u2694\\uFE0F \\uC7A5\\uBE44\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2981,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '10px',\n            marginBottom: '20px'\n          },\n          children: [renderEquipmentSlot('helmet', '⛑️'), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2994,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2995,\n            columnNumber: 13\n          }, this), \" \", renderEquipmentSlot('ring', '💍'), renderEquipmentSlot('armor', '🛡️'), renderEquipmentSlot('weapon', '⚔️'), renderEquipmentSlot('boots', '👢'), renderEquipmentSlot('amulet', '📿'), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3008,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2986,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2980,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '1'\n        },\n        children: [character.stats.availablePoints > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(16, 185, 129, 0.2)',\n            border: '1px solid #10b981',\n            borderRadius: '8px',\n            padding: '12px',\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#10b981',\n              fontSize: '16px',\n              fontWeight: 'bold'\n            },\n            children: [\"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uD3EC\\uC778\\uD2B8: \", character.stats.availablePoints]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3024,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3016,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(15, 23, 42, 0.8)',\n            border: '1px solid #475569',\n            borderRadius: '8px',\n            padding: '15px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: '#f1f5f9',\n              margin: '0 0 15px 0',\n              fontSize: '16px',\n              fontWeight: 'bold'\n            },\n            children: \"\\uD83D\\uDCCA \\uAE30\\uBCF8 \\uB2A5\\uB825\\uCE58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3038,\n            columnNumber: 13\n          }, this), [{\n            key: 'strength',\n            name: '힘',\n            icon: '💪',\n            color: '#dc2626',\n            bonus: character.stats.strength * 2,\n            bonusType: '공격력'\n          }, {\n            key: 'agility',\n            name: '민첩성',\n            icon: '⚡',\n            color: '#10b981',\n            bonus: character.stats.agility,\n            bonusType: '속도'\n          }, {\n            key: 'vitality',\n            name: '체력',\n            icon: '🛡️',\n            color: '#3b82f6',\n            bonus: character.stats.vitality * 10,\n            bonusType: 'HP'\n          }, {\n            key: 'intelligence',\n            name: '지능',\n            icon: '🧠',\n            color: '#7c3aed',\n            bonus: character.stats.intelligence * 5,\n            bonusType: 'MP'\n          }].map(stat => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              padding: '8px 0',\n              borderBottom: '1px solid rgba(71, 85, 105, 0.3)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '16px'\n                },\n                children: stat.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3057,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#f1f5f9',\n                  fontSize: '14px'\n                },\n                children: stat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3058,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: stat.color,\n                  fontSize: '16px',\n                  fontWeight: 'bold'\n                },\n                children: character.stats[stat.key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3059,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3056,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: stat.color,\n                  fontSize: '12px'\n                },\n                children: [\"+\", stat.bonus, \" \", stat.bonusType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3064,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => allocateStat(stat.key),\n                disabled: character.stats.availablePoints <= 0,\n                style: {\n                  background: character.stats.availablePoints > 0 ? stat.color : '#4b5563',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  padding: '4px 8px',\n                  fontSize: '12px',\n                  cursor: character.stats.availablePoints > 0 ? 'pointer' : 'not-allowed',\n                  minWidth: '24px'\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3067,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3063,\n              columnNumber: 17\n            }, this)]\n          }, stat.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3049,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(15, 23, 42, 0.8)',\n            border: '1px solid #475569',\n            borderRadius: '8px',\n            padding: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: '#f1f5f9',\n              margin: '0 0 15px 0',\n              fontSize: '16px',\n              fontWeight: 'bold'\n            },\n            children: \"\\u2694\\uFE0F \\uC804\\uD22C \\uB2A5\\uB825\\uCE58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3095,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gap: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#dc2626',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: \"\\uACF5\\uACA9\\uB825\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#f1f5f9',\n                  fontSize: '18px',\n                  fontWeight: 'bold'\n                },\n                children: character.attack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#3b82f6',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: \"\\uBC29\\uC5B4\\uB825\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#f1f5f9',\n                  fontSize: '18px',\n                  fontWeight: 'bold'\n                },\n                children: character.defense\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#ef4444',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: \"\\uCCB4\\uB825\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#f1f5f9',\n                  fontSize: '16px'\n                },\n                children: [character.hp, \" / \", character.maxHp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#8b5cf6',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: \"\\uB9C8\\uB098\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#f1f5f9',\n                  fontSize: '16px'\n                },\n                children: [character.mp, \" / \", character.maxMp]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3099,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3089,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3013,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2969,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2964,\n    columnNumber: 5\n  }, this);\n\n  // 장비 슬롯 렌더링 함수\n  const renderEquipmentSlot = (slot, icon) => {\n    const item = character.equipment[slot];\n    const rarityColor = (item === null || item === void 0 ? void 0 : item.rarity) === 'legendary' ? '#f59e0b' : (item === null || item === void 0 ? void 0 : item.rarity) === 'epic' ? '#a855f7' : (item === null || item === void 0 ? void 0 : item.rarity) === 'rare' ? '#3b82f6' : (item === null || item === void 0 ? void 0 : item.rarity) === 'mythic' ? '#ef4444' : '#9ca3af';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70px',\n        height: '70px',\n        background: item ? 'rgba(16, 185, 129, 0.2)' : 'rgba(71, 85, 105, 0.3)',\n        border: item ? `2px solid ${rarityColor}` : '2px solid #475569',\n        borderRadius: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative',\n        cursor: item ? 'pointer' : 'default'\n      },\n      children: item ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '24px'\n          },\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '8px',\n            color: rarityColor,\n            fontWeight: 'bold',\n            textAlign: 'center',\n            lineHeight: '1'\n          },\n          children: item.name.length > 6 ? item.name.substring(0, 6) + '...' : item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => unequipItem(slot),\n          style: {\n            position: 'absolute',\n            top: '-5px',\n            right: '-5px',\n            background: '#dc2626',\n            color: 'white',\n            border: 'none',\n            borderRadius: '50%',\n            width: '16px',\n            height: '16px',\n            fontSize: '10px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '24px',\n          opacity: 0.3\n        },\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3132,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 인벤토리 탭 렌더링\n  // 아이템 아이콘 맵핑\n  const getItemIcon = item => {\n    const iconMap = {\n      // 무기\n      'iron-sword': '⚔️',\n      'steel-sword': '🗡️',\n      'magic-sword': '⚡',\n      'legendary-sword': '🔥',\n      'dragon-slayer': '🐉',\n      // 방어구\n      'leather-armor': '🛡️',\n      'iron-armor': '⛨',\n      'steel-armor': '🛡️',\n      'magic-armor': '✨',\n      'dragon-armor': '🔮',\n      // 헬멧\n      'iron-helmet': '⛑️',\n      'steel-helmet': '👑',\n      'magic-helmet': '💎',\n      // 부츠\n      'leather-boots': '👢',\n      'iron-boots': '🥾',\n      'steel-boots': '👢',\n      'magic-boots': '⚡',\n      // 반지/목걸이\n      'power-ring': '💍',\n      'magic-ring': '💫',\n      'health-ring': '❤️',\n      'defense-ring': '🛡️',\n      // 소모품\n      'health-potion': '🧪',\n      'mana-potion': '💙',\n      'strength-potion': '💪',\n      'defense-potion': '🛡️'\n    };\n    return iconMap[item.id] || '📦';\n  };\n\n  // 선택된 아이템 상세 정보\n  const [selectedItem, setSelectedItem] = useState(null);\n  const renderInventoryTab = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#1f2937',\n      minHeight: '600px'\n    },\n    children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 0 10px 0',\n          fontSize: '24px'\n        },\n        children: \"\\uD83C\\uDF92 \\uC778\\uBCA4\\uD1A0\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          opacity: 0.9\n        },\n        children: [\"\\uACE8\\uB4DC: \", character.gold.toLocaleString(), \"G\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white',\n            marginBottom: '15px'\n          },\n          children: [\"\\uD83D\\uDCE6 \\uC18C\\uC9C0\\uD488 (\", inventory.length, \"/50)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(10, 1fr)',\n            gap: '4px',\n            background: 'rgba(0, 0, 0, 0.3)',\n            padding: '15px',\n            borderRadius: '10px',\n            border: '2px solid #4b5563'\n          },\n          children: Array.from({\n            length: 50\n          }, (_, index) => {\n            const item = inventory[index];\n            const isEmpty = !item;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => item && setSelectedItem(item),\n              style: {\n                width: '50px',\n                height: '50px',\n                background: isEmpty ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)',\n                border: isEmpty ? '1px solid #374151' : `2px solid ${getRarityColor(item.rarity)}`,\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                cursor: item ? 'pointer' : 'default',\n                position: 'relative',\n                transition: 'all 0.2s ease'\n              },\n              onMouseEnter: e => {\n                if (item) {\n                  e.currentTarget.style.transform = 'scale(1.05)';\n                  e.currentTarget.style.boxShadow = `0 0 15px ${getRarityColor(item.rarity)}50`;\n                }\n              },\n              onMouseLeave: e => {\n                if (item) {\n                  e.currentTarget.style.transform = 'scale(1)';\n                  e.currentTarget.style.boxShadow = 'none';\n                }\n              },\n              children: item && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '24px'\n                  },\n                  children: getItemIcon(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3296,\n                  columnNumber: 23\n                }, this), inventory.filter(inv => inv.name === item.name).length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    bottom: '2px',\n                    right: '2px',\n                    background: '#000',\n                    color: 'white',\n                    fontSize: '10px',\n                    padding: '1px 3px',\n                    borderRadius: '3px',\n                    lineHeight: '1'\n                  },\n                  children: inventory.filter(inv => inv.name === item.name).length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3299,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3264,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white',\n            marginBottom: '15px'\n          },\n          children: \"\\uD83D\\uDCCB \\uC544\\uC774\\uD15C \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3323,\n          columnNumber: 11\n        }, this), selectedItem ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255, 255, 255, 0.1)',\n            border: `2px solid ${getRarityColor(selectedItem.rarity)}`,\n            borderRadius: '10px',\n            padding: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '48px',\n                marginBottom: '10px'\n              },\n              children: getItemIcon(selectedItem)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: getRarityColor(selectedItem.rarity),\n                margin: '0 0 5px 0',\n                fontSize: '18px',\n                fontWeight: 'bold'\n              },\n              children: selectedItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#9ca3af',\n                margin: '0 0 15px 0',\n                fontSize: '14px',\n                textTransform: 'capitalize'\n              },\n              children: [selectedItem.type, \" \\u2022 \", selectedItem.rarity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3331,\n            columnNumber: 15\n          }, this), selectedItem.stats && Object.keys(selectedItem.stats).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: 'white',\n                margin: '0 0 10px 0',\n                fontSize: '14px'\n              },\n              children: \"\\uB2A5\\uB825\\uCE58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3356,\n              columnNumber: 19\n            }, this), Object.entries(selectedItem.stats).map(([stat, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                color: '#10b981',\n                fontSize: '12px',\n                marginBottom: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: stat === 'attack' ? '공격력' : stat === 'defense' ? '방어력' : stat === 'hp' ? '체력' : stat === 'mp' ? '마나' : stat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3365,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"+\", value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3371,\n                columnNumber: 23\n              }, this)]\n            }, stat, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3358,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: 'white',\n                margin: '0 0 10px 0',\n                fontSize: '14px'\n              },\n              children: \"\\uAC00\\uACA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#f59e0b',\n                fontSize: '12px',\n                margin: 0\n              },\n              children: [selectedItem.price.toLocaleString(), \"G\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '10px'\n            },\n            children: [selectedItem.type !== 'consumable' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                equipItem(selectedItem);\n                setSelectedItem(null);\n              },\n              style: {\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '10px',\n                fontSize: '14px',\n                cursor: 'pointer',\n                fontWeight: 'bold'\n              },\n              children: \"\\uC7A5\\uCC29\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3389,\n              columnNumber: 19\n            }, this), selectedItem.type === 'consumable' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // 사용 로직 (임시)\n                console.log('Use item:', selectedItem.name);\n                setSelectedItem(null);\n              },\n              style: {\n                background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '10px',\n                fontSize: '14px',\n                cursor: 'pointer',\n                fontWeight: 'bold'\n              },\n              children: \"\\uC0AC\\uC6A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const sellPrice = Math.floor(selectedItem.price * 0.7);\n                setCharacter(prev => ({\n                  ...prev,\n                  gold: prev.gold + sellPrice\n                }));\n                setInventory(prev => prev.filter(invItem => invItem.id !== selectedItem.id));\n                addToCombatLog(`${selectedItem.name}을 ${sellPrice} 골드에 판매했습니다!`);\n                setSelectedItem(null);\n              },\n              style: {\n                background: '#dc2626',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '10px',\n                fontSize: '14px',\n                cursor: 'pointer'\n              },\n              children: [\"\\uD310\\uB9E4 (\", Math.floor(selectedItem.price * 0.7), \"G)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3325,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255, 255, 255, 0.05)',\n            borderRadius: '10px',\n            padding: '40px',\n            textAlign: 'center',\n            color: '#6b7280'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC544\\uC774\\uD15C\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3459,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3229,\n    columnNumber: 5\n  }, this);\n  const renderShopTab = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#1f2937',\n      minHeight: '600px'\n    },\n    children: [renderCharacterHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'white',\n          margin: '0 0 15px 0'\n        },\n        children: \"\\uC0C1\\uC810\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '15px'\n        },\n        children: shop.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#1f2937',\n            border: `2px solid ${getRarityColor(item.rarity)}`,\n            borderRadius: '10px',\n            padding: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: getRarityColor(item.rarity),\n              fontWeight: 'bold',\n              marginBottom: '5px'\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#9ca3af',\n              fontSize: '14px',\n              marginBottom: '10px'\n            },\n            children: [item.type, \" \\u2022 Lv.\", item.level, \" \\u2022 \", item.rarity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#d1d5db',\n              fontSize: '12px',\n              marginBottom: '15px'\n            },\n            children: Object.entries(item.stats).map(([key, value]) => value > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [key === 'attack' ? '⚔️' : key === 'defense' ? '🛡️' : key === 'hp' ? '❤️' : key === 'mp' ? '💙' : key === 'speed' ? '💨' : key === 'critRate' ? '💥' : '⭐', \" +\", value]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3509,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#fbbf24',\n                fontWeight: 'bold'\n              },\n              children: [\"\\uD83D\\uDCB0 \", item.price.toLocaleString(), \"G\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => buyItem(item),\n              disabled: character.gold < item.price,\n              style: {\n                background: character.gold >= item.price ? '#10b981' : '#6b7280',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                padding: '8px 16px',\n                fontSize: '12px',\n                cursor: character.gold >= item.price ? 'pointer' : 'not-allowed',\n                opacity: character.gold >= item.price ? 1 : 0.6\n              },\n              children: \"\\uAD6C\\uB9E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3521,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3485,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3468,\n    columnNumber: 5\n  }, this);\n  const renderTabs = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#374151',\n      display: 'flex',\n      borderRadius: '15px 15px 0 0',\n      overflow: 'hidden'\n    },\n    children: [{\n      id: 'lobby',\n      name: t('rpg.tabs.lobby'),\n      icon: '🏠'\n    }, {\n      id: 'character',\n      name: t('rpg.tabs.character'),\n      icon: '👤'\n    }, {\n      id: 'inventory',\n      name: t('rpg.tabs.inventory'),\n      icon: '🎒'\n    }, {\n      id: 'skills',\n      name: t('rpg.tabs.skills'),\n      icon: '✨'\n    }, {\n      id: 'dungeon',\n      name: t('rpg.tabs.dungeon'),\n      icon: '🏰'\n    }, {\n      id: 'shop',\n      name: t('rpg.tabs.shop'),\n      icon: '🛒'\n    }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentTab(tab.id),\n      style: {\n        background: currentTab === tab.id ? colors.accent : 'transparent',\n        color: colors.text,\n        border: 'none',\n        padding: '15px 20px',\n        fontSize: '14px',\n        cursor: 'pointer',\n        flex: 1,\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: tab.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3584,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          marginTop: '5px'\n        },\n        children: tab.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3585,\n        columnNumber: 11\n      }, this)]\n    }, tab.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3568,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3554,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      background: colors.cardBg,\n      borderRadius: '20px',\n      overflow: 'hidden',\n      boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      border: `1px solid ${colors.cardBorder}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: colors.backgroundSecondary,\n        padding: '20px',\n        textAlign: 'center',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: '32px',\n          fontWeight: 'bold',\n          color: colors.text,\n          textShadow: '0 4px 20px rgba(147, 51, 234, 0.5)',\n          position: 'relative',\n          zIndex: 1\n        },\n        children: t('rpg.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '10px 0 0 0',\n          color: colors.textSecondary,\n          fontSize: '16px',\n          position: 'relative',\n          zIndex: 1\n        },\n        children: t('rpg.subtitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3630,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3604,\n      columnNumber: 7\n    }, this), renderTabs(), currentTab === 'lobby' && renderLobbyTab(), currentTab === 'dungeon' && renderDungeonTab(), currentTab === 'character' && renderCharacterTab(), currentTab === 'inventory' && renderInventoryTab(), currentTab === 'skills' && renderSkillsTab(), currentTab === 'shop' && renderShopTab()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3592,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedIdleRPG, \"ohCa1z8U91lRs5QUUUcTIJOPCWI=\", false, function () {\n  return [useTheme, useLanguage];\n});\n_c = AdvancedIdleRPG;\nvar _c;\n$RefreshReg$(_c, \"AdvancedIdleRPG\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useTheme","useLanguage","jsxDEV","_jsxDEV","Fragment","_Fragment","AdvancedIdleRPG","onAction","isSimulating","currentAction","userStats","setUserStats","currentUser","_s","colors","t","calculateSkillDamage","skill","character","level","isLearned","damage","baseDamage","damageMultiplier","statMultiplier","attack","defense","hp","maxHp","mp","maxMp","Math","floor","style","document","createElement","textContent","head","appendChild","removeChild","setCharacter","id","name","exp","maxExp","speed","gold","class","skills","equipment","stats","strength","agility","intelligence","vitality","luck","availablePoints","prestige","rebirth","buffs","amount","duration","currentTab","setCurrentTab","gameMode","setGameMode","isAutoFighting","setIsAutoFighting","currentMonster","setCurrentMonster","combatLog","setCombatLog","selectedDungeon","setSelectedDungeon","inventory","setInventory","availableDungeons","setAvailableDungeons","currentDungeon","setCurrentDungeon","inDungeon","setInDungeon","guild","setGuild","shop","setShop","achievements","setAchievements","monstersDefeated","setMonstersDefeated","totalGoldEarned","setTotalGoldEarned","showDungeonChoice","setShowDungeonChoice","logRef","initializeGame","monsters_defeated","character_class","total_gold_earned","inventory_items","map","item","type","rarity","quantity","current_buffs","Object","entries","filter","_","buff","ceil","translations","ko","slash","description","heal","critical","dungeons","forest","cave","tower","items","sword1","armor1","helmet1","health_potion","mana_potion","greater_health_potion","strength_potion","defense_potion","monsters","slime","goblin","orc","troll","dragon","combat","appeared","levelUp","defeated","itemObtained","dungeonCleared","nextFloor","dungeonExited","hpMpRecovered","defeat","en","zh","currentLang","localStorage","getItem","texts","getAllSkills","currentLevel","existingSkills","_existingSkills$find","allSkills","find","s","maxLevel","manaCost","cooldown","currentCooldown","category","requiredLevel","isUnlocked","initialSkills","initialDungeons","floors","currentFloor","clearedFloors","Set","rewards","goldRange","expRange","itemDropChance","isComingSoon","getShopItems","_availableDungeons$fi","baseItems","price","enhancement","consumableEffect","healHp","healMp","goblinCaveUnlocked","d","push","buffType","buffAmount","buffDuration","shopItems","prev","window","gameTexts","spawnMonster","updateShop","_availableDungeons$fi2","_availableDungeons$fi3","existingIds","newItems","includes","wizardTowerUnlocked","wizardItems","updateSkills","updatedSkills","executeSkill","addToCombatLog","healAmount","min","newMonsterHp","max","setTimeout","defeatMonster","learnSkill","cost","getSkillIcon","iconMap","selectedSkill","setSelectedSkill","skillSubTab","setSkillSubTab","renderSkillsTab","padding","background","minHeight","children","renderCharacterHeader","borderRadius","marginBottom","color","textAlign","margin","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","opacity","display","overflow","label","tab","onClick","flex","border","cursor","fontWeight","transition","renderSkillsByCategory","baseHp","baseAttack","baseDefense","minLevel","availableMonsters","monster","finalMonsters","length","abs","randomMonster","random","levelMultiplier","Date","now","dropItems","generateDropItems","isBoss","dropChance","rarities","itemTypes","itemType","generateItemName","generateItemStats","calculateItemPrice","prefixes","common","rare","epic","legendary","mythic","itemNames","weapon","armor","helmet","boots","ring","amulet","prefix","itemTypeNames","multipliers","base","critRate","critDamage","basePrice","buffedAttack","calculateDamage","isCritical","finalDamage","user_id","is_critical","monster_name","monster_level","character_level","character_attack","monster_hp_remaining","dungeon_name","dungeon_floor","monsterAttack","buffedDefense","newHp","dungeon_id","damage_taken","character_defense","current_floor","total_floors","exit_reason","time_spent","getTime","expGained","goldGained","newExp","newGold","newLevel","newMaxExp","newMp","newMaxHp","newMaxMp","new_level","stat_points_gained","prevDungeons","dungeon","exp_gained","gold_gained","items_dropped","updatedDungeon","Array","from","spawnDungeonMonster","proceedToNextFloor","exitDungeonAfterVictory","resetDungeon","autoAttackTimer","clearTimeout","interval","setInterval","clearInterval","message","newLog","shift","current","scrollTop","scrollHeight","allocateStatPoint","stat","equipItem","slot","currentEquippedItem","newEquipment","newAttack","newDefense","newSpeed","invItem","unequipItem","equippedItem","undefined","adjustedHp","adjustedMp","sellItem","sellPrice","buyItem","getRarityColor","enterDungeon","character_hp","character_mp","entry_time","forceSpawn","getDungeonMonsters","dungeonId","baseMonsters","floorBasedMonsterIndex","baseIndex","randomVariation","selectedIndex","selectedMonster","consumeItem","effect","itemIndex","findIndex","newInventory","currentItem","splice","item_name","item_type","heal_hp","heal_mp","buff_type","buff_amount","character_hp_before","character_mp_before","castSkill","skill_name","skill_level","mana_cost","character_mp_after","allocateStat","statName","hpBonus","mpBonus","attackBonus","defenseBonus","stat_name","stat_value","available_points","expPercentage","gridTemplateColumns","gap","marginTop","justifyContent","alignItems","width","height","backgroundColor","renderLobbyTab","disabled","renderDungeonTab","value","placeholder","onChange","e","targetFloor","parseInt","target","canMoveTo","i","has","currentFloorCleared","animation","flexWrap","position","title","toFixed","_item$consumableEffec","_item$consumableEffec2","_item$consumableEffec3","_item$consumableEffec4","_item$consumableEffec5","overflowY","slice","log","index","lineHeight","renderCharacterTab","renderEquipmentSlot","key","icon","bonus","bonusType","borderBottom","minWidth","rarityColor","flexDirection","substring","top","right","getItemIcon","selectedItem","setSelectedItem","renderInventoryTab","toLocaleString","isEmpty","onMouseEnter","currentTarget","transform","boxShadow","onMouseLeave","inv","bottom","textTransform","keys","console","renderShopTab","renderTabs","accent","text","maxWidth","cardBg","fontFamily","cardBorder","backgroundSecondary","left","textShadow","zIndex","textSecondary","_c","$RefreshReg$"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedIdleRPG.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useLanguage } from '../contexts/LanguageContext';\n\ninterface Dungeon {\n  id: string;\n  name: string;\n  level: number;\n  description: string;\n  floors: number;\n  currentFloor: number;\n  clearedFloors: Set<number>; // Track which floors have been cleared\n  monsters: Monster[];\n  rewards: {\n    goldRange: [number, number];\n    expRange: [number, number];\n    itemDropChance: number;\n  };\n  requiredLevel: number;\n  isUnlocked: boolean;\n  isComingSoon?: boolean; // 업데이트 예정 던전인지\n}\n\ninterface Monster {\n  id: string;\n  name: string;\n  level: number;\n  hp: number;\n  maxHp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  exp: number;\n  gold: number;\n  dropItems: Item[];\n  isBoss?: boolean;\n}\n\ninterface Character {\n  id: string;\n  name: string;\n  level: number;\n  exp: number;\n  maxExp: number;\n  hp: number;\n  maxHp: number;\n  mp: number;\n  maxMp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  gold: number;\n  class: string;\n  skills: Skill[];\n  equipment: Equipment;\n  stats: CharacterStats;\n  prestige: number;\n  rebirth: number;\n  buffs: {\n    attack: { amount: number; duration: number };\n    defense: { amount: number; duration: number };\n    speed: { amount: number; duration: number };\n  };\n}\n\ninterface CharacterStats {\n  strength: number;\n  agility: number;\n  intelligence: number;\n  vitality: number;\n  luck: number;\n  availablePoints: number;\n}\n\ninterface Skill {\n  id: string;\n  name: string;\n  level: number;\n  maxLevel: number;\n  baseDamage: number;\n  damageMultiplier: number; // 레벨당 증가율\n  statMultiplier: { attack?: number; defense?: number; hp?: number; mp?: number }; // 스탯 기반 데미지 배율\n  manaCost: number;\n  cooldown: number;\n  currentCooldown: number;\n  type: 'active' | 'passive';\n  category: 'combat' | 'magic' | 'support' | 'passive'; // 스킬 분류\n  description: string;\n  requiredLevel?: number;\n  isUnlocked?: boolean;\n  isLearned?: boolean; // 배운 스킬인지 (0레벨에서 1레벨로 업그레이드했는지)\n}\n\ninterface Equipment {\n  weapon?: Item;\n  armor?: Item;\n  helmet?: Item;\n  boots?: Item;\n  ring?: Item;\n  amulet?: Item;\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  type: 'weapon' | 'armor' | 'helmet' | 'boots' | 'ring' | 'amulet' | 'consumable';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary' | 'mythic';\n  level: number;\n  stats: {\n    attack?: number;\n    defense?: number;\n    hp?: number;\n    mp?: number;\n    speed?: number;\n    critRate?: number;\n    critDamage?: number;\n  };\n  price: number;\n  enhancement: number;\n  // 물약용 속성들\n  consumableEffect?: {\n    healHp?: number;\n    healMp?: number;\n    buffDuration?: number; // 버프 지속시간 (밀리초)\n    buffType?: 'attack' | 'defense' | 'speed'; // 버프 타입\n    buffAmount?: number; // 버프 수치\n  };\n  quantity?: number; // 소비 아이템 수량\n}\n\n\n\ninterface Guild {\n  id: string;\n  name: string;\n  level: number;\n  members: number;\n  maxMembers: number;\n  benefits: {\n    expBonus: number;\n    goldBonus: number;\n    dropBonus: number;\n  };\n}\n\ninterface AppProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  userStats: any;\n  setUserStats: (stats: any) => void;\n  currentUser: any;\n}\n\nexport const AdvancedIdleRPG: React.FC<AppProps> = ({\n  onAction,\n  isSimulating,\n  currentAction,\n  userStats,\n  setUserStats,\n  currentUser\n}) => {\n  const { colors } = useTheme();\n  const { t } = useLanguage();\n\n  // 스킬 데미지 계산 함수\n  const calculateSkillDamage = (skill: Skill, character: Character): number => {\n    if (skill.level === 0 || !skill.isLearned) return 0;\n    \n    let damage = skill.baseDamage;\n    \n    // 레벨에 따른 데미지 증가\n    damage += skill.baseDamage * skill.damageMultiplier * (skill.level - 1);\n    \n    // 스탯에 따른 데미지 증가\n    if (skill.statMultiplier.attack) {\n      damage += character.attack * skill.statMultiplier.attack * skill.level;\n    }\n    if (skill.statMultiplier.defense) {\n      damage += character.defense * skill.statMultiplier.defense * skill.level;\n    }\n    if (skill.statMultiplier.hp) {\n      damage += character.maxHp * skill.statMultiplier.hp * skill.level;\n    }\n    if (skill.statMultiplier.mp) {\n      damage += character.maxMp * skill.statMultiplier.mp * skill.level;\n    }\n    \n    return Math.floor(damage);\n  };\n\n  // CSS 애니메이션 추가\n  React.useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const [character, setCharacter] = useState<Character>({\n    id: '1',\n    name: '용사',\n    level: 1,\n    exp: 0,\n    maxExp: 100,\n    hp: 100,\n    maxHp: 100,\n    mp: 50,\n    maxMp: 50,\n    attack: 20,\n    defense: 10,\n    speed: 15,\n    gold: 100,\n    class: '전사',\n    skills: [],\n    equipment: {},\n    stats: {\n      strength: 10,\n      agility: 8,\n      intelligence: 5,\n      vitality: 12,\n      luck: 7,\n      availablePoints: 0\n    },\n    prestige: 0,\n    rebirth: 0,\n    buffs: {\n      attack: { amount: 0, duration: 0 },\n      defense: { amount: 0, duration: 0 },\n      speed: { amount: 0, duration: 0 }\n    }\n  });\n\n  const [currentTab, setCurrentTab] = useState<'lobby' | 'dungeon' | 'character' | 'inventory' | 'skills' | 'shop'>('lobby');\n  const [gameMode, setGameMode] = useState<'lobby' | 'dungeon' | 'combat'>('lobby');\n  const [isAutoFighting, setIsAutoFighting] = useState(false);\n  const [currentMonster, setCurrentMonster] = useState<Monster | null>(null);\n  const [combatLog, setCombatLog] = useState<string[]>([]);\n  const [selectedDungeon, setSelectedDungeon] = useState<Dungeon | null>(null);\n  const [inventory, setInventory] = useState<Item[]>([]);\n  const [availableDungeons, setAvailableDungeons] = useState<Dungeon[]>([]);\n  const [currentDungeon, setCurrentDungeon] = useState<Dungeon | null>(null);\n  const [inDungeon, setInDungeon] = useState(false);\n  const [guild, setGuild] = useState<Guild | null>(null);\n  const [shop, setShop] = useState<Item[]>([]);\n  const [achievements, setAchievements] = useState<string[]>([]);\n  const [monstersDefeated, setMonstersDefeated] = useState(0);\n  const [totalGoldEarned, setTotalGoldEarned] = useState(0);\n  const [showDungeonChoice, setShowDungeonChoice] = useState(false);\n\n  const logRef = useRef<HTMLDivElement>(null);\n\n  // 게임 초기화\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  // 캐릭터 상태가 변경될 때마다 userStats 업데이트\n  useEffect(() => {\n    setUserStats({\n      level: character.level,\n      gold: character.gold,\n      attack: character.attack,\n      defense: character.defense,\n      hp: character.hp,\n      maxHp: character.maxHp,\n      exp: character.exp,\n      maxExp: character.maxExp,\n      monsters_defeated: monstersDefeated,\n      character_class: character.class,\n      total_gold_earned: totalGoldEarned,\n      inventory_items: inventory.map(item => ({\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: item.rarity,\n        quantity: item.quantity || 1,\n        stats: item.stats\n      })),\n      skills: character.skills.map(skill => ({\n        id: skill.id,\n        name: skill.name,\n        level: skill.level,\n        type: skill.type\n      })),\n      current_buffs: Object.entries(character.buffs)\n        .filter(([_, buff]) => buff.duration > 0)\n        .map(([type, buff]) => ({\n          type,\n          amount: buff.amount,\n          duration: Math.ceil(buff.duration / 1000)\n        }))\n    });\n  }, [character, inventory, monstersDefeated, totalGoldEarned, setUserStats]);\n\n  const initializeGame = () => {\n    // 언어별 텍스트 정의\n    const translations = {\n      ko: {\n        character: {\n          name: '용사',\n          class: '전사'\n        },\n        skills: {\n          slash: { name: '강력한 베기', description: '강력한 일격을 가합니다.' },\n          heal: { name: '치유', description: 'HP를 회복합니다.' },\n          critical: { name: '치명타 숙련', description: '치명타 확률을 증가시킵니다.' }\n        },\n        dungeons: {\n          forest: { name: '어둠의 숲', description: '초보자를 위한 던전입니다.' },\n          cave: { name: '고블린 동굴', description: '고블린들이 서식하는 위험한 동굴입니다.' },\n          tower: { name: '마법사의 탑', description: '강력한 마법 몬스터들이 있는 탑입니다.' }\n        },\n        items: {\n          sword1: '강철 검',\n          armor1: '가죽 갑옷',\n          helmet1: '철제 투구',\n          health_potion: '체력 물약',\n          mana_potion: '마나 물약',\n          greater_health_potion: '고급 체력 물약',\n          strength_potion: '힘의 물약',\n          defense_potion: '방어의 물약'\n        },\n        monsters: {\n          slime: '슬라임',\n          goblin: '고블린',\n          orc: '오크',\n          troll: '트롤',\n          dragon: '드래곤'\n        },\n        combat: {\n          appeared: '이 나타났다!',\n          attack: '의 공격!',\n          damage: '데미지!',\n          critical: '치명타!',\n          levelUp: '🎉 레벨업! Lv.',\n          defeated: '를 물리쳤다! EXP +',\n          gold: ', 골드 +',\n          itemObtained: '✨ 을 획득했습니다!',\n          dungeonCleared: '🎉  던전을 클리어했습니다!',\n          nextFloor: '층으로 자동 진행합니다!',\n          dungeonExited: '던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',\n          hpMpRecovered: '체력과 마나가 완전히 회복되었습니다!',\n          defeat: '전투에서 패배했습니다...'\n        }\n      },\n      en: {\n        character: {\n          name: 'Hero',\n          class: 'Warrior'\n        },\n        skills: {\n          slash: { name: 'Power Slash', description: 'Delivers a powerful strike.' },\n          heal: { name: 'Heal', description: 'Restores HP.' },\n          critical: { name: 'Critical Mastery', description: 'Increases critical hit chance.' }\n        },\n        dungeons: {\n          forest: { name: 'Dark Forest', description: 'A dungeon for beginners.' },\n          cave: { name: 'Goblin Cave', description: 'A dangerous cave inhabited by goblins.' },\n          tower: { name: 'Mage Tower', description: 'A tower with powerful magic monsters.' }\n        },\n        items: {\n          sword1: 'Steel Sword',\n          armor1: 'Leather Armor',\n          helmet1: 'Iron Helmet',\n          health_potion: 'Health Potion',\n          mana_potion: 'Mana Potion',\n          greater_health_potion: 'Greater Health Potion',\n          strength_potion: 'Strength Potion',\n          defense_potion: 'Defense Potion'\n        },\n        monsters: {\n          slime: 'Slime',\n          goblin: 'Goblin',\n          orc: 'Orc',\n          troll: 'Troll',\n          dragon: 'Dragon'\n        },\n        combat: {\n          appeared: ' appeared!',\n          attack: \"'s attack!\",\n          damage: ' damage!',\n          critical: ' (Critical!)',\n          levelUp: '🎉 Level up! Lv.',\n          defeated: ' defeated! EXP +',\n          gold: ', Gold +',\n          itemObtained: '✨ obtained!',\n          dungeonCleared: '🎉  dungeon cleared!',\n          nextFloor: 'Proceeding to floor  automatically!',\n          dungeonExited: 'Automatically exited dungeon. HP and MP fully restored!',\n          hpMpRecovered: 'HP and MP fully restored!',\n          defeat: 'Defeated in battle...'\n        }\n      },\n      zh: {\n        character: {\n          name: '勇者',\n          class: '战士'\n        },\n        skills: {\n          slash: { name: '强力斩击', description: '发动强力一击。' },\n          heal: { name: '治疗', description: '恢复生命值。' },\n          critical: { name: '暴击精通', description: '增加暴击几率。' }\n        },\n        dungeons: {\n          forest: { name: '黑暗森林', description: '适合新手的地下城。' },\n          cave: { name: '哥布林洞穴', description: '哥布林栖息的危险洞穴。' },\n          tower: { name: '法师塔', description: '有强力魔法怪物的塔。' }\n        },\n        items: {\n          sword1: '钢铁剑',\n          armor1: '皮甲',\n          helmet1: '铁盔',\n          health_potion: '生命药水',\n          mana_potion: '魔法药水',\n          greater_health_potion: '高级生命药水',\n          strength_potion: '力量药水',\n          defense_potion: '防御药水'\n        },\n        monsters: {\n          slime: '史莱姆',\n          goblin: '哥布林',\n          orc: '兽人',\n          troll: '巨魔',\n          dragon: '龙'\n        },\n        combat: {\n          appeared: '出现了！',\n          attack: '的攻击！',\n          damage: '伤害！',\n          critical: '暴击！',\n          levelUp: '🎉 升级！Lv.',\n          defeated: '被击败！经验 +',\n          gold: '，金币 +',\n          itemObtained: '✨ 获得了！',\n          dungeonCleared: '🎉 地下城通关！',\n          nextFloor: '自动前往第 层！',\n          dungeonExited: '自动离开地下城。生命值和魔法值完全恢复！',\n          hpMpRecovered: '生命值和魔法值完全恢复！',\n          defeat: '战斗失败...'\n        }\n      }\n    };\n\n    // 현재 언어 가져오기 (기본값: 한국어)\n    const currentLang = localStorage.getItem('language') || 'ko';\n    const texts = translations[currentLang as keyof typeof translations] || translations.ko;\n    // 모든 스킬 정의 함수 (공통 사용)\n    const getAllSkills = (currentLevel: number, existingSkills?: Skill[]): Skill[] => {\n      const allSkills = [\n        // 전투 스킬 (레벨 1)\n        {\n          id: 'slash',\n          name: '강력한 베기',\n          level: existingSkills?.find(s => s.id === 'slash')?.level || 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.5,\n          statMultiplier: { attack: 2.0 },\n          manaCost: 10,\n          cooldown: 3000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '강력한 일격을 가합니다. (기본 데미지 + 공격력 x 2.0)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        {\n          id: 'heal',\n          name: '치유',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 30,\n          damageMultiplier: 0.3,\n          statMultiplier: { mp: 1.5 },\n          manaCost: 15,\n          cooldown: 5000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'support' as const,\n          description: 'HP를 회복합니다. (기본 회복량 + 마나 x 1.5)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        {\n          id: 'critical',\n          name: '치명타 숙련',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '치명타 확률을 증가시킵니다. (레벨당 +2%)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        // 레벨 5 스킬\n        {\n          id: 'double_strike',\n          name: '이중 공격',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 25,\n          damageMultiplier: 0.4,\n          statMultiplier: { attack: 1.5 },\n          manaCost: 20,\n          cooldown: 4000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        {\n          id: 'mana_shield',\n          name: '마나 방패',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.2,\n          statMultiplier: { mp: 1.0, defense: 0.5 },\n          manaCost: 25,\n          cooldown: 8000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        {\n          id: 'defense_mastery',\n          name: '방어 숙련',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        // 레벨 10 스킬\n        {\n          id: 'whirlwind',\n          name: '회오리 공격',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 40,\n          damageMultiplier: 0.6,\n          statMultiplier: { attack: 1.8 },\n          manaCost: 35,\n          cooldown: 6000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        {\n          id: 'regeneration',\n          name: '재생',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 50,\n          damageMultiplier: 0.4,\n          statMultiplier: { hp: 0.1, mp: 2.0 },\n          manaCost: 40,\n          cooldown: 12000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'support' as const,\n          description: '지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        {\n          id: 'mp_efficiency',\n          name: '마나 효율',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        // 레벨 15 스킬\n        {\n          id: 'meteor',\n          name: '메테오',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 80,\n          damageMultiplier: 1.0,\n          statMultiplier: { mp: 3.0, attack: 1.0 },\n          manaCost: 60,\n          cooldown: 10000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        },\n        {\n          id: 'time_stop',\n          name: '시간 정지',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: { mp: 1.0 },\n          manaCost: 80,\n          cooldown: 15000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        },\n        {\n          id: 'exp_boost',\n          name: '경험치 증폭',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '획득하는 경험치를 증가시킵니다. (레벨당 +10%)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        }\n      ];\n\n      // 해금된 스킬만 반환\n      return allSkills.filter(skill => skill.isUnlocked);\n    };\n\n    const initialSkills = getAllSkills(1);\n\n    // 던전 초기화\n    const initialDungeons: Dungeon[] = [\n      {\n        id: 'forest',\n        name: '어둠의 숲',\n        level: 1,\n        description: '초보자를 위한 던전입니다.',\n        floors: 10,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [10, 25],\n          expRange: [15, 30],\n          itemDropChance: 0.1\n        },\n        requiredLevel: 1,\n        isUnlocked: true\n      },\n      {\n        id: 'cave',\n        name: '고블린 동굴',\n        level: 5,\n        description: '고블린들이 서식하는 위험한 동굴입니다.',\n        floors: 15,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [25, 50],\n          expRange: [40, 75],\n          itemDropChance: 0.15\n        },\n        requiredLevel: 5,\n        isUnlocked: false\n      },\n      {\n        id: 'tower',\n        name: '마법사의 탑',\n        level: 10,\n        description: '강력한 마법 몬스터들이 있는 탑입니다.',\n        floors: 20,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [50, 100],\n          expRange: [80, 150],\n          itemDropChance: 0.2\n        },\n        requiredLevel: 10,\n        isUnlocked: false\n      },\n      {\n        id: 'abyss',\n        name: '심연의 던전',\n        level: 20,\n        description: '업데이트 예정 - 최강의 도전자들을 위한 던전입니다.',\n        floors: 50,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [100, 200],\n          expRange: [200, 300],\n          itemDropChance: 0.3\n        },\n        requiredLevel: 20,\n        isUnlocked: false,\n        isComingSoon: true // 업데이트 예정 플래그\n      }\n    ];\n\n    // 상점 아이템 초기화 (기본 아이템들)\n    const getShopItems = () => {\n      const baseItems: Item[] = [\n        {\n          id: 'sword1',\n          name: '강철 검',\n          type: 'weapon',\n          rarity: 'common',\n          level: 1,\n          stats: { attack: 15 },\n          price: 200,\n          enhancement: 0\n        },\n        {\n          id: 'armor1',\n          name: '가죽 갑옷',\n          type: 'armor',\n          rarity: 'common',\n          level: 1,\n          stats: { defense: 10, hp: 20 },\n          price: 150,\n          enhancement: 0\n        },\n        {\n          id: 'helmet1',\n          name: '철제 투구',\n          type: 'helmet',\n          rarity: 'common',\n          level: 1,\n          stats: { defense: 5, hp: 15 },\n          price: 100,\n          enhancement: 0\n        },\n        // 기본 물약들\n        {\n          id: 'health_potion',\n          name: '체력 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 50,\n          enhancement: 0,\n          consumableEffect: {\n            healHp: 50\n          },\n          quantity: 1\n        },\n        {\n          id: 'mana_potion',\n          name: '마나 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 40,\n          enhancement: 0,\n          consumableEffect: {\n            healMp: 30\n          },\n          quantity: 1\n        }\n      ];\n\n      // 고블린 동굴이 해금되면 고급 아이템 추가\n      const goblinCaveUnlocked = availableDungeons.find(d => d.id === 'goblin_cave')?.isUnlocked;\n      if (goblinCaveUnlocked) {\n        baseItems.push(\n          // 고급 장비\n          {\n            id: 'steel_sword',\n            name: '강화 강철 검',\n            type: 'weapon',\n            rarity: 'rare',\n            level: 3,\n            stats: { attack: 25 },\n            price: 500,\n            enhancement: 0\n          },\n          {\n            id: 'plate_armor',\n            name: '판금 갑옷',\n            type: 'armor',\n            rarity: 'rare',\n            level: 3,\n            stats: { defense: 20, hp: 40 },\n            price: 400,\n            enhancement: 0\n          },\n          {\n            id: 'steel_helmet',\n            name: '강철 투구',\n            type: 'helmet',\n            rarity: 'rare',\n            level: 3,\n            stats: { defense: 12, hp: 25 },\n            price: 300,\n            enhancement: 0\n          },\n          // 고급 물약들\n          {\n            id: 'greater_health_potion',\n            name: '고급 체력 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 120,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 120\n            },\n            quantity: 1\n          },\n          {\n            id: 'greater_mana_potion',\n            name: '고급 마나 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 100,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 80\n            },\n            quantity: 1\n          },\n          {\n            id: 'strength_potion',\n            name: '힘의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'attack',\n              buffAmount: 10,\n              buffDuration: 30000\n            },\n            quantity: 1\n          },\n          {\n            id: 'defense_potion',\n            name: '방어의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'defense',\n              buffAmount: 8,\n              buffDuration: 30000\n            },\n            quantity: 1\n          }\n        );\n      }\n\n\n      return baseItems;\n    };\n\n    const shopItems = getShopItems();\n\n    setCharacter(prev => ({ \n      ...prev, \n      name: texts.character.name,\n      class: texts.character.class,\n      skills: initialSkills \n    }));\n    setAvailableDungeons(initialDungeons);\n    setShop(shopItems);\n    // Store texts globally for other functions to use\n    (window as any).gameTexts = texts;\n    \n    // 던전에 있지 않을 때만 일반 몬스터 생성\n    if (!inDungeon) {\n      spawnMonster();\n    }\n  };\n\n  // 던전 해금 상태에 따른 상점 업데이트\n  useEffect(() => {\n    const updateShop = () => {\n      const getShopItems = () => {\n        const baseItems: Item[] = [\n          {\n            id: 'sword1',\n            name: '강철 검',\n            type: 'weapon',\n            rarity: 'common',\n            level: 1,\n            stats: { attack: 15 },\n            price: 200,\n            enhancement: 0\n          },\n          {\n            id: 'armor1',\n            name: '가죽 갑옷',\n            type: 'armor',\n            rarity: 'common',\n            level: 1,\n            stats: { defense: 10, hp: 20 },\n            price: 150,\n            enhancement: 0\n          },\n          {\n            id: 'helmet1',\n            name: '철제 투구',\n            type: 'helmet',\n            rarity: 'common',\n            level: 1,\n            stats: { defense: 5, hp: 15 },\n            price: 100,\n            enhancement: 0\n          },\n          // 기본 물약들\n          {\n            id: 'health_potion',\n            name: '체력 물약',\n            type: 'consumable',\n            rarity: 'common',\n            level: 1,\n            stats: {},\n            price: 50,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 50\n            },\n            quantity: 1\n          },\n          {\n            id: 'mana_potion',\n            name: '마나 물약',\n            type: 'consumable',\n            rarity: 'common',\n            level: 1,\n            stats: {},\n            price: 40,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 30\n            },\n            quantity: 1\n          }\n        ];\n\n        // 고블린 동굴이 해금되면 고급 아이템 추가\n        const goblinCaveUnlocked = availableDungeons.find(d => d.id === 'goblin_cave')?.isUnlocked;\n        if (goblinCaveUnlocked) {\n          // 중복 방지: 이미 있는 아이템은 추가하지 않음\n          const existingIds = baseItems.map(item => item.id);\n          const newItems = [\n            {\n              id: 'steel_sword',\n              name: '강화 강철 검',\n              type: 'weapon' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { attack: 25 },\n              price: 500,\n              enhancement: 0\n            },\n            {\n              id: 'plate_armor',\n              name: '판금 갑옷',\n              type: 'armor' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { defense: 20, hp: 40 },\n              price: 400,\n              enhancement: 0\n            },\n            {\n              id: 'steel_helmet',\n              name: '강철 투구',\n              type: 'helmet' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { defense: 12, hp: 25 },\n              price: 300,\n              enhancement: 0\n            },\n            {\n              id: 'greater_health_potion',\n              name: '고급 체력 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 120,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 120\n              },\n              quantity: 1\n            },\n            {\n              id: 'greater_mana_potion',\n              name: '고급 마나 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 100,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 80\n              },\n              quantity: 1\n            },\n            {\n              id: 'strength_potion',\n              name: '힘의 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'attack' as const,\n                buffAmount: 10,\n                buffDuration: 30000\n              },\n              quantity: 1\n            },\n            {\n              id: 'defense_potion',\n              name: '방어의 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'defense' as const,\n                buffAmount: 8,\n                buffDuration: 30000\n              },\n              quantity: 1\n            }\n          ].filter(item => !existingIds.includes(item.id));\n          \n          baseItems.push(...newItems);\n        }\n\n        // 마법사의 탑이 해금되면 최고급 아이템 추가\n        const wizardTowerUnlocked = availableDungeons.find(d => d.id === 'wizard_tower')?.isUnlocked;\n        if (wizardTowerUnlocked) {\n          const existingIds = baseItems.map(item => item.id);\n          const wizardItems = [\n            {\n              id: 'enchanted_sword',\n              name: '마법 부여 검',\n              type: 'weapon' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { attack: 40, mp: 20 },\n              price: 1200,\n              enhancement: 0\n            },\n            {\n              id: 'dragon_armor',\n              name: '드래곤 갑옷',\n              type: 'armor' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { defense: 35, hp: 80 },\n              price: 1000,\n              enhancement: 0\n            },\n            {\n              id: 'mystic_helmet',\n              name: '신비의 투구',\n              type: 'helmet' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { defense: 20, hp: 40, mp: 30 },\n              price: 800,\n              enhancement: 0\n            },\n            {\n              id: 'supreme_health_potion',\n              name: '최고급 체력 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 300,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 250\n              },\n              quantity: 1\n            },\n            {\n              id: 'supreme_mana_potion',\n              name: '최고급 마나 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 250,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 200\n              },\n              quantity: 1\n            },\n            {\n              id: 'berserker_potion',\n              name: '광전사의 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'attack' as const,\n                buffAmount: 25,\n                buffDuration: 60000\n              },\n              quantity: 1\n            },\n            {\n              id: 'guardian_potion',\n              name: '수호자의 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'defense' as const,\n                buffAmount: 20,\n                buffDuration: 60000\n              },\n              quantity: 1\n            }\n          ].filter(item => !existingIds.includes(item.id));\n          \n          baseItems.push(...wizardItems);\n        }\n\n        return baseItems;\n      };\n\n      setShop(getShopItems());\n    };\n\n    updateShop();\n  }, [availableDungeons]);\n\n  // 레벨업 시 스킬 업데이트\n  useEffect(() => {\n    const updateSkills = () => {\n      setCharacter(prev => {\n        // 기존 스킬들의 해금 상태만 업데이트\n        const updatedSkills = prev.skills.map(skill => ({\n          ...skill,\n          isUnlocked: prev.level >= (skill.requiredLevel || 1)\n        }));\n        return { ...prev, skills: updatedSkills };\n      });\n    };\n\n    updateSkills();\n  }, [character.level]);\n\n  // 스킬 사용 함수 (수정된 데미지 계산 포함)\n  const executeSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    \n    if (character.mp < skill.manaCost) {\n      addToCombatLog('마나가 부족합니다!');\n      return;\n    }\n    \n    if (skill.currentCooldown > 0) {\n      addToCombatLog('스킬이 재사용 대기 중입니다!');\n      return;\n    }\n\n    const damage = calculateSkillDamage(skill, character);\n    \n    // 스킬 사용 로직\n    if (skill.id === 'heal' || skill.id === 'regeneration') {\n      // 힐링 스킬\n      const healAmount = damage;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);\n    } else if (currentMonster) {\n      // 공격 스킬\n      const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n      setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n      setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n      addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);\n\n      if (newMonsterHp === 0) {\n        setTimeout(defeatMonster, 500);\n      }\n    }\n\n    // 쿨다운 설정\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? { ...s, currentCooldown: skill.cooldown } : s\n      )\n    }));\n  };\n\n  // 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\n  const learnSkill = (skill: Skill) => {\n    if (skill.level > 0) {\n      addToCombatLog('이미 배운 스킬입니다!');\n      return;\n    }\n\n    const cost = 100; // 스킬 배우기 비용\n    if (character.gold < cost) {\n      addToCombatLog('골드가 부족합니다!');\n      return;\n    }\n\n    setCharacter(prev => ({\n      ...prev,\n      gold: prev.gold - cost,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? { ...s, level: 1, isLearned: true } : s\n      )\n    }));\n    addToCombatLog(`${skill.name}을(를) 배웠습니다!`);\n  };\n\n  // 스킬 렌더링 함수 (분류별)\n  // 스킬 아이콘 맵핑\n  const getSkillIcon = (skill: Skill) => {\n    const iconMap: { [key: string]: string } = {\n      // 전투 스킬\n      'basic-attack': '⚔️',\n      'power-strike': '💥',\n      'fire-slash': '🔥',\n      'lightning-bolt': '⚡',\n      'ice-shard': '❄️',\n      'double-attack': '⚔️⚔️',\n      // 지원 스킬\n      'heal': '💚',\n      'mana-recovery': '💙',\n      'shield': '🛡️',\n      'haste': '💨',\n      'blessing': '✨',\n      // 패시브 스킬\n      'strength-boost': '💪',\n      'defense-boost': '🛡️',\n      'agility-boost': '🏃',\n      'mana-boost': '🔮',\n      'critical-chance': '💎',\n      'vampire': '🩸'\n    };\n    return iconMap[skill.id] || '📜';\n  };\n\n  // 선택된 스킬 상태\n  const [selectedSkill, setSelectedSkill] = useState<Skill | null>(null);\n\n  // 스킬 탭 내부의 서브 탭 상태\n  const [skillSubTab, setSkillSubTab] = React.useState<'combat' | 'support' | 'passive'>('combat');\n\n  // 스킬 탭 컨텐츠 렌더링 (탭 분리)\n  const renderSkillsTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>✨ 스킬 트리</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>스킬을 배우고 레벨업하여 더욱 강해지세요!</p>\n      </div>\n\n      {/* 스킬 카테고리 탭 */}\n      <div style={{\n        display: 'flex',\n        background: 'rgba(255, 255, 255, 0.1)',\n        borderRadius: '10px',\n        marginBottom: '20px',\n        overflow: 'hidden'\n      }}>\n        {[\n          { id: 'combat', label: '⚔️ 전투 스킬', color: '#dc2626' },\n          { id: 'support', label: '💚 지원 스킬', color: '#10b981' },\n          { id: 'passive', label: '🛡️ 패시브 스킬', color: '#f59e0b' }\n        ].map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setSkillSubTab(tab.id as any)}\n            style={{\n              flex: 1,\n              padding: '15px 20px',\n              background: skillSubTab === tab.id \n                ? `linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)`\n                : 'transparent',\n              color: skillSubTab === tab.id ? 'white' : '#9ca3af',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: skillSubTab === tab.id ? 'bold' : 'normal',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* 선택된 카테고리 스킬 렌더링 */}\n      {skillSubTab === 'combat' && renderSkillsByCategory('combat')}\n      {skillSubTab === 'combat' && renderSkillsByCategory('magic')} {/* 마법도 전투 스킬로 포함 */}\n      {skillSubTab === 'support' && renderSkillsByCategory('support')}\n      {skillSubTab === 'passive' && renderSkillsByCategory('passive')}\n    </div>\n  );\n\n  // 몬스터 생성\n  const spawnMonster = () => {\n    // 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\n    if (currentMonster || inDungeon) {\n      return;\n    }\n    \n    const gameTexts = (window as any).gameTexts || {\n      monsters: { slime: '슬라임', goblin: '고블린', orc: '오크', troll: '트롤', dragon: '드래곤' },\n      combat: { appeared: '이 나타났다!' }\n    };\n    const monsters = [\n      { name: gameTexts.monsters.slime, baseHp: 40, baseAttack: 8, baseDefense: 2, exp: 15, gold: 10, minLevel: 1, maxLevel: 3 },\n      { name: gameTexts.monsters.goblin, baseHp: 60, baseAttack: 12, baseDefense: 4, exp: 25, gold: 18, minLevel: 3, maxLevel: 6 },\n      { name: gameTexts.monsters.orc, baseHp: 100, baseAttack: 18, baseDefense: 8, exp: 40, gold: 30, minLevel: 6, maxLevel: 10 },\n      { name: gameTexts.monsters.troll, baseHp: 150, baseAttack: 25, baseDefense: 12, exp: 60, gold: 45, minLevel: 10, maxLevel: 15 },\n      { name: gameTexts.monsters.dragon, baseHp: 300, baseAttack: 40, baseDefense: 20, exp: 120, gold: 100, minLevel: 15, maxLevel: 999 }\n    ];\n\n    // 캐릭터 레벨에 적합한 몬스터만 필터링\n    const availableMonsters = monsters.filter(monster => \n      character.level >= monster.minLevel && character.level <= monster.maxLevel\n    );\n    \n    // 적합한 몬스터가 없으면 레벨 범위를 확장\n    const finalMonsters = availableMonsters.length > 0 ? availableMonsters : monsters.filter(monster => \n      Math.abs(character.level - monster.minLevel) <= 2\n    );\n    \n    const randomMonster = finalMonsters[Math.floor(Math.random() * finalMonsters.length)];\n    const levelMultiplier = 1 + (character.level - 1) * 0.3;\n    \n    const monster: Monster = {\n      id: `monster_${Date.now()}`,\n      name: randomMonster.name,\n      level: Math.max(1, character.level + Math.floor(Math.random() * 3 - 1)),\n      hp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      attack: Math.floor(randomMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(randomMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(randomMonster.exp * levelMultiplier),\n      gold: Math.floor(randomMonster.gold * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: Math.random() < 0.1 // 10% 보스 확률\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 3;\n      monster.maxHp *= 3;\n      monster.attack *= 2;\n      monster.defense *= 2;\n      monster.exp *= 5;\n      monster.gold *= 3;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);\n  };\n\n  // 드롭 아이템 생성\n  const generateDropItems = (): Item[] => {\n    const dropChance = Math.random();\n    if (dropChance < 0.1) { // 10% 확률로 아이템 드롭\n      const rarities: Array<'common' | 'rare' | 'epic' | 'legendary' | 'mythic'> = ['common', 'rare', 'epic', 'legendary', 'mythic'];\n      const rarity = rarities[Math.floor(Math.random() * rarities.length)];\n      const itemTypes = ['weapon', 'armor', 'helmet', 'boots', 'ring', 'amulet'] as const;\n      const itemType = itemTypes[Math.floor(Math.random() * itemTypes.length)];\n      \n      return [{\n        id: `drop_${Date.now()}`,\n        name: generateItemName(rarity, itemType),\n        type: itemType,\n        rarity,\n        level: character.level,\n        stats: generateItemStats(rarity),\n        price: calculateItemPrice(rarity, character.level),\n        enhancement: 0\n      }];\n    }\n    return [];\n  };\n\n  const generateItemName = (rarity: string, itemType: string): string => {\n    const prefixes = {\n      common: ['낡은', '일반적인', '기본'],\n      rare: ['날카로운', '튼튼한', '마법의'],\n      epic: ['전설적인', '고대의', '신성한'],\n      legendary: ['전설의', '영웅의', '불멸의'],\n      mythic: ['신화의', '창조의', '절대의']\n    };\n    \n    const itemNames = {\n      weapon: ['검', '도끼', '창', '활', '지팡이'],\n      armor: ['갑옷', '로브', '사슬갑옷', '가죽갑옷'],\n      helmet: ['투구', '모자', '관', '헬름'],\n      boots: ['신발', '부츠', '장화', '샌들'],\n      ring: ['반지', '링', '밴드'],\n      amulet: ['목걸이', '부적', '펜던트']\n    };\n    \n    const prefix = prefixes[rarity as keyof typeof prefixes][Math.floor(Math.random() * 3)];\n    const itemTypeNames = itemNames[itemType as keyof typeof itemNames] || ['아이템'];\n    const item = itemTypeNames[Math.floor(Math.random() * itemTypeNames.length)];\n    \n    return `${prefix} ${item}`;\n  };\n\n  const generateItemStats = (rarity: string) => {\n    const multipliers = {\n      common: 1,\n      rare: 1.5,\n      epic: 2.5,\n      legendary: 4,\n      mythic: 7\n    };\n    \n    const base = multipliers[rarity as keyof typeof multipliers];\n    return {\n      attack: Math.floor(Math.random() * 20 * base),\n      defense: Math.floor(Math.random() * 15 * base),\n      hp: Math.floor(Math.random() * 50 * base),\n      mp: Math.floor(Math.random() * 30 * base),\n      speed: Math.floor(Math.random() * 10 * base),\n      critRate: Math.floor(Math.random() * 10 * base),\n      critDamage: Math.floor(Math.random() * 20 * base)\n    };\n  };\n\n  const calculateItemPrice = (rarity: string, level: number): number => {\n    const basePrice = {\n      common: 50,\n      rare: 150,\n      epic: 500,\n      legendary: 2000,\n      mythic: 10000\n    };\n    \n    return Math.floor(basePrice[rarity as keyof typeof basePrice] * (1 + level * 0.2));\n  };\n\n  // 전투 시스템\n  const attack = () => {\n    if (!currentMonster) return;\n\n    const buffedAttack = character.attack + character.buffs.attack.amount;\n    const damage = calculateDamage(buffedAttack, currentMonster.defense);\n    const isCritical = Math.random() < 0.1 + (character.stats.luck * 0.01);\n    const finalDamage = isCritical ? Math.floor(damage * 1.5) : damage;\n\n    const newMonsterHp = Math.max(0, currentMonster.hp - finalDamage);\n    setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!', critical: '치명타!' }\n    };\n    addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical ? ` (${gameTexts.combat.critical})` : ''} ${gameTexts.combat.damage}`);\n\n    onAction('combat_attack', {\n      user_id: currentUser.user_id,\n      damage: finalDamage,\n      is_critical: isCritical,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      character_attack: character.attack,\n      monster_hp_remaining: newMonsterHp,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    if (newMonsterHp <= 0) {\n      defeatMonster();\n    } else {\n      // 몬스터 반격\n      setTimeout(() => monsterAttack(), 1000);\n    }\n  };\n\n  const monsterAttack = () => {\n    if (!currentMonster || currentMonster.hp <= 0) return;\n\n    const buffedDefense = character.defense + character.buffs.defense.amount;\n    const damage = calculateDamage(currentMonster.attack, buffedDefense);\n    const newHp = Math.max(0, character.hp - damage);\n    \n    setCharacter(prev => ({ ...prev, hp: newHp }));\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!' }\n    };\n    addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);\n\n    if (newHp <= 0) {\n      const gameTexts = (window as any).gameTexts || {\n        combat: { defeat: '전투에서 패배했습니다...' }\n      };\n      addToCombatLog(gameTexts.combat.defeat);\n      setIsAutoFighting(false);\n      \n      // 전투 실패 이벤트 로깅\n      onAction('combat_defeat', {\n        monster_name: currentMonster.name,\n        monster_level: currentMonster.level,\n        character_level: character.level,\n        dungeon_id: currentDungeon?.id || 'field',\n        dungeon_name: currentDungeon?.name || 'field',\n        damage_taken: currentMonster.attack,\n        character_defense: character.defense\n      });\n\n      // 던전에서 나가고 체력/마나 완전 회복\n      setTimeout(() => {\n        setCharacter(prev => ({\n          ...prev,\n          hp: prev.maxHp,\n          mp: prev.maxMp\n        }));\n        \n        if (inDungeon && currentDungeon) {\n          // 던전에서 나가기 (죽음으로 인한 자동 퇴장)\n          onAction('dungeon_exited', {\n            dungeon_id: currentDungeon.id,\n            dungeon_name: currentDungeon.name,\n            current_floor: currentDungeon.currentFloor,\n            total_floors: currentDungeon.floors,\n            character_level: character.level,\n            exit_reason: 'death',\n            time_spent: new Date().getTime()\n          });\n          setInDungeon(false);\n          setCurrentDungeon(null);\n          setCurrentTab('lobby');\n          setGameMode('lobby');\n          addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n        } else {\n          // 일반 필드에서는 새 몬스터 스폰\n          addToCombatLog('체력과 마나가 완전히 회복되었습니다!');\n          spawnMonster();\n        }\n      }, 2000);\n    }\n  };\n\n  const calculateDamage = (attack: number, defense: number): number => {\n    const baseDamage = Math.max(1, attack - Math.floor(defense * 0.5));\n    return Math.floor(baseDamage * (0.8 + Math.random() * 0.4));\n  };\n\n  const defeatMonster = () => {\n    if (!currentMonster) return;\n\n    const expGained = currentMonster.exp;\n    const goldGained = currentMonster.gold;\n    \n    setCharacter(prev => {\n      let newExp = prev.exp + expGained;\n      const newGold = prev.gold + goldGained;\n      let newLevel = prev.level;\n      let newMaxExp = prev.maxExp;\n      let newHp = prev.hp;\n      let newMp = prev.mp;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let availablePoints = prev.stats.availablePoints;\n\n      // 레벨업 체크\n      while (newExp >= newMaxExp) {\n        newLevel += 1;\n        newExp -= newMaxExp;\n        newMaxExp = Math.floor(newMaxExp * 1.5);\n        newMaxHp += 20;\n        newMaxMp += 10;\n        newHp = newMaxHp; // 레벨업 시 체력 완전 회복\n        newMp = newMaxMp; // 레벨업 시 마나 완전 회복\n        availablePoints += 5;\n        \n        addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);\n        \n        onAction('level_up', {\n          user_id: currentUser.user_id,\n          new_level: newLevel,\n          character_class: prev.class,\n          stat_points_gained: 5\n        });\n\n        // 던전 해금 체크\n        setAvailableDungeons(prevDungeons => \n          prevDungeons.map(dungeon => ({\n            ...dungeon,\n            isUnlocked: dungeon.isUnlocked || newLevel >= dungeon.requiredLevel\n          }))\n        );\n      }\n\n      return {\n        ...prev,\n        exp: newExp,\n        gold: newGold,\n        level: newLevel,\n        maxExp: newMaxExp,\n        hp: newHp,\n        mp: newMp,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        stats: { ...prev.stats, availablePoints }\n      };\n    });\n\n    // 아이템 드롭 처리\n    if (currentMonster.dropItems.length > 0) {\n      setInventory(prev => [...prev, ...currentMonster.dropItems]);\n      addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);\n    }\n\n    addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);\n\n    // 추적 카운터 업데이트\n    setMonstersDefeated(prev => prev + 1);\n    setTotalGoldEarned(prev => prev + goldGained);\n\n    onAction('monster_defeated', {\n      user_id: currentUser.user_id,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      exp_gained: expGained,\n      gold_gained: goldGained,\n      items_dropped: currentMonster.dropItems.length,\n      character_attack: character.attack,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    // 현재 몬스터 제거\n    setCurrentMonster(null);\n    \n    // 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\n    if (inDungeon && currentDungeon) {\n      // 현재 층을 클리어한 것으로 마킹\n      const updatedDungeon = {\n        ...currentDungeon,\n        clearedFloors: new Set([...Array.from(currentDungeon.clearedFloors), currentDungeon.currentFloor])\n      };\n      setCurrentDungeon(updatedDungeon);\n      \n      // 던전 리스트에서도 업데이트\n      setAvailableDungeons(prev => prev.map(d => \n        d.id === updatedDungeon.id ? updatedDungeon : d\n      ));\n      \n      // 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\n      addToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);\n      setTimeout(() => {\n        spawnDungeonMonster(updatedDungeon, true);\n      }, 2000);\n    } else {\n      // 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\n      if (!inDungeon) {\n        setTimeout(() => {\n          spawnMonster();\n        }, 2000);\n      }\n    }\n  };\n\n  // 다음 층으로 진행\n  const proceedToNextFloor = () => {\n    if (!currentDungeon) return;\n    \n    const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor + 1 };\n    setCurrentDungeon(updatedDungeon);\n    setShowDungeonChoice(false);\n    setTimeout(() => {\n      spawnDungeonMonster(updatedDungeon, true); // 강제 스폰\n      addToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);\n    }, 500);\n  };\n\n  // 던전 나가기\n  const exitDungeonAfterVictory = () => {\n    if (!currentDungeon) return;\n    \n    // 던전 나가기 이벤트 로깅\n    onAction('dungeon_exited', {\n      dungeon_id: currentDungeon.id,\n      dungeon_name: currentDungeon.name,\n      current_floor: currentDungeon.currentFloor,\n      total_floors: currentDungeon.floors,\n      character_level: character.level,\n      exit_reason: 'victory_choice',\n      time_spent: new Date().getTime()\n    });\n    \n    // 던전 리셋 (현재 층을 1층으로 되돌림)\n    const resetDungeon = { ...currentDungeon, currentFloor: 1 };\n    setAvailableDungeons(prev => prev.map(d => \n      d.id === resetDungeon.id ? resetDungeon : d\n    ));\n    \n    setInDungeon(false);\n    setCurrentDungeon(null);\n    setCurrentTab('lobby');\n    setGameMode('lobby');\n    setShowDungeonChoice(false);\n    \n    // 체력과 마나 완전 회복\n    setCharacter(prev => ({ ...prev, hp: prev.maxHp, mp: prev.maxMp }));\n    addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n    \n    // 새로운 일반 몬스터 생성\n    setTimeout(() => {\n      spawnMonster();\n    }, 1000);\n  };\n\n\n  // 자동 전투\n  useEffect(() => {\n    if (isAutoFighting && currentMonster && currentMonster.hp > 0 && character.hp > 0) {\n      const autoAttackTimer = setTimeout(() => {\n        attack();\n      }, 2000);\n\n      return () => clearTimeout(autoAttackTimer);\n    }\n  }, [isAutoFighting, currentMonster, character.hp]);\n\n  // 스킬 쿨다운 및 MP 회복\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + 1),\n        skills: prev.skills.map(skill => ({\n          ...skill,\n          currentCooldown: Math.max(0, skill.currentCooldown - 100)\n        })),\n        buffs: {\n          attack: {\n            amount: prev.buffs.attack.duration > 0 ? prev.buffs.attack.amount : 0,\n            duration: Math.max(0, prev.buffs.attack.duration - 100)\n          },\n          defense: {\n            amount: prev.buffs.defense.duration > 0 ? prev.buffs.defense.amount : 0,\n            duration: Math.max(0, prev.buffs.defense.duration - 100)\n          },\n          speed: {\n            amount: prev.buffs.speed.duration > 0 ? prev.buffs.speed.amount : 0,\n            duration: Math.max(0, prev.buffs.speed.duration - 100)\n          }\n        }\n      }));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToCombatLog = (message: string) => {\n    setCombatLog(prev => {\n      const newLog = [...prev, message];\n      if (newLog.length > 50) newLog.shift();\n      return newLog;\n    });\n    \n    // Auto-scroll to bottom immediately and with backup timing\n    if (logRef.current) {\n      logRef.current.scrollTop = logRef.current.scrollHeight;\n    }\n    \n    // Additional scroll with slight delay to ensure content is rendered\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 10);\n    \n    // Final backup scroll\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  // 스탯 분배\n  const allocateStatPoint = (stat: keyof Omit<CharacterStats, 'availablePoints'>) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [stat]: prev.stats[stat] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      },\n      // 스탯에 따른 능력치 업데이트\n      attack: stat === 'strength' ? prev.attack + 2 : prev.attack,\n      defense: stat === 'vitality' ? prev.defense + 1 : prev.defense,\n      maxHp: stat === 'vitality' ? prev.maxHp + 10 : prev.maxHp,\n      maxMp: stat === 'intelligence' ? prev.maxMp + 5 : prev.maxMp,\n      speed: stat === 'agility' ? prev.speed + 1 : prev.speed\n    }));\n  };\n\n  // 아이템 장착\n  const equipItem = (item: Item) => {\n    // 소비 아이템은 장착할 수 없음\n    if (item.type === 'consumable') {\n      return;\n    }\n    \n    // 기존에 장착된 아이템이 있는지 확인\n    const slot = item.type as keyof Equipment;\n    const currentEquippedItem = character.equipment[slot];\n    \n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = item;\n\n      // 기존 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (currentEquippedItem) {\n        if (currentEquippedItem.stats.attack) newAttack -= currentEquippedItem.stats.attack;\n        if (currentEquippedItem.stats.defense) newDefense -= currentEquippedItem.stats.defense;\n        if (currentEquippedItem.stats.hp) newMaxHp -= currentEquippedItem.stats.hp;\n        if (currentEquippedItem.stats.mp) newMaxMp -= currentEquippedItem.stats.mp;\n        if (currentEquippedItem.stats.speed) newSpeed -= currentEquippedItem.stats.speed;\n      }\n\n      // 새 아이템의 스탯 적용\n      if (item.stats.attack) newAttack += item.stats.attack;\n      if (item.stats.defense) newDefense += item.stats.defense;\n      if (item.stats.hp) newMaxHp += item.stats.hp;\n      if (item.stats.mp) newMaxMp += item.stats.mp;\n      if (item.stats.speed) newSpeed += item.stats.speed;\n\n      // 스탯이 최소값 이하로 내려가지 않도록 보정\n      newAttack = Math.max(1, newAttack);\n      newDefense = Math.max(0, newDefense);\n      newMaxHp = Math.max(100, newMaxHp);\n      newMaxMp = Math.max(50, newMaxMp);\n      newSpeed = Math.max(1, newSpeed);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: newAttack,\n        defense: newDefense,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        speed: newSpeed,\n        hp: Math.min(prev.hp, newMaxHp), // 최대 체력이 줄어들 경우 현재 체력도 조정\n        mp: Math.min(prev.mp, newMaxMp)  // 최대 마나가 줄어들 경우 현재 마나도 조정\n      };\n    });\n\n    // 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\n    if (currentEquippedItem) {\n      setInventory(prev => [...prev, currentEquippedItem]);\n      addToCombatLog(`기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`);\n    } else {\n      addToCombatLog(`${item.name}을 장착했습니다!`);\n    }\n\n    // 인벤토리에서 새 아이템 제거\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n  };\n\n  // 장비 해제\n  const unequipItem = (slot: keyof Equipment) => {\n    const equippedItem = character.equipment[slot];\n    if (!equippedItem) return;\n\n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = undefined;\n\n      // 장착 해제한 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (equippedItem.stats.attack) newAttack -= equippedItem.stats.attack;\n      if (equippedItem.stats.defense) newDefense -= equippedItem.stats.defense;\n      if (equippedItem.stats.hp) newMaxHp -= equippedItem.stats.hp;\n      if (equippedItem.stats.mp) newMaxMp -= equippedItem.stats.mp;\n      if (equippedItem.stats.speed) newSpeed -= equippedItem.stats.speed;\n\n      // HP가 maxHp를 초과하지 않도록 조정\n      const adjustedHp = Math.min(prev.hp, newMaxHp);\n      const adjustedMp = Math.min(prev.mp, newMaxMp);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: Math.max(1, newAttack), // 최소 공격력 1\n        defense: Math.max(0, newDefense),\n        maxHp: Math.max(100, newMaxHp), // 최소 체력 100\n        maxMp: Math.max(50, newMaxMp), // 최소 마나 50\n        speed: Math.max(1, newSpeed), // 최소 속도 1\n        hp: adjustedHp,\n        mp: adjustedMp\n      };\n    });\n\n    // 인벤토리에 아이템 추가\n    setInventory(prev => [...prev, equippedItem]);\n    addToCombatLog(`${equippedItem.name}을 해제했습니다!`);\n  };\n\n\n  // 아이템 판매\n  const sellItem = (item: Item) => {\n    const sellPrice = Math.floor(item.price * 0.7);\n    setCharacter(prev => ({ ...prev, gold: prev.gold + sellPrice }));\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);\n  };\n\n  // 아이템 구매\n  const buyItem = (item: Item) => {\n    if (character.gold < item.price) return;\n    \n    setCharacter(prev => ({ ...prev, gold: prev.gold - item.price }));\n    setInventory(prev => [...prev, { ...item, id: `${item.id}_${Date.now()}` }]);\n    addToCombatLog(`${item.name}을 구매했습니다!`);\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: '#9ca3af',\n      rare: '#3b82f6',\n      epic: '#8b5cf6',\n      legendary: '#f59e0b',\n      mythic: '#ef4444'\n    };\n    return colors[rarity as keyof typeof colors] || '#9ca3af';\n  };\n\n  // 던전 입장 함수\n  const enterDungeon = (dungeon: Dungeon) => {\n    if (dungeon.isComingSoon) {\n      addToCombatLog('이 던전은 아직 업데이트 예정입니다!');\n      return;\n    }\n    if (character.level < dungeon.requiredLevel) {\n      addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);\n      return;\n    }\n    setCurrentDungeon(dungeon);\n    setInDungeon(true);\n    setGameMode('dungeon');\n    setCurrentTab('dungeon');\n    spawnDungeonMonster(dungeon);\n    \n    // 이벤트 로깅\n    onAction('dungeon_entered', {\n      dungeon_id: dungeon.id,\n      dungeon_name: dungeon.name,\n      character_level: character.level,\n      floor: dungeon.currentFloor,\n      character_attack: character.attack,\n      character_defense: character.defense,\n      character_hp: character.hp,\n      character_mp: character.mp,\n      entry_time: new Date().getTime()\n    });\n  };\n\n  // 던전 몬스터 스폰\n  const spawnDungeonMonster = (dungeon: Dungeon, forceSpawn = false) => {\n    // 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\n    if (currentMonster && !forceSpawn) return;\n    \n    // 강제 생성인 경우 기존 몬스터를 먼저 제거\n    if (forceSpawn && currentMonster) {\n      setCurrentMonster(null);\n    }\n    // 던전별 고유 몬스터 타입 정의\n    const getDungeonMonsters = (dungeonId: string) => {\n      switch (dungeonId) {\n        case 'forest': // 어둠의 숲\n          return [\n            { name: '늑대', baseHp: 40, baseAttack: 10, baseDefense: 3 },\n            { name: '곰', baseHp: 80, baseAttack: 16, baseDefense: 6 },\n            { name: '거대 거미', baseHp: 120, baseAttack: 22, baseDefense: 10 },\n            { name: '숲의 수호자', baseHp: 200, baseAttack: 35, baseDefense: 18 },\n            { name: '고대 엔트', baseHp: 350, baseAttack: 45, baseDefense: 25 }\n          ];\n        case 'cave': // 고블린 동굴\n          return [\n            { name: '고블린 전사', baseHp: 60, baseAttack: 14, baseDefense: 5 },\n            { name: '고블린 궁수', baseHp: 45, baseAttack: 18, baseDefense: 3 },\n            { name: '고블린 마법사', baseHp: 50, baseAttack: 20, baseDefense: 4 },\n            { name: '고블린 우두머리', baseHp: 180, baseAttack: 30, baseDefense: 15 },\n            { name: '고블린 왕', baseHp: 400, baseAttack: 50, baseDefense: 28 }\n          ];\n        case 'tower': // 마법사의 탑\n          return [\n            { name: '마법 골렘', baseHp: 100, baseAttack: 20, baseDefense: 12 },\n            { name: '스켈레톤 메이지', baseHp: 70, baseAttack: 25, baseDefense: 8 },\n            { name: '플레임 엘리멘탈', baseHp: 110, baseAttack: 28, baseDefense: 10 },\n            { name: '리치', baseHp: 250, baseAttack: 40, baseDefense: 20 },\n            { name: '고대 마법사', baseHp: 500, baseAttack: 60, baseDefense: 35 }\n          ];\n        default:\n          return [\n            { name: '슬라임', baseHp: 30, baseAttack: 8, baseDefense: 2 },\n            { name: '고블린', baseHp: 50, baseAttack: 12, baseDefense: 4 },\n            { name: '오크', baseHp: 100, baseAttack: 18, baseDefense: 8 },\n            { name: '트롤', baseHp: 150, baseAttack: 25, baseDefense: 12 },\n            { name: '드래곤', baseHp: 300, baseAttack: 40, baseDefense: 20 }\n          ];\n      }\n    };\n\n    const baseMonsters = getDungeonMonsters(dungeon.id);\n\n    // 층수에 따른 점진적 몬스터 선택 로직\n    const floorBasedMonsterIndex = () => {\n      const currentFloor = dungeon.currentFloor;\n      if (currentFloor <= 3) return 0; // 첫 번째 몬스터 (1~3층)\n      if (currentFloor <= 7) return 1; // 두 번째 몬스터 (4~7층)  \n      if (currentFloor <= 12) return 2; // 세 번째 몬스터 (8~12층)\n      if (currentFloor <= 18) return 3; // 네 번째 몬스터 (13~18층)\n      return 4; // 다섯 번째 몬스터 (19층 이상)\n    };\n    \n    // 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\n    const baseIndex = floorBasedMonsterIndex();\n    const randomVariation = Math.random() < 0.3 && baseIndex > 0 ? -1 : 0; // 30% 확률로 한 단계 낮은 몬스터\n    const selectedIndex = Math.max(0, baseIndex + randomVariation);\n    \n    const selectedMonster = baseMonsters[selectedIndex];\n    const levelMultiplier = 1 + (dungeon.level + dungeon.currentFloor - 1) * 0.2;\n\n    const monster: Monster = {\n      id: `dungeon_${dungeon.id}_${Date.now()}`,\n      name: selectedMonster.name,\n      level: dungeon.level + dungeon.currentFloor,\n      hp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      attack: Math.floor(selectedMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(selectedMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor((20 + dungeon.level * 8 + dungeon.currentFloor * 3) * levelMultiplier),\n      gold: Math.floor((10 + dungeon.level * 3) * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: dungeon.currentFloor % 5 === 0\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 2;\n      monster.maxHp *= 2;\n      monster.attack *= 1.5;\n      monster.exp *= 3;\n      monster.gold *= 2;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);\n  };\n\n  // 물약 사용 함수\n  const consumeItem = (item: Item) => {\n    if (item.type !== 'consumable' || !item.consumableEffect) return;\n\n    const effect = item.consumableEffect;\n\n    // 체력 회복\n    if (effect.healHp) {\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + effect.healHp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);\n    }\n\n    // 마나 회복\n    if (effect.healMp) {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + effect.healMp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);\n    }\n\n    // 버프 효과\n    if (effect.buffType && effect.buffAmount && effect.buffDuration) {\n      setCharacter(prev => ({\n        ...prev,\n        buffs: {\n          ...prev.buffs,\n          [effect.buffType!]: {\n            amount: effect.buffAmount!,\n            duration: effect.buffDuration!\n          }\n        }\n      }));\n      addToCombatLog(`${item.name}을 사용하여 ${effect.buffType === 'attack' ? '공격력' : effect.buffType === 'defense' ? '방어력' : '속도'} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);\n    }\n\n    // 인벤토리에서 물약 제거 또는 수량 감소\n    setInventory(prev => {\n      const itemIndex = prev.findIndex(invItem => invItem.id === item.id);\n      if (itemIndex !== -1) {\n        const newInventory = [...prev];\n        const currentItem = newInventory[itemIndex];\n        if (currentItem.quantity && currentItem.quantity > 1) {\n          newInventory[itemIndex] = { ...currentItem, quantity: currentItem.quantity - 1 };\n        } else {\n          newInventory.splice(itemIndex, 1);\n        }\n        return newInventory;\n      }\n      return prev;\n    });\n\n    // 이벤트 로깅\n    onAction('consumable_used', {\n      item_name: item.name,\n      item_type: item.type,\n      character_level: character.level,\n      heal_hp: effect.healHp || 0,\n      heal_mp: effect.healMp || 0,\n      buff_type: effect.buffType || 'none',\n      buff_amount: effect.buffAmount || 0,\n      character_hp_before: character.hp,\n      character_mp_before: character.mp,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스킬 사용 함수\n  const castSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    if (skill.currentCooldown > 0 || character.mp < skill.manaCost) return;\n\n    // 스킬 사용 로직\n    if (skill.id === 'heal') {\n      const healAmount = 30 + skill.level * 5;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${healAmount}만큼 회복했다!`);\n    } else {\n      // 공격 스킬\n      if (currentMonster) {\n        const damage = calculateSkillDamage(skill, character);\n        const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n        setCurrentMonster(prev => prev ? {...prev, hp: newMonsterHp} : null);\n        setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n        addToCombatLog(`${skill.name}로 ${damage} 데미지!`);\n\n        // 몬스터가 죽지 않았으면 반격\n        if (newMonsterHp > 0) {\n          setTimeout(() => {\n            monsterAttack();\n          }, 1000);\n        } else {\n          // 몬스터가 죽었으면 처치 처리\n          setTimeout(() => {\n            defeatMonster();\n          }, 1500);\n        }\n      }\n    }\n    \n    // 쿨다운 적용\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? {...s, currentCooldown: s.cooldown} : s\n      )\n    }));\n\n    // 이벤트 로깅\n    onAction('skill_used', {\n      skill_name: skill.name,\n      skill_level: skill.level,\n      mana_cost: skill.manaCost,\n      character_level: character.level,\n      character_mp_before: character.mp,\n      character_mp_after: character.mp - skill.manaCost,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스탯 포인트 할당\n  const allocateStat = (statName: keyof CharacterStats) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [statName]: prev.stats[statName] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      }\n    }));\n\n    // 스탯에 따른 능력치 업데이트\n    let hpBonus = 0, mpBonus = 0, attackBonus = 0, defenseBonus = 0;\n    if (statName === 'vitality') hpBonus = 5;\n    if (statName === 'intelligence') mpBonus = 3;\n    if (statName === 'strength') attackBonus = 2;\n    if (statName === 'agility') { attackBonus = 1; defenseBonus = 1; }\n\n    setCharacter(prev => ({\n      ...prev,\n      maxHp: prev.maxHp + hpBonus,\n      hp: prev.hp + hpBonus,\n      maxMp: prev.maxMp + mpBonus,\n      mp: prev.mp + mpBonus,\n      attack: prev.attack + attackBonus,\n      defense: prev.defense + defenseBonus\n    }));\n\n    // 이벤트 로깅\n    onAction('stat_allocated', {\n      stat_name: statName,\n      stat_value: character.stats[statName] + 1,\n      character_level: character.level,\n      available_points: character.stats.availablePoints - 1\n    });\n  };\n\n  // 공통 캐릭터 정보 헤더 컴포넌트\n  const renderCharacterHeader = () => {\n    const expPercentage = (character.exp / character.maxExp) * 100;\n    \n    return (\n      <div style={{\n        background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n        borderRadius: '15px',\n        padding: '15px 20px',\n        marginBottom: '20px',\n        color: 'white'\n      }}>\n        {/* 기본 스탯 정보 */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n          gap: '15px',\n          marginBottom: '15px'\n        }}>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#ffffff' }}>\n              Lv.{character.level}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>레벨</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#fbbf24' }}>\n              {character.gold}G\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>골드</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#f87171' }}>\n              {character.attack}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>공격력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#60a5fa' }}>\n              {character.defense}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>방어력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#34d399' }}>\n              {character.hp}/{character.maxHp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>체력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#a78bfa' }}>\n              {character.mp}/{character.maxMp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>마나</div>\n          </div>\n        </div>\n\n        {/* 경험치 바 */}\n        <div style={{ marginTop: '15px' }}>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            marginBottom: '5px'\n          }}>\n            <span style={{ fontSize: '14px', color: '#e0e7ff' }}>경험치</span>\n            <span style={{ fontSize: '14px', color: '#ffffff', fontWeight: 'bold' }}>\n              {character.exp} / {character.maxExp} ({Math.floor(expPercentage)}%)\n            </span>\n          </div>\n          <div style={{\n            width: '100%',\n            height: '8px',\n            backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              width: `${expPercentage}%`,\n              height: '100%',\n              background: 'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',\n              borderRadius: '10px',\n              transition: 'width 0.3s ease'\n            }} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // 로비 렌더링\n  const renderLobbyTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>🏠 모험가 로비</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>던전을 선택하여 모험을 시작하세요!</p>\n      </div>\n\n      {/* 던전 목록 */}\n      <div style={{ marginBottom: '20px' }}>\n        <h3 style={{ color: 'white', marginBottom: '15px', fontSize: '20px' }}>🏰 던전 목록</h3>\n        <div style={{ display: 'grid', gap: '15px' }}>\n          {availableDungeons.map(dungeon => (\n            <div\n              key={dungeon.id}\n              style={{\n                background: dungeon.isUnlocked ? '#374151' : '#1f2937',\n                borderRadius: '10px',\n                padding: '20px',\n                border: dungeon.isUnlocked ? '2px solid #10b981' : '2px solid #4b5563',\n                opacity: dungeon.isUnlocked ? 1 : 0.6\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                  <h4 style={{ color: 'white', margin: '0 0 5px 0', fontSize: '18px' }}>\n                    {dungeon.name} (Lv.{dungeon.level})\n                  </h4>\n                  <p style={{ color: '#9ca3af', margin: '0 0 10px 0', fontSize: '14px' }}>\n                    {dungeon.description}\n                  </p>\n                  <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                    필요 레벨: {dungeon.requiredLevel} | 층수: {dungeon.floors}층 | 현재 층: {dungeon.currentFloor}층\n                  </div>\n                </div>\n                <button\n                  onClick={() => enterDungeon(dungeon)}\n                  disabled={!dungeon.isUnlocked || character.level < dungeon.requiredLevel || dungeon.isComingSoon}\n                  style={{\n                    background: dungeon.isComingSoon \n                      ? 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)'\n                      : dungeon.isUnlocked && character.level >= dungeon.requiredLevel\n                      ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)'\n                      : '#4b5563',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 20px',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    cursor: (dungeon.isUnlocked && character.level >= dungeon.requiredLevel && !dungeon.isComingSoon) ? 'pointer' : 'not-allowed',\n                    transition: 'all 0.3s ease'\n                  }}\n                >\n                  {dungeon.isComingSoon ? '업데이트 예정' : \n                   dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? '입장' : '잠금'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 던전 탭 렌더링\n  const renderDungeonTab = () => {\n    if (!inDungeon || !currentDungeon) {\n      return (\n        <div style={{ padding: '100px 20px', textAlign: 'center', background: '#1f2937', color: '#9ca3af' }}>\n          <h3>던전에 입장하지 않았습니다</h3>\n          <p>로비에서 던전을 선택해주세요</p>\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n        {/* 공통 캐릭터 헤더 */}\n        {renderCharacterHeader()}\n\n        {/* 던전 정보 */}\n        <div style={{\n          background: 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white'\n        }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n            <div>\n              <h2 style={{ margin: '0 0 5px 0', fontSize: '24px' }}>\n                🏰 {currentDungeon.name}\n              </h2>\n              <p style={{ margin: 0, opacity: 0.9, fontSize: '14px' }}>\n                {currentDungeon.currentFloor}층 / {currentDungeon.floors}층\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                // 던전 나가기 이벤트 로깅\n                onAction('dungeon_exited', {\n                  dungeon_id: currentDungeon.id,\n                  dungeon_name: currentDungeon.name,\n                  current_floor: currentDungeon.currentFloor,\n                  total_floors: currentDungeon.floors,\n                  character_level: character.level,\n                  exit_reason: 'manual',\n                  time_spent: new Date().getTime()\n                });\n                setInDungeon(false);\n                setCurrentDungeon(null);\n                setCurrentTab('lobby');\n                setGameMode('lobby');\n              }}\n              style={{\n                background: '#374151',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '10px 15px',\n                cursor: 'pointer'\n              }}\n            >\n              던전 나가기\n            </button>\n          </div>\n          \n          {/* 층 진행 컨트롤 */}\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '15px',\n            background: 'rgba(0, 0, 0, 0.2)',\n            borderRadius: '10px'\n          }}>\n            <button\n              onClick={() => {\n                if (currentDungeon.currentFloor > 1) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor - 1 };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                }\n              }}\n              disabled={currentDungeon.currentFloor <= 1}\n              style={{\n                background: currentDungeon.currentFloor <= 1 ? '#6b7280' : '#3b82f6',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: currentDungeon.currentFloor <= 1 ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬆️ 이전 층\n            </button>\n            \n            <input\n              type=\"number\"\n              min=\"1\"\n              max={currentDungeon.floors}\n              value={currentDungeon.currentFloor}\n              placeholder=\"층\"\n              onChange={(e) => {\n                const targetFloor = parseInt(e.target.value);\n                if (targetFloor >= 1 && targetFloor <= currentDungeon.floors) {\n                  // Check if all previous floors are cleared\n                  let canMoveTo = true;\n                  for (let i = 1; i < targetFloor; i++) {\n                    if (!currentDungeon.clearedFloors.has(i)) {\n                      canMoveTo = false;\n                      addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);\n                      break;\n                    }\n                  }\n                  \n                  if (canMoveTo) {\n                    const updatedDungeon = { ...currentDungeon, currentFloor: targetFloor };\n                    setCurrentDungeon(updatedDungeon);\n                    setCurrentMonster(null);\n                    addToCombatLog(`${targetFloor}층으로 이동했습니다.`);\n                    setTimeout(() => {\n                      spawnDungeonMonster(updatedDungeon, true);\n                    }, 1000);\n                  }\n                }\n              }}\n              style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                textAlign: 'center',\n                width: '80px'\n              }}\n            />\n            \n            <button\n              onClick={() => {\n                const nextFloor = currentDungeon.currentFloor + 1;\n                const currentFloorCleared = currentDungeon.clearedFloors.has(currentDungeon.currentFloor);\n                \n                if (currentDungeon.currentFloor < currentDungeon.floors && currentFloorCleared) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: nextFloor };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                } else if (!currentFloorCleared) {\n                  addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);\n                }\n              }}\n              disabled={currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)}\n              style={{\n                background: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? '#6b7280' : '#10b981',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬇️ 다음 층\n            </button>\n          </div>\n        </div>\n\n        {/* 층 진행 상태 표시 */}\n      {showDungeonChoice && (\n        <div style={{\n          background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white',\n          textAlign: 'center'\n        }}>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '10px' }}>\n            🏃 다음 층으로 이동 중...\n          </div>\n          <div style={{\n            background: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            height: '8px',\n            overflow: 'hidden',\n            marginBottom: '10px'\n          }}>\n            <div style={{\n              background: 'linear-gradient(90deg, #10b981, #059669)',\n              height: '100%',\n              width: '100%',\n              borderRadius: '10px',\n              animation: 'progress 3s linear'\n            }} />\n          </div>\n          <div style={{ fontSize: '14px', opacity: 0.9 }}>\n            잠시만 기다려주세요...\n          </div>\n        </div>\n      )}\n\n      {/* 전투 영역 - 기존 renderCombatTab과 동일한 전투 시스템 */}\n        {currentMonster && (\n          <div style={{\n            background: '#374151',\n            borderRadius: '15px',\n            padding: '20px',\n            marginBottom: '20px'\n          }}>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>\n              {/* 캐릭터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  ⚔️\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {character.name} Lv.{character.level}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(character.hp / character.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {character.hp}/{character.maxHp}\n                  </div>\n                </div>\n              </div>\n\n              {/* 몬스터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  👹\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {currentMonster.name} Lv.{currentMonster.level}\n                  {currentMonster.isBoss && <span style={{ color: '#fbbf24' }}> 👑</span>}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(currentMonster.hp / currentMonster.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {currentMonster.hp}/{currentMonster.maxHp}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 전투 버튼들 */}\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginBottom: '20px' }}>\n              <button\n                onClick={attack}\n                disabled={character.hp <= 0}\n                style={{\n                  background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                  opacity: character.hp > 0 ? 1 : 0.5\n                }}\n              >\n                ⚔️ 공격\n              </button>\n              <button\n                onClick={() => setIsAutoFighting(!isAutoFighting)}\n                style={{\n                  background: isAutoFighting \n                    ? 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)'\n                    : 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: 'pointer'\n                }}\n              >\n                {isAutoFighting ? '⏸️ 자동 중지' : '▶️ 자동 전투'}\n              </button>\n            </div>\n\n            {/* 스킬 버튼들 */}\n            {character.skills.filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0).length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  ✨ 스킬 사용 (MP: {character.mp}/{character.maxMp})\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {character.skills\n                    .filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0)\n                    .map(skill => (\n                      <button\n                        key={skill.id}\n                        onClick={() => castSkill(skill)}\n                        disabled={character.hp <= 0 || skill.currentCooldown > 0 || character.mp < skill.manaCost}\n                        style={{\n                          background: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost\n                            ? 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)'\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '10px 16px',\n                          fontSize: '14px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${skill.description}\\n대미지: ${calculateSkillDamage(skill, character)} | 마나: ${skill.manaCost}`}\n                      >\n                        <div>{skill.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          MP: {skill.manaCost}\n                          {skill.currentCooldown > 0 && (\n                            <> | {(skill.currentCooldown/1000).toFixed(1)}s</>\n                          )}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 물약 버튼들 */}\n            {inventory.filter(item => item.type === 'consumable').length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  🧪 물약 사용\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {inventory\n                    .filter(item => item.type === 'consumable')\n                    .map(item => (\n                      <button\n                        key={item.id}\n                        onClick={() => consumeItem(item)}\n                        disabled={character.hp <= 0}\n                        style={{\n                          background: character.hp > 0\n                            ? `linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '8px 12px',\n                          fontSize: '12px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${item.name}\\n${item.consumableEffect?.healHp ? `HP +${item.consumableEffect.healHp}` : ''}${item.consumableEffect?.healMp ? `MP +${item.consumableEffect.healMp}` : ''}${item.consumableEffect?.buffType ? `${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}` : ''}`}\n                      >\n                        <div>{item.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          {item.quantity && item.quantity > 1 ? `x${item.quantity}` : ''}\n                          {item.consumableEffect?.healHp && ` HP+${item.consumableEffect.healHp}`}\n                          {item.consumableEffect?.healMp && ` MP+${item.consumableEffect.healMp}`}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 전투 로그 */}\n            <div style={{\n              background: '#1f2937',\n              borderRadius: '10px',\n              padding: '15px',\n              height: '200px',\n              overflowY: 'auto',\n              fontSize: '14px'\n            }}>\n              <div style={{ color: '#9ca3af', marginBottom: '10px', fontWeight: 'bold' }}>\n                전투 로그:\n              </div>\n              {combatLog.slice(-10).map((log, index) => (\n                <div key={index} style={{ color: '#e5e7eb', marginBottom: '5px', lineHeight: '1.4' }}>\n                  {log}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // 캐릭터 탭 렌더링 (RPG 스타일 UI)\n  const renderCharacterTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      {/* 메인 캐릭터 창 - RPG 스타일 */}\n      <div style={{\n        background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n        border: '2px solid #475569',\n        borderRadius: '12px',\n        padding: '20px',\n        display: 'flex',\n        gap: '30px',\n        minHeight: '500px'\n      }}>\n        \n        {/* 좌측: 장비 슬롯 영역 */}\n        <div style={{ flex: '0 0 300px' }}>\n          <h3 style={{ color: '#f1f5f9', margin: '0 0 20px 0', fontSize: '18px', fontWeight: 'bold', textAlign: 'center' }}>\n            ⚔️ 장비\n          </h3>\n          \n          {/* 장비 슬롯 그리드 */}\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '10px',\n            marginBottom: '20px'\n          }}>\n            {/* 투구 */}\n            {renderEquipmentSlot('helmet', '⛑️')}\n            <div></div> {/* 빈 공간 */}\n            <div></div> {/* 빈 공간 */}\n            \n            {/* 반지 */}\n            {renderEquipmentSlot('ring', '💍')}\n            {/* 갑옷 */}\n            {renderEquipmentSlot('armor', '🛡️')}\n            {/* 무기 */}\n            {renderEquipmentSlot('weapon', '⚔️')}\n            \n            {/* 신발 */}\n            {renderEquipmentSlot('boots', '👢')}\n            {/* 목걸이 */}\n            {renderEquipmentSlot('amulet', '📿')}\n            <div></div> {/* 빈 공간 */}\n          </div>\n        </div>\n\n        {/* 우측: 능력치 정보 영역 */}\n        <div style={{ flex: '1' }}>\n          {/* 사용 가능한 포인트 */}\n          {character.stats.availablePoints > 0 && (\n            <div style={{\n              background: 'rgba(16, 185, 129, 0.2)',\n              border: '1px solid #10b981',\n              borderRadius: '8px',\n              padding: '12px',\n              marginBottom: '20px',\n              textAlign: 'center'\n            }}>\n              <div style={{ color: '#10b981', fontSize: '16px', fontWeight: 'bold' }}>\n                사용 가능한 포인트: {character.stats.availablePoints}\n              </div>\n            </div>\n          )}\n\n          {/* 기본 능력치 */}\n          <div style={{\n            background: 'rgba(15, 23, 42, 0.8)',\n            border: '1px solid #475569',\n            borderRadius: '8px',\n            padding: '15px',\n            marginBottom: '20px'\n          }}>\n            <h4 style={{ color: '#f1f5f9', margin: '0 0 15px 0', fontSize: '16px', fontWeight: 'bold' }}>\n              📊 기본 능력치\n            </h4>\n            \n            {/* 능력치 리스트 */}\n            {[\n              { key: 'strength', name: '힘', icon: '💪', color: '#dc2626', bonus: character.stats.strength * 2, bonusType: '공격력' },\n              { key: 'agility', name: '민첩성', icon: '⚡', color: '#10b981', bonus: character.stats.agility, bonusType: '속도' },\n              { key: 'vitality', name: '체력', icon: '🛡️', color: '#3b82f6', bonus: character.stats.vitality * 10, bonusType: 'HP' },\n              { key: 'intelligence', name: '지능', icon: '🧠', color: '#7c3aed', bonus: character.stats.intelligence * 5, bonusType: 'MP' }\n            ].map(stat => (\n              <div key={stat.key} style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px 0',\n                borderBottom: '1px solid rgba(71, 85, 105, 0.3)'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                  <span style={{ fontSize: '16px' }}>{stat.icon}</span>\n                  <span style={{ color: '#f1f5f9', fontSize: '14px' }}>{stat.name}</span>\n                  <span style={{ color: stat.color, fontSize: '16px', fontWeight: 'bold' }}>\n                    {character.stats[stat.key as keyof typeof character.stats]}\n                  </span>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                  <span style={{ color: stat.color, fontSize: '12px' }}>\n                    +{stat.bonus} {stat.bonusType}\n                  </span>\n                  <button\n                    onClick={() => allocateStat(stat.key as keyof CharacterStats)}\n                    disabled={character.stats.availablePoints <= 0}\n                    style={{\n                      background: character.stats.availablePoints > 0 ? stat.color : '#4b5563',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      padding: '4px 8px',\n                      fontSize: '12px',\n                      cursor: character.stats.availablePoints > 0 ? 'pointer' : 'not-allowed',\n                      minWidth: '24px'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* 전투 능력치 */}\n          <div style={{\n            background: 'rgba(15, 23, 42, 0.8)',\n            border: '1px solid #475569',\n            borderRadius: '8px',\n            padding: '15px'\n          }}>\n            <h4 style={{ color: '#f1f5f9', margin: '0 0 15px 0', fontSize: '16px', fontWeight: 'bold' }}>\n              ⚔️ 전투 능력치\n            </h4>\n            \n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n              <div>\n                <div style={{ color: '#dc2626', fontSize: '14px', fontWeight: 'bold' }}>공격력</div>\n                <div style={{ color: '#f1f5f9', fontSize: '18px', fontWeight: 'bold' }}>{character.attack}</div>\n              </div>\n              <div>\n                <div style={{ color: '#3b82f6', fontSize: '14px', fontWeight: 'bold' }}>방어력</div>\n                <div style={{ color: '#f1f5f9', fontSize: '18px', fontWeight: 'bold' }}>{character.defense}</div>\n              </div>\n              <div>\n                <div style={{ color: '#ef4444', fontSize: '14px', fontWeight: 'bold' }}>체력</div>\n                <div style={{ color: '#f1f5f9', fontSize: '16px' }}>{character.hp} / {character.maxHp}</div>\n              </div>\n              <div>\n                <div style={{ color: '#8b5cf6', fontSize: '14px', fontWeight: 'bold' }}>마나</div>\n                <div style={{ color: '#f1f5f9', fontSize: '16px' }}>{character.mp} / {character.maxMp}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // 장비 슬롯 렌더링 함수\n  const renderEquipmentSlot = (slot: keyof Equipment, icon: string) => {\n    const item = character.equipment[slot];\n    const rarityColor = item?.rarity === 'legendary' ? '#f59e0b' :\n                       item?.rarity === 'epic' ? '#a855f7' :\n                       item?.rarity === 'rare' ? '#3b82f6' :\n                       item?.rarity === 'mythic' ? '#ef4444' : '#9ca3af';\n\n    return (\n      <div style={{\n        width: '70px',\n        height: '70px',\n        background: item ? 'rgba(16, 185, 129, 0.2)' : 'rgba(71, 85, 105, 0.3)',\n        border: item ? `2px solid ${rarityColor}` : '2px solid #475569',\n        borderRadius: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative',\n        cursor: item ? 'pointer' : 'default'\n      }}>\n        {item ? (\n          <>\n            <div style={{ fontSize: '24px' }}>{icon}</div>\n            <div style={{ \n              fontSize: '8px', \n              color: rarityColor, \n              fontWeight: 'bold',\n              textAlign: 'center',\n              lineHeight: '1'\n            }}>\n              {item.name.length > 6 ? item.name.substring(0, 6) + '...' : item.name}\n            </div>\n            <button\n              onClick={() => unequipItem(slot)}\n              style={{\n                position: 'absolute',\n                top: '-5px',\n                right: '-5px',\n                background: '#dc2626',\n                color: 'white',\n                border: 'none',\n                borderRadius: '50%',\n                width: '16px',\n                height: '16px',\n                fontSize: '10px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}\n            >\n              ×\n            </button>\n          </>\n        ) : (\n          <div style={{ fontSize: '24px', opacity: 0.3 }}>{icon}</div>\n        )}\n      </div>\n    );\n  };\n\n  // 인벤토리 탭 렌더링\n  // 아이템 아이콘 맵핑\n  const getItemIcon = (item: Item) => {\n    const iconMap: { [key: string]: string } = {\n      // 무기\n      'iron-sword': '⚔️',\n      'steel-sword': '🗡️',\n      'magic-sword': '⚡',\n      'legendary-sword': '🔥',\n      'dragon-slayer': '🐉',\n      // 방어구\n      'leather-armor': '🛡️',\n      'iron-armor': '⛨',\n      'steel-armor': '🛡️',\n      'magic-armor': '✨',\n      'dragon-armor': '🔮',\n      // 헬멧\n      'iron-helmet': '⛑️',\n      'steel-helmet': '👑',\n      'magic-helmet': '💎',\n      // 부츠\n      'leather-boots': '👢',\n      'iron-boots': '🥾',\n      'steel-boots': '👢',\n      'magic-boots': '⚡',\n      // 반지/목걸이\n      'power-ring': '💍',\n      'magic-ring': '💫',\n      'health-ring': '❤️',\n      'defense-ring': '🛡️',\n      // 소모품\n      'health-potion': '🧪',\n      'mana-potion': '💙',\n      'strength-potion': '💪',\n      'defense-potion': '🛡️'\n    };\n    return iconMap[item.id] || '📦';\n  };\n\n  // 선택된 아이템 상세 정보\n  const [selectedItem, setSelectedItem] = useState<Item | null>(null);\n\n  const renderInventoryTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>🎒 인벤토리</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>골드: {character.gold.toLocaleString()}G</p>\n      </div>\n\n      <div style={{ display: 'flex', gap: '20px' }}>\n        {/* 인벤토리 그리드 */}\n        <div style={{ flex: 1 }}>\n          <h3 style={{ color: 'white', marginBottom: '15px' }}>📦 소지품 ({inventory.length}/50)</h3>\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(10, 1fr)',\n            gap: '4px',\n            background: 'rgba(0, 0, 0, 0.3)',\n            padding: '15px',\n            borderRadius: '10px',\n            border: '2px solid #4b5563'\n          }}>\n            {/* 인벤토리 슬롯 50개 */}\n            {Array.from({ length: 50 }, (_, index) => {\n              const item = inventory[index];\n              const isEmpty = !item;\n              \n              return (\n                <div\n                  key={index}\n                  onClick={() => item && setSelectedItem(item)}\n                  style={{\n                    width: '50px',\n                    height: '50px',\n                    background: isEmpty ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)',\n                    border: isEmpty ? '1px solid #374151' : `2px solid ${getRarityColor(item.rarity)}`,\n                    borderRadius: '8px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    cursor: item ? 'pointer' : 'default',\n                    position: 'relative',\n                    transition: 'all 0.2s ease'\n                  }}\n                  onMouseEnter={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = 'scale(1.05)';\n                      e.currentTarget.style.boxShadow = `0 0 15px ${getRarityColor(item.rarity)}50`;\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = 'scale(1)';\n                      e.currentTarget.style.boxShadow = 'none';\n                    }\n                  }}\n                >\n                  {item && (\n                    <>\n                      <div style={{ fontSize: '24px' }}>{getItemIcon(item)}</div>\n                      {/* 수량 표시 (같은 아이템이 여러 개일 때) */}\n                      {inventory.filter(inv => inv.name === item.name).length > 1 && (\n                        <div style={{\n                          position: 'absolute',\n                          bottom: '2px',\n                          right: '2px',\n                          background: '#000',\n                          color: 'white',\n                          fontSize: '10px',\n                          padding: '1px 3px',\n                          borderRadius: '3px',\n                          lineHeight: '1'\n                        }}>\n                          {inventory.filter(inv => inv.name === item.name).length}\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* 아이템 상세 정보 */}\n        <div style={{ width: '300px' }}>\n          <h3 style={{ color: 'white', marginBottom: '15px' }}>📋 아이템 정보</h3>\n          {selectedItem ? (\n            <div style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              border: `2px solid ${getRarityColor(selectedItem.rarity)}`,\n              borderRadius: '10px',\n              padding: '20px'\n            }}>\n              <div style={{ textAlign: 'center', marginBottom: '15px' }}>\n                <div style={{ fontSize: '48px', marginBottom: '10px' }}>\n                  {getItemIcon(selectedItem)}\n                </div>\n                <h4 style={{\n                  color: getRarityColor(selectedItem.rarity),\n                  margin: '0 0 5px 0',\n                  fontSize: '18px',\n                  fontWeight: 'bold'\n                }}>\n                  {selectedItem.name}\n                </h4>\n                <p style={{\n                  color: '#9ca3af',\n                  margin: '0 0 15px 0',\n                  fontSize: '14px',\n                  textTransform: 'capitalize'\n                }}>\n                  {selectedItem.type} • {selectedItem.rarity}\n                </p>\n              </div>\n\n              {/* 능력치 */}\n              {selectedItem.stats && Object.keys(selectedItem.stats).length > 0 && (\n                <div style={{ marginBottom: '15px' }}>\n                  <h5 style={{ color: 'white', margin: '0 0 10px 0', fontSize: '14px' }}>능력치</h5>\n                  {Object.entries(selectedItem.stats).map(([stat, value]) => (\n                    <div key={stat} style={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      color: '#10b981',\n                      fontSize: '12px',\n                      marginBottom: '5px'\n                    }}>\n                      <span>\n                        {stat === 'attack' ? '공격력' :\n                         stat === 'defense' ? '방어력' :\n                         stat === 'hp' ? '체력' :\n                         stat === 'mp' ? '마나' : stat}\n                      </span>\n                      <span>+{value}</span>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n\n              {/* 가격 */}\n              <div style={{ marginBottom: '15px' }}>\n                <h5 style={{ color: 'white', margin: '0 0 10px 0', fontSize: '14px' }}>가격</h5>\n                <p style={{ color: '#f59e0b', fontSize: '12px', margin: 0 }}>\n                  {selectedItem.price.toLocaleString()}G\n                </p>\n              </div>\n\n              {/* 액션 버튼 */}\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n                {selectedItem.type !== 'consumable' && (\n                  <button\n                    onClick={() => {\n                      equipItem(selectedItem);\n                      setSelectedItem(null);\n                    }}\n                    style={{\n                      background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      padding: '10px',\n                      fontSize: '14px',\n                      cursor: 'pointer',\n                      fontWeight: 'bold'\n                    }}\n                  >\n                    장착\n                  </button>\n                )}\n                {selectedItem.type === 'consumable' && (\n                  <button\n                    onClick={() => {\n                      // 사용 로직 (임시)\n                      console.log('Use item:', selectedItem.name);\n                      setSelectedItem(null);\n                    }}\n                    style={{\n                      background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      padding: '10px',\n                      fontSize: '14px',\n                      cursor: 'pointer',\n                      fontWeight: 'bold'\n                    }}\n                  >\n                    사용\n                  </button>\n                )}\n                <button\n                  onClick={() => {\n                    const sellPrice = Math.floor(selectedItem.price * 0.7);\n                    setCharacter(prev => ({ ...prev, gold: prev.gold + sellPrice }));\n                    setInventory(prev => prev.filter(invItem => invItem.id !== selectedItem.id));\n                    addToCombatLog(`${selectedItem.name}을 ${sellPrice} 골드에 판매했습니다!`);\n                    setSelectedItem(null);\n                  }}\n                  style={{\n                    background: '#dc2626',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '10px',\n                    fontSize: '14px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  판매 ({Math.floor(selectedItem.price * 0.7)}G)\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div style={{\n              background: 'rgba(255, 255, 255, 0.05)',\n              borderRadius: '10px',\n              padding: '40px',\n              textAlign: 'center',\n              color: '#6b7280'\n            }}>\n              <p>아이템을 클릭하여 정보를 확인하세요</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderShopTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      }}>\n        <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>상점</h3>\n        \n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '15px'\n        }}>\n          {shop.map(item => (\n            <div\n              key={item.id}\n              style={{\n                background: '#1f2937',\n                border: `2px solid ${getRarityColor(item.rarity)}`,\n                borderRadius: '10px',\n                padding: '15px'\n              }}\n            >\n              <div style={{\n                color: getRarityColor(item.rarity),\n                fontWeight: 'bold',\n                marginBottom: '5px'\n              }}>\n                {item.name}\n              </div>\n              \n              <div style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '10px' }}>\n                {item.type} • Lv.{item.level} • {item.rarity}\n              </div>\n\n              <div style={{ color: '#d1d5db', fontSize: '12px', marginBottom: '15px' }}>\n                {Object.entries(item.stats).map(([key, value]) => \n                  value > 0 && (\n                    <div key={key}>\n                      {key === 'attack' ? '⚔️' :\n                       key === 'defense' ? '🛡️' :\n                       key === 'hp' ? '❤️' :\n                       key === 'mp' ? '💙' :\n                       key === 'speed' ? '💨' :\n                       key === 'critRate' ? '💥' : '⭐'} +{value}\n                    </div>\n                  )\n                )}\n              </div>\n\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}>\n                <div style={{ color: '#fbbf24', fontWeight: 'bold' }}>\n                  💰 {item.price.toLocaleString()}G\n                </div>\n                <button\n                  onClick={() => buyItem(item)}\n                  disabled={character.gold < item.price}\n                  style={{\n                    background: character.gold >= item.price ? '#10b981' : '#6b7280',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px',\n                    padding: '8px 16px',\n                    fontSize: '12px',\n                    cursor: character.gold >= item.price ? 'pointer' : 'not-allowed',\n                    opacity: character.gold >= item.price ? 1 : 0.6\n                  }}\n                >\n                  구매\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTabs = () => (\n    <div style={{\n      background: '#374151',\n      display: 'flex',\n      borderRadius: '15px 15px 0 0',\n      overflow: 'hidden'\n    }}>\n      {[\n        { id: 'lobby', name: t('rpg.tabs.lobby'), icon: '🏠' },\n        { id: 'character', name: t('rpg.tabs.character'), icon: '👤' },\n        { id: 'inventory', name: t('rpg.tabs.inventory'), icon: '🎒' },\n        { id: 'skills', name: t('rpg.tabs.skills'), icon: '✨' },\n        { id: 'dungeon', name: t('rpg.tabs.dungeon'), icon: '🏰' },\n        { id: 'shop', name: t('rpg.tabs.shop'), icon: '🛒' }\n      ].map(tab => (\n        <button\n          key={tab.id}\n          onClick={() => setCurrentTab(tab.id as any)}\n          style={{\n            background: currentTab === tab.id \n              ? colors.accent\n              : 'transparent',\n            color: colors.text,\n            border: 'none',\n            padding: '15px 20px',\n            fontSize: '14px',\n            cursor: 'pointer',\n            flex: 1,\n            transition: 'all 0.3s ease'\n          }}\n        >\n          <div>{tab.icon}</div>\n          <div style={{ fontSize: '12px', marginTop: '5px' }}>{tab.name}</div>\n        </button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{\n      width: '100%',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      background: colors.cardBg,\n      borderRadius: '20px',\n      overflow: 'hidden',\n      boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      border: `1px solid ${colors.cardBorder}`\n    }}>\n      {/* 게임 타이틀 */}\n      <div style={{\n        background: colors.backgroundSecondary,\n        padding: '20px',\n        textAlign: 'center',\n        position: 'relative',\n        overflow: 'hidden'\n      }}>\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'\n        }} />\n        <h1 style={{\n          margin: 0,\n          fontSize: '32px',\n          fontWeight: 'bold',\n          color: colors.text,\n          textShadow: '0 4px 20px rgba(147, 51, 234, 0.5)',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.title')}\n        </h1>\n        <p style={{\n          margin: '10px 0 0 0',\n          color: colors.textSecondary,\n          fontSize: '16px',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.subtitle')}\n        </p>\n      </div>\n\n      {/* 탭 메뉴 */}\n      {renderTabs()}\n\n      {/* 현재 탭 컨텐츠 */}\n      {currentTab === 'lobby' && renderLobbyTab()}\n      {currentTab === 'dungeon' && renderDungeonTab()}\n      {currentTab === 'character' && renderCharacterTab()}\n      {currentTab === 'inventory' && renderInventoryTab()}\n      {currentTab === 'skills' && renderSkillsTab()}\n      {currentTab === 'shop' && renderShopTab()}\n\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}