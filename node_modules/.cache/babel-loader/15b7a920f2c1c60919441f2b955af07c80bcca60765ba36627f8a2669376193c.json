{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const AdvancedTowerDefense=_ref=>{let{onAction,playerStats,setPlayerStats,currentUser}=_ref;const canvasRef=useRef(null);const gameLoopRef=useRef();// Different maps for each stage\nconst stageMaps={1:[// Simple path\n{x:0,y:200},{x:150,y:200},{x:150,y:100},{x:300,y:100},{x:300,y:300},{x:450,y:300},{x:450,y:150},{x:600,y:150}],2:[// Zigzag path\n{x:0,y:100},{x:100,y:100},{x:100,y:250},{x:200,y:250},{x:200,y:50},{x:350,y:50},{x:350,y:200},{x:500,y:200},{x:500,y:350},{x:600,y:350}],3:[// Spiral path\n{x:0,y:200},{x:80,y:200},{x:80,y:120},{x:200,y:120},{x:200,y:280},{x:320,y:280},{x:320,y:80},{x:480,y:80},{x:480,y:320},{x:600,y:320}],4:[// Double path\n{x:0,y:150},{x:150,y:150},{x:150,y:100},{x:300,y:100},{x:300,y:200},{x:450,y:200},{x:600,y:200}],5:[// Boss arena\n{x:0,y:200},{x:100,y:200},{x:200,y:200},{x:300,y:200},{x:400,y:200},{x:500,y:200},{x:600,y:200}]};const[gameState,setGameState]=useState({stage:1,wave:1,lives:20,gold:600,score:0,experience:0,playerLevel:1,waveProgress:0,gameStatus:'playing',selectedTowerType:null,selectedTower:null,shopItems:[],currentMap:1});const[towers,setTowers]=useState([]);const[enemies,setEnemies]=useState([]);const[frameCount,setFrameCount]=useState(0);const[nextEnemySpawn,setNextEnemySpawn]=useState(0);// Enhanced tower types\nconst towerTypes={archer:{cost:80,damage:20,range:120,speed:25,color:'#8B4513'},cannon:{cost:150,damage:50,range:90,speed:50,color:'#696969'},magic:{cost:220,damage:35,range:130,speed:35,color:'#9400D3'},ice:{cost:180,damage:15,range:100,speed:30,color:'#00BFFF'},lightning:{cost:300,damage:80,range:150,speed:70,color:'#FFD700'}};// Stage-specific enemies\nconst stageEnemies={1:[{type:'goblin',count:8}],2:[{type:'goblin',count:6},{type:'orc',count:4}],3:[{type:'orc',count:5},{type:'troll',count:3}],4:[{type:'troll',count:4},{type:'dragon',count:2}],5:[{type:'dragon',count:3},{type:'demon_lord',count:1}]// Boss stage\n};const enemyTypes={goblin:{health:60,speed:2.5,reward:12,color:'#228B22',armor:0},orc:{health:120,speed:2,reward:20,color:'#8B4513',armor:2},troll:{health:250,speed:1.5,reward:35,color:'#2F4F4F',armor:5},dragon:{health:400,speed:1.2,reward:60,color:'#DC143C',armor:8},demon_lord:{health:1000,speed:0.8,reward:200,color:'#8B0000',armor:15},// Boss\nice_giant:{health:600,speed:1,reward:80,color:'#4682B4',armor:10},fire_elemental:{health:300,speed:2.2,reward:45,color:'#FF4500',armor:3}};// Generate shop items\nconst generateShopItems=()=>{return[{id:'damage_boost',name:'공격력 강화',description:'모든 타워 데미지 +20%',cost:200,type:'upgrade',effect:{type:'damage',value:1.2}},{id:'range_boost',name:'사거리 확장',description:'모든 타워 사거리 +25%',cost:180,type:'upgrade',effect:{type:'range',value:1.25}},{id:'gold_boost',name:'골드 배율',description:'적 처치 골드 +50%',cost:150,type:'power',effect:{type:'gold_multiplier',value:1.5}},{id:'lightning_tower',name:'라이트닝 타워',description:'강력한 전기 공격',cost:300,type:'tower',effect:{type:'unlock_tower',tower:'lightning'}}];};// Initialize shop\nuseEffect(()=>{setGameState(prev=>({...prev,shopItems:generateShopItems()}));},[]);const handleKeyDown=useCallback(e=>{if(['1','2','3','4','5',' ','Enter','Escape','s','u'].includes(e.key.toLowerCase())){e.preventDefault();e.stopPropagation();switch(e.key.toLowerCase()){case'1':setGameState(prev=>({...prev,selectedTowerType:'archer',selectedTower:null}));break;case'2':setGameState(prev=>({...prev,selectedTowerType:'cannon',selectedTower:null}));break;case'3':setGameState(prev=>({...prev,selectedTowerType:'magic',selectedTower:null}));break;case'4':setGameState(prev=>({...prev,selectedTowerType:'ice',selectedTower:null}));break;case'5':if(gameState.playerLevel>=3){setGameState(prev=>({...prev,selectedTowerType:'lightning',selectedTower:null}));}break;case' ':if(gameState.gameStatus==='playing'){startNextWave();}break;case's':if(gameState.gameStatus==='stageComplete'){setGameState(prev=>({...prev,gameStatus:'shop'}));}break;case'u':if(gameState.selectedTower){upgradeTower(gameState.selectedTower);}break;case'escape':setGameState(prev=>({...prev,selectedTowerType:null,selectedTower:null,gameStatus:gameState.gameStatus==='shop'?'playing':prev.gameStatus}));break;}}},[gameState.playerLevel,gameState.gameStatus,gameState.selectedTower]);const handleCanvasClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;// Check if clicking on shop items\nif(gameState.gameStatus==='shop'){handleShopClick(x,y);return;}// Check if clicking on existing tower\nconst clickedTower=towers.find(tower=>{const distance=Math.sqrt((x-tower.x)**2+(y-tower.y)**2);return distance<25;});if(clickedTower){setGameState(prev=>({...prev,selectedTower:clickedTower,selectedTowerType:null}));return;}// Place new tower\nif(gameState.selectedTowerType&&canPlaceTower(x,y)){placeTower(x,y,gameState.selectedTowerType);}},[gameState.gameStatus,gameState.selectedTowerType,towers]);const handleShopClick=(x,y)=>{gameState.shopItems.forEach((item,index)=>{const itemY=100+index*60;if(x>=50&&x<=550&&y>=itemY&&y<=itemY+50){purchaseShopItem(item);}});};const purchaseShopItem=item=>{if(gameState.gold<item.cost)return;setGameState(prev=>({...prev,gold:prev.gold-item.cost}));// Apply item effect\nswitch(item.effect.type){case'damage':setTowers(prevTowers=>prevTowers.map(tower=>({...tower,damage:Math.round(tower.damage*item.effect.value)})));break;case'range':setTowers(prevTowers=>prevTowers.map(tower=>({...tower,range:Math.round(tower.range*item.effect.value)})));break;}onAction('shop_purchase',{item_name:item.name,item_cost:item.cost,remaining_gold:gameState.gold-item.cost,stage:gameState.stage,player_level:gameState.playerLevel});};const canPlaceTower=(x,y)=>{const currentPath=stageMaps[gameState.currentMap];// Check distance from path\nfor(const point of currentPath){const distance=Math.sqrt((x-point.x)**2+(y-point.y)**2);if(distance<45)return false;}// Check distance from other towers\nfor(const tower of towers){const distance=Math.sqrt((x-tower.x)**2+(y-tower.y)**2);if(distance<60)return false;}return x>30&&x<570&&y>70&&y<330;};const placeTower=(x,y,type)=>{const towerConfig=towerTypes[type];if(gameState.gold<towerConfig.cost)return;const newTower={id:`tower_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,x,y,type,level:1,damage:towerConfig.damage,range:towerConfig.range,attackSpeed:towerConfig.speed,lastAttack:0,cost:towerConfig.cost,kills:0,upgradeCost:Math.round(towerConfig.cost*0.6)};setTowers(prev=>[...prev,newTower]);setGameState(prev=>({...prev,gold:prev.gold-towerConfig.cost,selectedTowerType:null}));// Only log tower placement - key strategic decision\nonAction('tower_placed',{tower_type:type,position_x:x,position_y:y,cost:towerConfig.cost,remaining_gold:gameState.gold-towerConfig.cost,stage:gameState.stage,wave:gameState.wave});};const upgradeTower=tower=>{if(gameState.gold<tower.upgradeCost)return;setTowers(prevTowers=>prevTowers.map(t=>t.id===tower.id?{...t,level:t.level+1,damage:Math.round(t.damage*1.4),range:Math.round(t.range*1.1),upgradeCost:Math.round(t.upgradeCost*1.5)}:t));setGameState(prev=>({...prev,gold:prev.gold-tower.upgradeCost,selectedTower:null}));onAction('tower_upgraded',{tower_type:tower.type,new_level:tower.level+1,upgrade_cost:tower.upgradeCost,stage:gameState.stage});};const startNextWave=()=>{if(gameState.waveProgress>0)return;setGameState(prev=>({...prev,waveProgress:1}));setNextEnemySpawn(frameCount+60);// Log wave start - key gameplay event\nonAction('wave_started',{stage:gameState.stage,wave:gameState.wave,player_level:gameState.playerLevel,towers_count:towers.length,gold:gameState.gold});};const spawnEnemy=()=>{const stageConfig=stageEnemies[gameState.stage];if(!stageConfig)return;const enemyPool=[];stageConfig.forEach(config=>{for(let i=0;i<config.count;i++){enemyPool.push(config.type);}});const enemyType=enemyPool[Math.floor(Math.random()*enemyPool.length)];const enemyConfig=enemyTypes[enemyType];const currentPath=stageMaps[gameState.currentMap];const newEnemy={id:`enemy_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,x:currentPath[0].x,y:currentPath[0].y,health:enemyConfig.health+(gameState.stage-1)*30,maxHealth:enemyConfig.health+(gameState.stage-1)*30,speed:enemyConfig.speed,type:enemyType,reward:enemyConfig.reward+gameState.stage*3,pathIndex:0,alive:true,isBoss:enemyType==='demon_lord',armor:enemyConfig.armor};setEnemies(prev=>[...prev,newEnemy]);};const updateEnemies=useCallback(()=>{const currentPath=stageMaps[gameState.currentMap];setEnemies(prev=>prev.map(enemy=>{if(!enemy.alive)return enemy;const currentTarget=currentPath[enemy.pathIndex+1];if(currentTarget){const dx=currentTarget.x-enemy.x;const dy=currentTarget.y-enemy.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<5){enemy.pathIndex++;if(enemy.pathIndex>=currentPath.length-1){// Enemy reached end - critical event\nconst livesLost=enemy.isBoss?5:1;setGameState(prevState=>({...prevState,lives:prevState.lives-livesLost}));onAction('life_lost',{enemy_type:enemy.type,is_boss:enemy.isBoss,lives_lost:livesLost,remaining_lives:gameState.lives-livesLost,stage:gameState.stage});return{...enemy,alive:false};}}else{const moveX=dx/distance*enemy.speed;const moveY=dy/distance*enemy.speed;enemy.x+=moveX;enemy.y+=moveY;}}return enemy;}).filter(enemy=>enemy.alive||enemy.pathIndex<currentPath.length-1));},[gameState.currentMap,gameState.lives,gameState.stage,onAction]);const updateTowers=useCallback(()=>{towers.forEach(tower=>{if(frameCount-tower.lastAttack<tower.attackSpeed)return;const enemiesInRange=enemies.filter(enemy=>{if(!enemy.alive)return false;const distance=Math.sqrt((enemy.x-tower.x)**2+(enemy.y-tower.y)**2);return distance<=tower.range;});if(enemiesInRange.length>0){const target=enemiesInRange.reduce((best,current)=>current.pathIndex>best.pathIndex?current:best);const actualDamage=Math.max(1,tower.damage-target.armor);setEnemies(prevEnemies=>prevEnemies.map(enemy=>{if(enemy.id===target.id){const newHealth=Math.max(0,enemy.health-actualDamage);const killed=newHealth<=0;if(killed){const goldGain=enemy.reward;const expGain=enemy.isBoss?100:15;setGameState(prevState=>({...prevState,gold:prevState.gold+goldGain,score:prevState.score+goldGain*10,experience:prevState.experience+expGain}));setTowers(prevTowers=>prevTowers.map(t=>t.id===tower.id?{...t,kills:t.kills+1}:t));// Only log boss defeats - significant events\nif(enemy.isBoss){onAction('boss_defeated',{boss_type:enemy.type,stage:gameState.stage,gold_gained:goldGain,exp_gained:expGain});}return{...enemy,health:0,alive:false};}return{...enemy,health:newHealth};}return enemy;}));tower.lastAttack=frameCount;}});},[towers,enemies,frameCount,gameState.stage,onAction]);// Level up system\nuseEffect(()=>{const expNeeded=gameState.playerLevel*100;if(gameState.experience>=expNeeded){setGameState(prev=>({...prev,playerLevel:prev.playerLevel+1,experience:prev.experience-expNeeded}));// Log level up - player progression event\nonAction('level_up',{new_level:gameState.playerLevel+1,stage:gameState.stage,total_score:gameState.score});}},[gameState.experience,gameState.playerLevel,gameState.stage,gameState.score,onAction]);// Wave and stage management\nuseEffect(()=>{if(gameState.waveProgress>0&&frameCount>=nextEnemySpawn){const maxEnemies=8+gameState.stage*2;const currentEnemies=enemies.filter(e=>e.alive).length;if(currentEnemies<maxEnemies){spawnEnemy();setNextEnemySpawn(frameCount+Math.max(30,80-gameState.stage*10));}else if(enemies.filter(e=>e.alive).length===0){// Wave complete\nif(gameState.wave>=3){// Stage complete\nsetGameState(prev=>({...prev,gameStatus:'stageComplete',waveProgress:0}));// Log stage victory - major milestone\nonAction('stage_victory',{stage:gameState.stage,final_score:gameState.score,player_level:gameState.playerLevel,towers_built:towers.length});}else{// Next wave\nsetGameState(prev=>({...prev,wave:prev.wave+1,waveProgress:0,gold:prev.gold+50+prev.stage*20}));}}}},[frameCount,nextEnemySpawn,gameState,enemies,towers.length,onAction]);// Game over check\nuseEffect(()=>{if(gameState.lives<=0){setGameState(prev=>({...prev,gameStatus:'gameOver'}));// Log game over - critical failure event\nonAction('stage_defeat',{stage:gameState.stage,wave:gameState.wave,final_score:gameState.score,player_level:gameState.playerLevel,cause:'lives_depleted'});}},[gameState.lives,gameState.stage,gameState.wave,gameState.score,gameState.playerLevel,onAction]);const nextStage=()=>{if(gameState.stage>=5){setGameState(prev=>({...prev,gameStatus:'victory'}));onAction('game_victory',{final_score:gameState.score,player_level:gameState.playerLevel,total_towers:towers.length});return;}setGameState(prev=>({...prev,stage:prev.stage+1,wave:1,currentMap:prev.stage+1,gameStatus:'playing',gold:prev.gold+100,lives:Math.min(20,prev.lives+2)}));setEnemies([]);setTowers([]);// Log stage start - new chapter begins\nonAction('stage_started',{stage:gameState.stage+1,player_level:gameState.playerLevel,starting_gold:gameState.gold+100});};// Drawing functions\nconst drawPath=ctx=>{const currentPath=stageMaps[gameState.currentMap];ctx.strokeStyle='#8B4513';ctx.lineWidth=25;ctx.lineCap='round';ctx.lineJoin='round';ctx.beginPath();ctx.moveTo(currentPath[0].x,currentPath[0].y);currentPath.slice(1).forEach(point=>{ctx.lineTo(point.x,point.y);});ctx.stroke();ctx.strokeStyle='#DEB887';ctx.lineWidth=15;ctx.beginPath();ctx.moveTo(currentPath[0].x,currentPath[0].y);currentPath.slice(1).forEach(point=>{ctx.lineTo(point.x,point.y);});ctx.stroke();};const drawTower=(ctx,tower)=>{var _gameState$selectedTo;const config=towerTypes[tower.type];const isSelected=((_gameState$selectedTo=gameState.selectedTower)===null||_gameState$selectedTo===void 0?void 0:_gameState$selectedTo.id)===tower.id;// Tower base\nctx.fillStyle=isSelected?'#FFD700':'#696969';ctx.beginPath();ctx.arc(tower.x,tower.y,22,0,2*Math.PI);ctx.fill();// Tower body\nctx.fillStyle=config.color;ctx.beginPath();ctx.arc(tower.x,tower.y,18,0,2*Math.PI);ctx.fill();// Level indicator\nfor(let i=0;i<tower.level;i++){ctx.fillStyle='#FFD700';ctx.fillRect(tower.x-15+i*6,tower.y-25,4,4);}// Tower icon\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='center';const symbols={archer:'🏹',cannon:'💣',magic:'✨',ice:'❄️',lightning:'⚡'};ctx.fillText(symbols[tower.type],tower.x,tower.y+4);// Range for selected tower\nif(isSelected){ctx.strokeStyle='rgba(255, 255, 255, 0.3)';ctx.lineWidth=2;ctx.setLineDash([5,5]);ctx.beginPath();ctx.arc(tower.x,tower.y,tower.range,0,2*Math.PI);ctx.stroke();ctx.setLineDash([]);// Upgrade info\nctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.fillText(`Lv.${tower.level}`,tower.x,tower.y-35);ctx.fillText(`$${tower.upgradeCost}`,tower.x,tower.y-50);}// Kill count\nif(tower.kills>0){ctx.fillStyle='#FFD700';ctx.font='10px Arial';ctx.fillText(tower.kills.toString(),tower.x+20,tower.y-20);}};const drawEnemy=(ctx,enemy)=>{if(!enemy.alive)return;const config=enemyTypes[enemy.type];const sizeMap={goblin:12,orc:16,troll:20,dragon:24,demon_lord:30,ice_giant:26,fire_elemental:18};const size=enemy.isBoss?30:sizeMap[enemy.type]||16;// Boss glow effect\nif(enemy.isBoss){ctx.shadowColor='#FF0000';ctx.shadowBlur=20;}// Enemy body\nctx.fillStyle=config.color;ctx.beginPath();ctx.arc(enemy.x,enemy.y,size,0,2*Math.PI);ctx.fill();ctx.shadowBlur=0;// Enemy icon\nctx.fillStyle='#FFFFFF';ctx.font=`${size}px Arial`;ctx.textAlign='center';const symbols={goblin:'👹',orc:'🗡️',troll:'🏔️',dragon:'🐉',demon_lord:'😈',ice_giant:'🧊',fire_elemental:'🔥'};ctx.fillText(symbols[enemy.type],enemy.x,enemy.y+size/3);// Health bar\nconst barWidth=size*2.5;const barHeight=6;const healthPercent=enemy.health/enemy.maxHealth;ctx.fillStyle=enemy.isBoss?'#8B0000':'#FF0000';ctx.fillRect(enemy.x-barWidth/2,enemy.y-size-15,barWidth,barHeight);ctx.fillStyle=enemy.isBoss?'#FFD700':'#00FF00';ctx.fillRect(enemy.x-barWidth/2,enemy.y-size-15,barWidth*healthPercent,barHeight);// Armor indicator\nif(enemy.armor>0){ctx.fillStyle='#C0C0C0';ctx.font='8px Arial';ctx.fillText(`⚔${enemy.armor}`,enemy.x,enemy.y+size+12);}};const drawUI=(ctx,canvas)=>{// Top status bar\nctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(0,0,canvas.width,60);ctx.fillStyle='#FFFFFF';ctx.font='16px Arial';ctx.textAlign='left';ctx.fillText(`Stage: ${gameState.stage}`,10,25);ctx.fillText(`Wave: ${gameState.wave}/3`,10,45);ctx.fillText(`Lives: ${gameState.lives}`,120,25);ctx.fillText(`Gold: ${gameState.gold}`,120,45);ctx.fillText(`Level: ${gameState.playerLevel}`,220,25);ctx.fillText(`Score: ${gameState.score}`,220,45);// Experience bar\nconst expNeeded=gameState.playerLevel*100;const expPercent=gameState.experience/expNeeded;ctx.fillStyle='#8B4513';ctx.fillRect(320,35,200,8);ctx.fillStyle='#FFD700';ctx.fillRect(320,35,200*expPercent,8);// Tower selection panel\nctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,canvas.height-90,canvas.width,90);const towerButtons=[{type:'archer',x:60,key:'1',unlocked:true},{type:'cannon',x:140,key:'2',unlocked:true},{type:'magic',x:220,key:'3',unlocked:true},{type:'ice',x:300,key:'4',unlocked:true},{type:'lightning',x:380,key:'5',unlocked:gameState.playerLevel>=3}];towerButtons.forEach(button=>{if(!button.unlocked)return;const config=towerTypes[button.type];const isSelected=gameState.selectedTowerType===button.type;const canAfford=gameState.gold>=config.cost;ctx.fillStyle=isSelected?'rgba(255, 255, 0, 0.5)':canAfford?'rgba(255, 255, 255, 0.2)':'rgba(255, 0, 0, 0.2)';ctx.fillRect(button.x-30,canvas.height-80,60,70);ctx.fillStyle=config.color;ctx.beginPath();ctx.arc(button.x,canvas.height-60,15,0,2*Math.PI);ctx.fill();ctx.fillStyle=canAfford?'#FFFFFF':'#FF6666';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText(`${button.key}: $${config.cost}`,button.x,canvas.height-25);});// Instructions\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='right';ctx.fillText('SPACE: Next Wave',canvas.width-10,canvas.height-65);ctx.fillText('U: Upgrade Tower',canvas.width-10,canvas.height-45);ctx.fillText('S: Shop (after stage)',canvas.width-10,canvas.height-25);ctx.fillText('ESC: Cancel',canvas.width-10,canvas.height-5);// Selected tower info\nif(gameState.selectedTower){ctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(canvas.width-200,70,190,100);ctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='left';const tower=gameState.selectedTower;ctx.fillText(`${tower.type.toUpperCase()} Lv.${tower.level}`,canvas.width-190,90);ctx.fillText(`Damage: ${tower.damage}`,canvas.width-190,110);ctx.fillText(`Range: ${tower.range}`,canvas.width-190,130);ctx.fillText(`Kills: ${tower.kills}`,canvas.width-190,150);ctx.fillText(`Upgrade: $${tower.upgradeCost}`,canvas.width-190,170);}// Game status overlays\nif(gameState.gameStatus==='stageComplete'){ctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#00FF00';ctx.font='32px Arial';ctx.textAlign='center';ctx.fillText('STAGE COMPLETE!',canvas.width/2,canvas.height/2-40);ctx.fillStyle='#FFFFFF';ctx.font='18px Arial';ctx.fillText('Press S for Shop, ENTER for Next Stage',canvas.width/2,canvas.height/2+20);}if(gameState.gameStatus==='shop'){drawShop(ctx,canvas);}if(gameState.gameStatus==='gameOver'){ctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#FF0000';ctx.font='32px Arial';ctx.textAlign='center';ctx.fillText('GAME OVER',canvas.width/2,canvas.height/2-50);ctx.fillStyle='#FFFFFF';ctx.font='18px Arial';ctx.fillText(`Stage Reached: ${gameState.stage}`,canvas.width/2,canvas.height/2);ctx.fillText(`Final Score: ${gameState.score}`,canvas.width/2,canvas.height/2+30);}if(gameState.gameStatus==='victory'){ctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#FFD700';ctx.font='32px Arial';ctx.textAlign='center';ctx.fillText('VICTORY!',canvas.width/2,canvas.height/2-50);ctx.fillStyle='#FFFFFF';ctx.font='18px Arial';ctx.fillText('All stages conquered!',canvas.width/2,canvas.height/2);ctx.fillText(`Final Score: ${gameState.score}`,canvas.width/2,canvas.height/2+30);}};const drawShop=(ctx,canvas)=>{ctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#FFD700';ctx.font='24px Arial';ctx.textAlign='center';ctx.fillText('🛒 SHOP',canvas.width/2,50);gameState.shopItems.forEach((item,index)=>{const y=100+index*60;const canAfford=gameState.gold>=item.cost;ctx.fillStyle=canAfford?'rgba(255, 255, 255, 0.1)':'rgba(255, 0, 0, 0.1)';ctx.fillRect(50,y,500,50);ctx.fillStyle=canAfford?'#FFFFFF':'#999999';ctx.font='16px Arial';ctx.textAlign='left';ctx.fillText(item.name,60,y+20);ctx.font='12px Arial';ctx.fillText(item.description,60,y+35);ctx.textAlign='right';ctx.font='16px Arial';ctx.fillText(`$${item.cost}`,540,y+25);});ctx.fillStyle='#FFFFFF';ctx.font='16px Arial';ctx.textAlign='center';ctx.fillText('Click items to purchase, ESC to close',canvas.width/2,canvas.height-30);};const draw=useCallback(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Stage-specific backgrounds\nconst stageColors={1:'#1a4c2e',2:'#2d2d2d',3:'#1a1a3a',4:'#3a1a1a',5:'#0f0f0f'};ctx.fillStyle=stageColors[gameState.stage]||'#1a4c2e';ctx.fillRect(0,0,canvas.width,canvas.height);if(gameState.gameStatus!=='shop'){drawPath(ctx);towers.forEach(tower=>drawTower(ctx,tower));enemies.forEach(enemy=>drawEnemy(ctx,enemy));}drawUI(ctx,canvas);},[towers,enemies,gameState]);// Game loop\nuseEffect(()=>{const gameLoop=()=>{if(gameState.gameStatus==='playing'){updateEnemies();updateTowers();}draw();setFrameCount(prev=>prev+1);gameLoopRef.current=requestAnimationFrame(gameLoop);};gameLoopRef.current=requestAnimationFrame(gameLoop);return()=>{if(gameLoopRef.current){cancelAnimationFrame(gameLoopRef.current);}};},[updateEnemies,updateTowers,draw,gameState.gameStatus]);// Event listeners\nuseEffect(()=>{const handleKeyPress=e=>{if(e.key==='Enter'&&gameState.gameStatus==='stageComplete'){nextStage();}};document.addEventListener('keydown',handleKeyDown);document.addEventListener('keydown',handleKeyPress);return()=>{document.removeEventListener('keydown',handleKeyDown);document.removeEventListener('keydown',handleKeyPress);};},[handleKeyDown,gameState.gameStatus]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',background:'#0f1419',borderRadius:'12px',padding:'16px',border:'2px solid #2d3748'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:600,height:400,style:{border:'2px solid #4a5568',borderRadius:'8px',cursor:gameState.selectedTowerType?'crosshair':'default'},onClick:handleCanvasClick,tabIndex:0}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px',color:'#ffffff',fontSize:'14px',textAlign:'center',maxWidth:'600px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDFF0 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Advanced Tower Defense\"}),\" - 5 stages, boss battles, upgrades & shop!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Stage \",gameState.stage,\"/5 | Level \",gameState.playerLevel,\" | Score: \",gameState.score]})]})]});};","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","AdvancedTowerDefense","_ref","onAction","playerStats","setPlayerStats","currentUser","canvasRef","gameLoopRef","stageMaps","x","y","gameState","setGameState","stage","wave","lives","gold","score","experience","playerLevel","waveProgress","gameStatus","selectedTowerType","selectedTower","shopItems","currentMap","towers","setTowers","enemies","setEnemies","frameCount","setFrameCount","nextEnemySpawn","setNextEnemySpawn","towerTypes","archer","cost","damage","range","speed","color","cannon","magic","ice","lightning","stageEnemies","type","count","enemyTypes","goblin","health","reward","armor","orc","troll","dragon","demon_lord","ice_giant","fire_elemental","generateShopItems","id","name","description","effect","value","tower","prev","handleKeyDown","e","includes","key","toLowerCase","preventDefault","stopPropagation","startNextWave","upgradeTower","handleCanvasClick","canvas","current","rect","getBoundingClientRect","clientX","left","clientY","top","handleShopClick","clickedTower","find","distance","Math","sqrt","canPlaceTower","placeTower","forEach","item","index","itemY","purchaseShopItem","prevTowers","map","round","item_name","item_cost","remaining_gold","player_level","currentPath","point","towerConfig","newTower","Date","now","random","toString","substr","level","attackSpeed","lastAttack","kills","upgradeCost","tower_type","position_x","position_y","t","new_level","upgrade_cost","towers_count","length","spawnEnemy","stageConfig","enemyPool","config","i","push","enemyType","floor","enemyConfig","newEnemy","maxHealth","pathIndex","alive","isBoss","updateEnemies","enemy","currentTarget","dx","dy","livesLost","prevState","enemy_type","is_boss","lives_lost","remaining_lives","moveX","moveY","filter","updateTowers","enemiesInRange","target","reduce","best","actualDamage","max","prevEnemies","newHealth","killed","goldGain","expGain","boss_type","gold_gained","exp_gained","expNeeded","total_score","maxEnemies","currentEnemies","final_score","towers_built","cause","nextStage","total_towers","min","starting_gold","drawPath","ctx","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","slice","lineTo","stroke","drawTower","_gameState$selectedTo","isSelected","fillStyle","arc","PI","fill","fillRect","font","textAlign","symbols","fillText","setLineDash","drawEnemy","sizeMap","size","shadowColor","shadowBlur","barWidth","barHeight","healthPercent","drawUI","width","expPercent","height","towerButtons","unlocked","button","canAfford","toUpperCase","drawShop","draw","getContext","stageColors","gameLoop","requestAnimationFrame","cancelAnimationFrame","handleKeyPress","document","addEventListener","removeEventListener","style","display","flexDirection","alignItems","background","borderRadius","padding","border","children","ref","cursor","onClick","tabIndex","marginTop","fontSize","maxWidth"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedTowerDefense.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface GameProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  playerStats: any;\n  setPlayerStats: (stats: any) => void;\n  currentUser: any;\n}\n\ninterface Tower {\n  id: string;\n  x: number;\n  y: number;\n  type: 'archer' | 'cannon' | 'magic' | 'ice' | 'lightning';\n  level: number;\n  damage: number;\n  range: number;\n  attackSpeed: number;\n  lastAttack: number;\n  cost: number;\n  kills: number;\n  upgradeCost: number;\n}\n\ninterface Enemy {\n  id: string;\n  x: number;\n  y: number;\n  health: number;\n  maxHealth: number;\n  speed: number;\n  type: 'goblin' | 'orc' | 'troll' | 'dragon' | 'demon_lord' | 'ice_giant' | 'fire_elemental';\n  reward: number;\n  pathIndex: number;\n  alive: boolean;\n  isBoss: boolean;\n  armor: number;\n}\n\ninterface GameState {\n  stage: number;\n  wave: number;\n  lives: number;\n  gold: number;\n  score: number;\n  experience: number;\n  playerLevel: number;\n  waveProgress: number;\n  gameStatus: 'playing' | 'paused' | 'gameOver' | 'victory' | 'shop' | 'stageComplete';\n  selectedTowerType: Tower['type'] | null;\n  selectedTower: Tower | null;\n  shopItems: ShopItem[];\n  currentMap: number;\n}\n\ninterface ShopItem {\n  id: string;\n  name: string;\n  description: string;\n  cost: number;\n  type: 'upgrade' | 'power' | 'tower';\n  effect: any;\n}\n\nexport const AdvancedTowerDefense: React.FC<GameProps> = ({\n  onAction,\n  playerStats,\n  setPlayerStats,\n  currentUser\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number>();\n  \n  // Different maps for each stage\n  const stageMaps = {\n    1: [ // Simple path\n      { x: 0, y: 200 }, { x: 150, y: 200 }, { x: 150, y: 100 }, \n      { x: 300, y: 100 }, { x: 300, y: 300 }, { x: 450, y: 300 }, \n      { x: 450, y: 150 }, { x: 600, y: 150 }\n    ],\n    2: [ // Zigzag path\n      { x: 0, y: 100 }, { x: 100, y: 100 }, { x: 100, y: 250 },\n      { x: 200, y: 250 }, { x: 200, y: 50 }, { x: 350, y: 50 },\n      { x: 350, y: 200 }, { x: 500, y: 200 }, { x: 500, y: 350 }, { x: 600, y: 350 }\n    ],\n    3: [ // Spiral path\n      { x: 0, y: 200 }, { x: 80, y: 200 }, { x: 80, y: 120 },\n      { x: 200, y: 120 }, { x: 200, y: 280 }, { x: 320, y: 280 },\n      { x: 320, y: 80 }, { x: 480, y: 80 }, { x: 480, y: 320 }, { x: 600, y: 320 }\n    ],\n    4: [ // Double path\n      { x: 0, y: 150 }, { x: 150, y: 150 }, { x: 150, y: 100 },\n      { x: 300, y: 100 }, { x: 300, y: 200 }, { x: 450, y: 200 }, { x: 600, y: 200 }\n    ],\n    5: [ // Boss arena\n      { x: 0, y: 200 }, { x: 100, y: 200 }, { x: 200, y: 200 },\n      { x: 300, y: 200 }, { x: 400, y: 200 }, { x: 500, y: 200 }, { x: 600, y: 200 }\n    ]\n  };\n\n  const [gameState, setGameState] = useState<GameState>({\n    stage: 1,\n    wave: 1,\n    lives: 20,\n    gold: 600,\n    score: 0,\n    experience: 0,\n    playerLevel: 1,\n    waveProgress: 0,\n    gameStatus: 'playing',\n    selectedTowerType: null,\n    selectedTower: null,\n    shopItems: [],\n    currentMap: 1,\n  });\n\n  const [towers, setTowers] = useState<Tower[]>([]);\n  const [enemies, setEnemies] = useState<Enemy[]>([]);\n  const [frameCount, setFrameCount] = useState(0);\n  const [nextEnemySpawn, setNextEnemySpawn] = useState(0);\n\n  // Enhanced tower types\n  const towerTypes = {\n    archer: { cost: 80, damage: 20, range: 120, speed: 25, color: '#8B4513' },\n    cannon: { cost: 150, damage: 50, range: 90, speed: 50, color: '#696969' },\n    magic: { cost: 220, damage: 35, range: 130, speed: 35, color: '#9400D3' },\n    ice: { cost: 180, damage: 15, range: 100, speed: 30, color: '#00BFFF' },\n    lightning: { cost: 300, damage: 80, range: 150, speed: 70, color: '#FFD700' }\n  };\n\n  // Stage-specific enemies\n  const stageEnemies = {\n    1: [{ type: 'goblin', count: 8 }],\n    2: [{ type: 'goblin', count: 6 }, { type: 'orc', count: 4 }],\n    3: [{ type: 'orc', count: 5 }, { type: 'troll', count: 3 }],\n    4: [{ type: 'troll', count: 4 }, { type: 'dragon', count: 2 }],\n    5: [{ type: 'dragon', count: 3 }, { type: 'demon_lord', count: 1 }] // Boss stage\n  };\n\n  const enemyTypes = {\n    goblin: { health: 60, speed: 2.5, reward: 12, color: '#228B22', armor: 0 },\n    orc: { health: 120, speed: 2, reward: 20, color: '#8B4513', armor: 2 },\n    troll: { health: 250, speed: 1.5, reward: 35, color: '#2F4F4F', armor: 5 },\n    dragon: { health: 400, speed: 1.2, reward: 60, color: '#DC143C', armor: 8 },\n    demon_lord: { health: 1000, speed: 0.8, reward: 200, color: '#8B0000', armor: 15 }, // Boss\n    ice_giant: { health: 600, speed: 1, reward: 80, color: '#4682B4', armor: 10 },\n    fire_elemental: { health: 300, speed: 2.2, reward: 45, color: '#FF4500', armor: 3 }\n  };\n\n  // Generate shop items\n  const generateShopItems = (): ShopItem[] => {\n    return [\n      {\n        id: 'damage_boost',\n        name: '공격력 강화',\n        description: '모든 타워 데미지 +20%',\n        cost: 200,\n        type: 'upgrade',\n        effect: { type: 'damage', value: 1.2 }\n      },\n      {\n        id: 'range_boost',\n        name: '사거리 확장',\n        description: '모든 타워 사거리 +25%',\n        cost: 180,\n        type: 'upgrade',\n        effect: { type: 'range', value: 1.25 }\n      },\n      {\n        id: 'gold_boost',\n        name: '골드 배율',\n        description: '적 처치 골드 +50%',\n        cost: 150,\n        type: 'power',\n        effect: { type: 'gold_multiplier', value: 1.5 }\n      },\n      {\n        id: 'lightning_tower',\n        name: '라이트닝 타워',\n        description: '강력한 전기 공격',\n        cost: 300,\n        type: 'tower',\n        effect: { type: 'unlock_tower', tower: 'lightning' }\n      }\n    ];\n  };\n\n  // Initialize shop\n  useEffect(() => {\n    setGameState(prev => ({ ...prev, shopItems: generateShopItems() }));\n  }, []);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (['1', '2', '3', '4', '5', ' ', 'Enter', 'Escape', 's', 'u'].includes(e.key.toLowerCase())) {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      switch(e.key.toLowerCase()) {\n        case '1':\n          setGameState(prev => ({ ...prev, selectedTowerType: 'archer', selectedTower: null }));\n          break;\n        case '2':\n          setGameState(prev => ({ ...prev, selectedTowerType: 'cannon', selectedTower: null }));\n          break;\n        case '3':\n          setGameState(prev => ({ ...prev, selectedTowerType: 'magic', selectedTower: null }));\n          break;\n        case '4':\n          setGameState(prev => ({ ...prev, selectedTowerType: 'ice', selectedTower: null }));\n          break;\n        case '5':\n          if (gameState.playerLevel >= 3) {\n            setGameState(prev => ({ ...prev, selectedTowerType: 'lightning', selectedTower: null }));\n          }\n          break;\n        case ' ':\n          if (gameState.gameStatus === 'playing') {\n            startNextWave();\n          }\n          break;\n        case 's':\n          if (gameState.gameStatus === 'stageComplete') {\n            setGameState(prev => ({ ...prev, gameStatus: 'shop' }));\n          }\n          break;\n        case 'u':\n          if (gameState.selectedTower) {\n            upgradeTower(gameState.selectedTower);\n          }\n          break;\n        case 'escape':\n          setGameState(prev => ({ \n            ...prev, \n            selectedTowerType: null, \n            selectedTower: null,\n            gameStatus: gameState.gameStatus === 'shop' ? 'playing' : prev.gameStatus\n          }));\n          break;\n      }\n    }\n  }, [gameState.playerLevel, gameState.gameStatus, gameState.selectedTower]);\n\n  const handleCanvasClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if clicking on shop items\n    if (gameState.gameStatus === 'shop') {\n      handleShopClick(x, y);\n      return;\n    }\n\n    // Check if clicking on existing tower\n    const clickedTower = towers.find(tower => {\n      const distance = Math.sqrt((x - tower.x) ** 2 + (y - tower.y) ** 2);\n      return distance < 25;\n    });\n\n    if (clickedTower) {\n      setGameState(prev => ({ ...prev, selectedTower: clickedTower, selectedTowerType: null }));\n      return;\n    }\n\n    // Place new tower\n    if (gameState.selectedTowerType && canPlaceTower(x, y)) {\n      placeTower(x, y, gameState.selectedTowerType);\n    }\n  }, [gameState.gameStatus, gameState.selectedTowerType, towers]);\n\n  const handleShopClick = (x: number, y: number) => {\n    gameState.shopItems.forEach((item, index) => {\n      const itemY = 100 + index * 60;\n      if (x >= 50 && x <= 550 && y >= itemY && y <= itemY + 50) {\n        purchaseShopItem(item);\n      }\n    });\n  };\n\n  const purchaseShopItem = (item: ShopItem) => {\n    if (gameState.gold < item.cost) return;\n\n    setGameState(prev => ({ ...prev, gold: prev.gold - item.cost }));\n    \n    // Apply item effect\n    switch (item.effect.type) {\n      case 'damage':\n        setTowers(prevTowers => prevTowers.map(tower => ({\n          ...tower,\n          damage: Math.round(tower.damage * item.effect.value)\n        })));\n        break;\n      case 'range':\n        setTowers(prevTowers => prevTowers.map(tower => ({\n          ...tower,\n          range: Math.round(tower.range * item.effect.value)\n        })));\n        break;\n    }\n\n    onAction('shop_purchase', {\n      item_name: item.name,\n      item_cost: item.cost,\n      remaining_gold: gameState.gold - item.cost,\n      stage: gameState.stage,\n      player_level: gameState.playerLevel\n    });\n  };\n\n  const canPlaceTower = (x: number, y: number): boolean => {\n    const currentPath = stageMaps[gameState.currentMap as keyof typeof stageMaps];\n    \n    // Check distance from path\n    for (const point of currentPath) {\n      const distance = Math.sqrt((x - point.x) ** 2 + (y - point.y) ** 2);\n      if (distance < 45) return false;\n    }\n\n    // Check distance from other towers\n    for (const tower of towers) {\n      const distance = Math.sqrt((x - tower.x) ** 2 + (y - tower.y) ** 2);\n      if (distance < 60) return false;\n    }\n\n    return x > 30 && x < 570 && y > 70 && y < 330;\n  };\n\n  const placeTower = (x: number, y: number, type: Tower['type']) => {\n    const towerConfig = towerTypes[type];\n    \n    if (gameState.gold < towerConfig.cost) return;\n\n    const newTower: Tower = {\n      id: `tower_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      x, y, type,\n      level: 1,\n      damage: towerConfig.damage,\n      range: towerConfig.range,\n      attackSpeed: towerConfig.speed,\n      lastAttack: 0,\n      cost: towerConfig.cost,\n      kills: 0,\n      upgradeCost: Math.round(towerConfig.cost * 0.6),\n    };\n\n    setTowers(prev => [...prev, newTower]);\n    setGameState(prev => ({ \n      ...prev, \n      gold: prev.gold - towerConfig.cost,\n      selectedTowerType: null \n    }));\n\n    // Only log tower placement - key strategic decision\n    onAction('tower_placed', {\n      tower_type: type,\n      position_x: x,\n      position_y: y,\n      cost: towerConfig.cost,\n      remaining_gold: gameState.gold - towerConfig.cost,\n      stage: gameState.stage,\n      wave: gameState.wave\n    });\n  };\n\n  const upgradeTower = (tower: Tower) => {\n    if (gameState.gold < tower.upgradeCost) return;\n\n    setTowers(prevTowers => prevTowers.map(t => \n      t.id === tower.id ? {\n        ...t,\n        level: t.level + 1,\n        damage: Math.round(t.damage * 1.4),\n        range: Math.round(t.range * 1.1),\n        upgradeCost: Math.round(t.upgradeCost * 1.5)\n      } : t\n    ));\n\n    setGameState(prev => ({ \n      ...prev, \n      gold: prev.gold - tower.upgradeCost,\n      selectedTower: null \n    }));\n\n    onAction('tower_upgraded', {\n      tower_type: tower.type,\n      new_level: tower.level + 1,\n      upgrade_cost: tower.upgradeCost,\n      stage: gameState.stage\n    });\n  };\n\n  const startNextWave = () => {\n    if (gameState.waveProgress > 0) return;\n\n    setGameState(prev => ({ ...prev, waveProgress: 1 }));\n    setNextEnemySpawn(frameCount + 60);\n\n    // Log wave start - key gameplay event\n    onAction('wave_started', {\n      stage: gameState.stage,\n      wave: gameState.wave,\n      player_level: gameState.playerLevel,\n      towers_count: towers.length,\n      gold: gameState.gold\n    });\n  };\n\n  const spawnEnemy = () => {\n    const stageConfig = stageEnemies[gameState.stage as keyof typeof stageEnemies];\n    if (!stageConfig) return;\n\n    const enemyPool: string[] = [];\n    stageConfig.forEach(config => {\n      for (let i = 0; i < config.count; i++) {\n        enemyPool.push(config.type);\n      }\n    });\n\n    const enemyType = enemyPool[Math.floor(Math.random() * enemyPool.length)] as Enemy['type'];\n    const enemyConfig = enemyTypes[enemyType];\n    const currentPath = stageMaps[gameState.currentMap as keyof typeof stageMaps];\n\n    const newEnemy: Enemy = {\n      id: `enemy_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      x: currentPath[0].x,\n      y: currentPath[0].y,\n      health: enemyConfig.health + (gameState.stage - 1) * 30,\n      maxHealth: enemyConfig.health + (gameState.stage - 1) * 30,\n      speed: enemyConfig.speed,\n      type: enemyType,\n      reward: enemyConfig.reward + gameState.stage * 3,\n      pathIndex: 0,\n      alive: true,\n      isBoss: enemyType === 'demon_lord',\n      armor: enemyConfig.armor,\n    };\n\n    setEnemies(prev => [...prev, newEnemy]);\n  };\n\n  const updateEnemies = useCallback(() => {\n    const currentPath = stageMaps[gameState.currentMap as keyof typeof stageMaps];\n    \n    setEnemies(prev => prev.map(enemy => {\n      if (!enemy.alive) return enemy;\n\n      const currentTarget = currentPath[enemy.pathIndex + 1];\n      if (currentTarget) {\n        const dx = currentTarget.x - enemy.x;\n        const dy = currentTarget.y - enemy.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < 5) {\n          enemy.pathIndex++;\n          if (enemy.pathIndex >= currentPath.length - 1) {\n            // Enemy reached end - critical event\n            const livesLost = enemy.isBoss ? 5 : 1;\n            setGameState(prevState => ({ \n              ...prevState, \n              lives: prevState.lives - livesLost \n            }));\n\n            onAction('life_lost', {\n              enemy_type: enemy.type,\n              is_boss: enemy.isBoss,\n              lives_lost: livesLost,\n              remaining_lives: gameState.lives - livesLost,\n              stage: gameState.stage\n            });\n\n            return { ...enemy, alive: false };\n          }\n        } else {\n          const moveX = (dx / distance) * enemy.speed;\n          const moveY = (dy / distance) * enemy.speed;\n          enemy.x += moveX;\n          enemy.y += moveY;\n        }\n      }\n\n      return enemy;\n    }).filter(enemy => enemy.alive || enemy.pathIndex < currentPath.length - 1));\n  }, [gameState.currentMap, gameState.lives, gameState.stage, onAction]);\n\n  const updateTowers = useCallback(() => {\n    towers.forEach(tower => {\n      if (frameCount - tower.lastAttack < tower.attackSpeed) return;\n\n      const enemiesInRange = enemies.filter(enemy => {\n        if (!enemy.alive) return false;\n        const distance = Math.sqrt((enemy.x - tower.x) ** 2 + (enemy.y - tower.y) ** 2);\n        return distance <= tower.range;\n      });\n\n      if (enemiesInRange.length > 0) {\n        const target = enemiesInRange.reduce((best, current) => \n          current.pathIndex > best.pathIndex ? current : best\n        );\n\n        const actualDamage = Math.max(1, tower.damage - target.armor);\n        \n        setEnemies(prevEnemies => prevEnemies.map(enemy => {\n          if (enemy.id === target.id) {\n            const newHealth = Math.max(0, enemy.health - actualDamage);\n            const killed = newHealth <= 0;\n\n            if (killed) {\n              const goldGain = enemy.reward;\n              const expGain = enemy.isBoss ? 100 : 15;\n              \n              setGameState(prevState => ({ \n                ...prevState, \n                gold: prevState.gold + goldGain,\n                score: prevState.score + goldGain * 10,\n                experience: prevState.experience + expGain\n              }));\n\n              setTowers(prevTowers => prevTowers.map(t => \n                t.id === tower.id ? { ...t, kills: t.kills + 1 } : t\n              ));\n\n              // Only log boss defeats - significant events\n              if (enemy.isBoss) {\n                onAction('boss_defeated', {\n                  boss_type: enemy.type,\n                  stage: gameState.stage,\n                  gold_gained: goldGain,\n                  exp_gained: expGain\n                });\n              }\n\n              return { ...enemy, health: 0, alive: false };\n            }\n\n            return { ...enemy, health: newHealth };\n          }\n          return enemy;\n        }));\n\n        tower.lastAttack = frameCount;\n      }\n    });\n  }, [towers, enemies, frameCount, gameState.stage, onAction]);\n\n  // Level up system\n  useEffect(() => {\n    const expNeeded = gameState.playerLevel * 100;\n    if (gameState.experience >= expNeeded) {\n      setGameState(prev => ({\n        ...prev,\n        playerLevel: prev.playerLevel + 1,\n        experience: prev.experience - expNeeded\n      }));\n\n      // Log level up - player progression event\n      onAction('level_up', {\n        new_level: gameState.playerLevel + 1,\n        stage: gameState.stage,\n        total_score: gameState.score\n      });\n    }\n  }, [gameState.experience, gameState.playerLevel, gameState.stage, gameState.score, onAction]);\n\n  // Wave and stage management\n  useEffect(() => {\n    if (gameState.waveProgress > 0 && frameCount >= nextEnemySpawn) {\n      const maxEnemies = 8 + gameState.stage * 2;\n      const currentEnemies = enemies.filter(e => e.alive).length;\n      \n      if (currentEnemies < maxEnemies) {\n        spawnEnemy();\n        setNextEnemySpawn(frameCount + Math.max(30, 80 - gameState.stage * 10));\n      } else if (enemies.filter(e => e.alive).length === 0) {\n        // Wave complete\n        if (gameState.wave >= 3) {\n          // Stage complete\n          setGameState(prev => ({ \n            ...prev, \n            gameStatus: 'stageComplete',\n            waveProgress: 0\n          }));\n\n          // Log stage victory - major milestone\n          onAction('stage_victory', {\n            stage: gameState.stage,\n            final_score: gameState.score,\n            player_level: gameState.playerLevel,\n            towers_built: towers.length\n          });\n        } else {\n          // Next wave\n          setGameState(prev => ({ \n            ...prev, \n            wave: prev.wave + 1, \n            waveProgress: 0,\n            gold: prev.gold + 50 + prev.stage * 20\n          }));\n        }\n      }\n    }\n  }, [frameCount, nextEnemySpawn, gameState, enemies, towers.length, onAction]);\n\n  // Game over check\n  useEffect(() => {\n    if (gameState.lives <= 0) {\n      setGameState(prev => ({ ...prev, gameStatus: 'gameOver' }));\n      \n      // Log game over - critical failure event\n      onAction('stage_defeat', {\n        stage: gameState.stage,\n        wave: gameState.wave,\n        final_score: gameState.score,\n        player_level: gameState.playerLevel,\n        cause: 'lives_depleted'\n      });\n    }\n  }, [gameState.lives, gameState.stage, gameState.wave, gameState.score, gameState.playerLevel, onAction]);\n\n  const nextStage = () => {\n    if (gameState.stage >= 5) {\n      setGameState(prev => ({ ...prev, gameStatus: 'victory' }));\n      \n      onAction('game_victory', {\n        final_score: gameState.score,\n        player_level: gameState.playerLevel,\n        total_towers: towers.length\n      });\n      return;\n    }\n\n    setGameState(prev => ({\n      ...prev,\n      stage: prev.stage + 1,\n      wave: 1,\n      currentMap: prev.stage + 1,\n      gameStatus: 'playing',\n      gold: prev.gold + 100,\n      lives: Math.min(20, prev.lives + 2)\n    }));\n\n    setEnemies([]);\n    setTowers([]);\n\n    // Log stage start - new chapter begins\n    onAction('stage_started', {\n      stage: gameState.stage + 1,\n      player_level: gameState.playerLevel,\n      starting_gold: gameState.gold + 100\n    });\n  };\n\n  // Drawing functions\n  const drawPath = (ctx: CanvasRenderingContext2D) => {\n    const currentPath = stageMaps[gameState.currentMap as keyof typeof stageMaps];\n    \n    ctx.strokeStyle = '#8B4513';\n    ctx.lineWidth = 25;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    ctx.beginPath();\n    ctx.moveTo(currentPath[0].x, currentPath[0].y);\n    currentPath.slice(1).forEach(point => {\n      ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n\n    ctx.strokeStyle = '#DEB887';\n    ctx.lineWidth = 15;\n    ctx.beginPath();\n    ctx.moveTo(currentPath[0].x, currentPath[0].y);\n    currentPath.slice(1).forEach(point => {\n      ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n  };\n\n  const drawTower = (ctx: CanvasRenderingContext2D, tower: Tower) => {\n    const config = towerTypes[tower.type];\n    const isSelected = gameState.selectedTower?.id === tower.id;\n    \n    // Tower base\n    ctx.fillStyle = isSelected ? '#FFD700' : '#696969';\n    ctx.beginPath();\n    ctx.arc(tower.x, tower.y, 22, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Tower body\n    ctx.fillStyle = config.color;\n    ctx.beginPath();\n    ctx.arc(tower.x, tower.y, 18, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Level indicator\n    for (let i = 0; i < tower.level; i++) {\n      ctx.fillStyle = '#FFD700';\n      ctx.fillRect(tower.x - 15 + i * 6, tower.y - 25, 4, 4);\n    }\n\n    // Tower icon\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'center';\n    \n    const symbols = { \n      archer: '🏹', cannon: '💣', magic: '✨', \n      ice: '❄️', lightning: '⚡' \n    };\n    ctx.fillText(symbols[tower.type], tower.x, tower.y + 4);\n\n    // Range for selected tower\n    if (isSelected) {\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([5, 5]);\n      ctx.beginPath();\n      ctx.arc(tower.x, tower.y, tower.range, 0, 2 * Math.PI);\n      ctx.stroke();\n      ctx.setLineDash([]);\n\n      // Upgrade info\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '12px Arial';\n      ctx.fillText(`Lv.${tower.level}`, tower.x, tower.y - 35);\n      ctx.fillText(`$${tower.upgradeCost}`, tower.x, tower.y - 50);\n    }\n\n    // Kill count\n    if (tower.kills > 0) {\n      ctx.fillStyle = '#FFD700';\n      ctx.font = '10px Arial';\n      ctx.fillText(tower.kills.toString(), tower.x + 20, tower.y - 20);\n    }\n  };\n\n  const drawEnemy = (ctx: CanvasRenderingContext2D, enemy: Enemy) => {\n    if (!enemy.alive) return;\n\n    const config = enemyTypes[enemy.type];\n    const sizeMap: Record<string, number> = { \n      goblin: 12, orc: 16, troll: 20, dragon: 24, \n      demon_lord: 30, ice_giant: 26, fire_elemental: 18 \n    };\n    const size = enemy.isBoss ? 30 : sizeMap[enemy.type] || 16;\n\n    // Boss glow effect\n    if (enemy.isBoss) {\n      ctx.shadowColor = '#FF0000';\n      ctx.shadowBlur = 20;\n    }\n\n    // Enemy body\n    ctx.fillStyle = config.color;\n    ctx.beginPath();\n    ctx.arc(enemy.x, enemy.y, size, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.shadowBlur = 0;\n\n    // Enemy icon\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = `${size}px Arial`;\n    ctx.textAlign = 'center';\n    \n    const symbols = { \n      goblin: '👹', orc: '🗡️', troll: '🏔️', \n      dragon: '🐉', demon_lord: '😈',\n      ice_giant: '🧊', fire_elemental: '🔥'\n    };\n    ctx.fillText(symbols[enemy.type], enemy.x, enemy.y + size/3);\n\n    // Health bar\n    const barWidth = size * 2.5;\n    const barHeight = 6;\n    const healthPercent = enemy.health / enemy.maxHealth;\n    \n    ctx.fillStyle = enemy.isBoss ? '#8B0000' : '#FF0000';\n    ctx.fillRect(enemy.x - barWidth/2, enemy.y - size - 15, barWidth, barHeight);\n    ctx.fillStyle = enemy.isBoss ? '#FFD700' : '#00FF00';\n    ctx.fillRect(enemy.x - barWidth/2, enemy.y - size - 15, barWidth * healthPercent, barHeight);\n\n    // Armor indicator\n    if (enemy.armor > 0) {\n      ctx.fillStyle = '#C0C0C0';\n      ctx.font = '8px Arial';\n      ctx.fillText(`⚔${enemy.armor}`, enemy.x, enemy.y + size + 12);\n    }\n  };\n\n  const drawUI = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Top status bar\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.fillRect(0, 0, canvas.width, 60);\n    \n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Stage: ${gameState.stage}`, 10, 25);\n    ctx.fillText(`Wave: ${gameState.wave}/3`, 10, 45);\n    ctx.fillText(`Lives: ${gameState.lives}`, 120, 25);\n    ctx.fillText(`Gold: ${gameState.gold}`, 120, 45);\n    ctx.fillText(`Level: ${gameState.playerLevel}`, 220, 25);\n    ctx.fillText(`Score: ${gameState.score}`, 220, 45);\n\n    // Experience bar\n    const expNeeded = gameState.playerLevel * 100;\n    const expPercent = gameState.experience / expNeeded;\n    ctx.fillStyle = '#8B4513';\n    ctx.fillRect(320, 35, 200, 8);\n    ctx.fillStyle = '#FFD700';\n    ctx.fillRect(320, 35, 200 * expPercent, 8);\n\n    // Tower selection panel\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n    ctx.fillRect(0, canvas.height - 90, canvas.width, 90);\n\n    const towerButtons = [\n      { type: 'archer', x: 60, key: '1', unlocked: true },\n      { type: 'cannon', x: 140, key: '2', unlocked: true },\n      { type: 'magic', x: 220, key: '3', unlocked: true },\n      { type: 'ice', x: 300, key: '4', unlocked: true },\n      { type: 'lightning', x: 380, key: '5', unlocked: gameState.playerLevel >= 3 }\n    ];\n\n    towerButtons.forEach(button => {\n      if (!button.unlocked) return;\n      \n      const config = towerTypes[button.type as keyof typeof towerTypes];\n      const isSelected = gameState.selectedTowerType === button.type;\n      const canAfford = gameState.gold >= config.cost;\n\n      ctx.fillStyle = isSelected ? 'rgba(255, 255, 0, 0.5)' : \n                     canAfford ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(button.x - 30, canvas.height - 80, 60, 70);\n\n      ctx.fillStyle = config.color;\n      ctx.beginPath();\n      ctx.arc(button.x, canvas.height - 60, 15, 0, 2 * Math.PI);\n      ctx.fill();\n\n      ctx.fillStyle = canAfford ? '#FFFFFF' : '#FF6666';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(`${button.key}: $${config.cost}`, button.x, canvas.height - 25);\n    });\n\n    // Instructions\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText('SPACE: Next Wave', canvas.width - 10, canvas.height - 65);\n    ctx.fillText('U: Upgrade Tower', canvas.width - 10, canvas.height - 45);\n    ctx.fillText('S: Shop (after stage)', canvas.width - 10, canvas.height - 25);\n    ctx.fillText('ESC: Cancel', canvas.width - 10, canvas.height - 5);\n\n    // Selected tower info\n    if (gameState.selectedTower) {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      ctx.fillRect(canvas.width - 200, 70, 190, 100);\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '14px Arial';\n      ctx.textAlign = 'left';\n      const tower = gameState.selectedTower;\n      ctx.fillText(`${tower.type.toUpperCase()} Lv.${tower.level}`, canvas.width - 190, 90);\n      ctx.fillText(`Damage: ${tower.damage}`, canvas.width - 190, 110);\n      ctx.fillText(`Range: ${tower.range}`, canvas.width - 190, 130);\n      ctx.fillText(`Kills: ${tower.kills}`, canvas.width - 190, 150);\n      ctx.fillText(`Upgrade: $${tower.upgradeCost}`, canvas.width - 190, 170);\n    }\n\n    // Game status overlays\n    if (gameState.gameStatus === 'stageComplete') {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      ctx.fillStyle = '#00FF00';\n      ctx.font = '32px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('STAGE COMPLETE!', canvas.width / 2, canvas.height / 2 - 40);\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '18px Arial';\n      ctx.fillText('Press S for Shop, ENTER for Next Stage', canvas.width / 2, canvas.height / 2 + 20);\n    }\n\n    if (gameState.gameStatus === 'shop') {\n      drawShop(ctx, canvas);\n    }\n\n    if (gameState.gameStatus === 'gameOver') {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      ctx.fillStyle = '#FF0000';\n      ctx.font = '32px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('GAME OVER', canvas.width / 2, canvas.height / 2 - 50);\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '18px Arial';\n      ctx.fillText(`Stage Reached: ${gameState.stage}`, canvas.width / 2, canvas.height / 2);\n      ctx.fillText(`Final Score: ${gameState.score}`, canvas.width / 2, canvas.height / 2 + 30);\n    }\n\n    if (gameState.gameStatus === 'victory') {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      ctx.fillStyle = '#FFD700';\n      ctx.font = '32px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('VICTORY!', canvas.width / 2, canvas.height / 2 - 50);\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '18px Arial';\n      ctx.fillText('All stages conquered!', canvas.width / 2, canvas.height / 2);\n      ctx.fillText(`Final Score: ${gameState.score}`, canvas.width / 2, canvas.height / 2 + 30);\n    }\n  };\n\n  const drawShop = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = '#FFD700';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🛒 SHOP', canvas.width / 2, 50);\n\n    gameState.shopItems.forEach((item, index) => {\n      const y = 100 + index * 60;\n      const canAfford = gameState.gold >= item.cost;\n      \n      ctx.fillStyle = canAfford ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 0, 0, 0.1)';\n      ctx.fillRect(50, y, 500, 50);\n      \n      ctx.fillStyle = canAfford ? '#FFFFFF' : '#999999';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText(item.name, 60, y + 20);\n      ctx.font = '12px Arial';\n      ctx.fillText(item.description, 60, y + 35);\n      \n      ctx.textAlign = 'right';\n      ctx.font = '16px Arial';\n      ctx.fillText(`$${item.cost}`, 540, y + 25);\n    });\n\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('Click items to purchase, ESC to close', canvas.width / 2, canvas.height - 30);\n  };\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Stage-specific backgrounds\n    const stageColors = {\n      1: '#1a4c2e', 2: '#2d2d2d', 3: '#1a1a3a', \n      4: '#3a1a1a', 5: '#0f0f0f'\n    };\n    ctx.fillStyle = stageColors[gameState.stage as keyof typeof stageColors] || '#1a4c2e';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    if (gameState.gameStatus !== 'shop') {\n      drawPath(ctx);\n      towers.forEach(tower => drawTower(ctx, tower));\n      enemies.forEach(enemy => drawEnemy(ctx, enemy));\n    }\n    \n    drawUI(ctx, canvas);\n  }, [towers, enemies, gameState]);\n\n  // Game loop\n  useEffect(() => {\n    const gameLoop = () => {\n      if (gameState.gameStatus === 'playing') {\n        updateEnemies();\n        updateTowers();\n      }\n      draw();\n      setFrameCount(prev => prev + 1);\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    };\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n    };\n  }, [updateEnemies, updateTowers, draw, gameState.gameStatus]);\n\n  // Event listeners\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter' && gameState.gameStatus === 'stageComplete') {\n        nextStage();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keydown', handleKeyPress);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [handleKeyDown, gameState.gameStatus]);\n\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      background: '#0f1419',\n      borderRadius: '12px',\n      padding: '16px',\n      border: '2px solid #2d3748',\n    }}>\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={400}\n        style={{\n          border: '2px solid #4a5568',\n          borderRadius: '8px',\n          cursor: gameState.selectedTowerType ? 'crosshair' : 'default',\n        }}\n        onClick={handleCanvasClick}\n        tabIndex={0}\n      />\n      \n      <div style={{\n        marginTop: '12px',\n        color: '#ffffff',\n        fontSize: '14px',\n        textAlign: 'center',\n        maxWidth: '600px',\n      }}>\n        <p>🏰 <strong>Advanced Tower Defense</strong> - 5 stages, boss battles, upgrades & shop!</p>\n        <p>Stage {gameState.stage}/5 | Level {gameState.playerLevel} | Score: {gameState.score}</p>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}