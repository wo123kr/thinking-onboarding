{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const MMORPGGame=_ref=>{let{onAction,playerStats,setPlayerStats,currentUser}=_ref;const canvasRef=useRef(null);const gameLoopRef=useRef();const[frameCount,setFrameCount]=useState(0);// Game state\nconst[gameState,setGameState]=useState({currentScene:'characterSelect',selectedCharacter:null,worldMap:{width:2000,height:1500,zones:[]},camera:{x:0,y:0},chatMessages:[],party:null,guild:null,selectedNPC:null,activeQuests:[],inventory:[]});// Online players simulation\nconst[onlinePlayers,setOnlinePlayers]=useState([]);// Character classes\nconst characterClasses={Warrior:{icon:'⚔️',color:'#FF4444',baseStats:{health:150,mana:50,attack:20,defense:15},description:'근접 전투의 전문가, 높은 체력과 방어력'},Mage:{icon:'🔮',color:'#4444FF',baseStats:{health:80,mana:120,attack:25,defense:8},description:'강력한 마법 공격, 높은 마나'},Archer:{icon:'🏹',color:'#44FF44',baseStats:{health:100,mana:80,attack:22,defense:12},description:'원거리 공격 전문, 균형잡힌 능력치'},Healer:{icon:'✨',color:'#FFFF44',baseStats:{health:120,mana:100,attack:15,defense:10},description:'치유와 보조 마법의 전문가'}};// World zones\nconst worldZones=[{id:'starter_village',name:'시작 마을',x:100,y:100,width:400,height:300,level:1,type:'peaceful',background:'#90EE90',npcs:[{id:'village_elder',name:'마을 촌장',type:'questGiver',x:200,y:200,dialogue:['안녕하신가, 젊은 모험가여!','우리 마을에 도움이 필요하다네.'],quests:[{id:'first_quest',title:'늑대 퇴치',description:'마을 근처의 늑대 5마리를 처치하세요.',objectives:[{type:'kill',target:'wolf',amount:5,current:0}],rewards:[{type:'exp',amount:100},{type:'gold',amount:50}],level:1,completed:false}]},{id:'weapon_shop',name:'무기 상인',type:'shop',x:150,y:180,dialogue:['최고 품질의 무기를 판매합니다!'],shop:[{id:'iron_sword',name:'철 검',type:'weapon',rarity:'common',stats:{attack:15},price:100,level:1},{id:'steel_bow',name:'강철 활',type:'weapon',rarity:'common',stats:{attack:12,critChance:10},price:120,level:1}]}],monsters:[]},{id:'forest',name:'어둠의 숲',x:600,y:100,width:500,height:400,level:2,type:'combat',background:'#228B22',npcs:[],monsters:[{id:'wolf_1',name:'늑대',type:'monster',x:700,y:200,level:2,health:60,maxHealth:60},{id:'wolf_2',name:'늑대',type:'monster',x:800,y:300,level:2,health:60,maxHealth:60}]},{id:'dungeon_entrance',name:'던전 입구',x:400,y:500,width:200,height:200,level:5,type:'dungeon',background:'#8B4513',npcs:[{id:'dungeon_guard',name:'던전 수호자',type:'guard',x:500,y:600,dialogue:['던전에 들어가려면 파티가 필요합니다.','레벨 5 이상만 입장 가능합니다.']}],monsters:[]},{id:'pvp_arena',name:'PvP 경기장',x:1000,y:500,width:300,height:300,level:10,type:'pvp',background:'#DC143C',npcs:[{id:'arena_master',name:'경기장 관리인',type:'questGiver',x:1150,y:650,dialogue:['여기서 다른 플레이어와 대결할 수 있습니다!','PvP 랭킹을 올려보세요!']}],monsters:[]}];// Initialize game\nuseEffect(()=>{setGameState(prev=>({...prev,worldMap:{...prev.worldMap,zones:worldZones}}));// Simulate online players\nconst simulateOnlinePlayers=()=>{const playerNames=['DragonSlayer','MagicMaster','ShadowArcher','HolyPriest','IronWarrior'];const classes=['Warrior','Mage','Archer','Healer'];const players=playerNames.map((name,index)=>({id:`player_${index}`,name,class:classes[index%classes.length],level:Math.floor(Math.random()*20)+1,experience:Math.floor(Math.random()*1000),health:100,maxHealth:100,mana:50,maxMana:50,x:Math.random()*1500+200,y:Math.random()*1000+200,gold:Math.floor(Math.random()*1000),equipment:{},isOnline:Math.random()>0.3,lastSeen:new Date().toISOString()}));setOnlinePlayers(players);};simulateOnlinePlayers();const interval=setInterval(simulateOnlinePlayers,30000);// Update every 30 seconds\nreturn()=>clearInterval(interval);},[]);// Create character\nconst createCharacter=(name,selectedClass)=>{const classData=characterClasses[selectedClass];const newCharacter={id:`${currentUser.user_id}_${Date.now()}`,name,class:selectedClass,level:1,experience:0,health:classData.baseStats.health,maxHealth:classData.baseStats.health,mana:classData.baseStats.mana,maxMana:classData.baseStats.mana,x:250,// Start in village\ny:250,gold:100,equipment:{},isOnline:true,lastSeen:new Date().toISOString()};setGameState(prev=>({...prev,selectedCharacter:newCharacter,currentScene:'world',camera:{x:newCharacter.x-300,y:newCharacter.y-200}}));setPlayerStats(prev=>({...prev,character:newCharacter}));onAction('character_created',{player_id:currentUser.user_id,character_name:name,character_class:selectedClass,starting_stats:classData.baseStats});};// Movement\nconst moveCharacter=useCallback((dx,dy)=>{if(!gameState.selectedCharacter)return;const newX=Math.max(0,Math.min(gameState.worldMap.width,gameState.selectedCharacter.x+dx));const newY=Math.max(0,Math.min(gameState.worldMap.height,gameState.selectedCharacter.y+dy));setGameState(prev=>({...prev,selectedCharacter:prev.selectedCharacter?{...prev.selectedCharacter,x:newX,y:newY}:null,camera:{x:newX-300,y:newY-200}}));// Check for zone entry\nconst currentZone=worldZones.find(zone=>newX>=zone.x&&newX<=zone.x+zone.width&&newY>=zone.y&&newY<=zone.y+zone.height);if(currentZone){onAction('zone_entered',{player_id:currentUser.user_id,zone_id:currentZone.id,zone_name:currentZone.name,zone_level:currentZone.level,player_level:gameState.selectedCharacter.level});}},[gameState.selectedCharacter,gameState.worldMap,currentUser.user_id,onAction]);// Keyboard handling\nconst handleKeyDown=useCallback(e=>{if(['ArrowUp','ArrowDown','ArrowLeft','ArrowRight','w','a','s','d'].includes(e.key)){e.preventDefault();}if(gameState.currentScene==='world'&&gameState.selectedCharacter){const speed=5;switch(e.key.toLowerCase()){case'arrowup':case'w':moveCharacter(0,-speed);break;case'arrowdown':case's':moveCharacter(0,speed);break;case'arrowleft':case'a':moveCharacter(-speed,0);break;case'arrowright':case'd':moveCharacter(speed,0);break;case'enter':// Open chat\nbreak;case'i':setGameState(prev=>({...prev,currentScene:'inventory'}));break;case'escape':setGameState(prev=>({...prev,currentScene:'world'}));break;}}},[gameState.currentScene,gameState.selectedCharacter,moveCharacter]);// Chat system\nconst sendChatMessage=function(message){let channel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'global';if(!gameState.selectedCharacter)return;const chatMessage={id:`msg_${Date.now()}`,player:gameState.selectedCharacter.name,message,channel,timestamp:Date.now()};setGameState(prev=>({...prev,chatMessages:[...prev.chatMessages.slice(-49),chatMessage]// Keep last 50 messages\n}));onAction('chat_message_sent',{player_id:currentUser.user_id,player_name:gameState.selectedCharacter.name,message,channel});};// Drawing functions\nconst drawCharacterSelect=(ctx,canvas)=>{// Background\nctx.fillStyle='#2C1810';ctx.fillRect(0,0,canvas.width,canvas.height);// Title\nctx.fillStyle='#FFD700';ctx.font='bold 32px Arial';ctx.textAlign='center';ctx.fillText('🌟 MMO RPG - 캐릭터 생성',canvas.width/2,80);// Class selection\nconst classes=Object.entries(characterClasses);classes.forEach((_ref2,index)=>{let[className,classData]=_ref2;const x=50+index%2*280;const y=150+Math.floor(index/2)*120;// Class card\nctx.fillStyle='rgba(255, 255, 255, 0.1)';ctx.fillRect(x,y,250,100);ctx.strokeStyle=classData.color;ctx.lineWidth=3;ctx.strokeRect(x,y,250,100);// Class info\nctx.fillStyle=classData.color;ctx.font='bold 20px Arial';ctx.textAlign='left';ctx.fillText(`${classData.icon} ${className}`,x+20,y+30);ctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.fillText(classData.description,x+20,y+50);// Stats\nctx.font='10px Arial';ctx.fillText(`HP: ${classData.baseStats.health} MP: ${classData.baseStats.mana}`,x+20,y+65);ctx.fillText(`ATK: ${classData.baseStats.attack} DEF: ${classData.baseStats.defense}`,x+20,y+80);});// Instructions\nctx.fillStyle='#CCCCCC';ctx.font='16px Arial';ctx.textAlign='center';ctx.fillText('클릭해서 클래스를 선택하세요',canvas.width/2,canvas.height-30);};const drawWorld=(ctx,canvas)=>{if(!gameState.selectedCharacter)return;// Camera offset\nconst offsetX=-gameState.camera.x;const offsetY=-gameState.camera.y;// Background\nctx.fillStyle='#87CEEB';ctx.fillRect(0,0,canvas.width,canvas.height);// Draw zones\ngameState.worldMap.zones.forEach(zone=>{const zoneX=zone.x+offsetX;const zoneY=zone.y+offsetY;// Zone background\nctx.fillStyle=zone.background;ctx.fillRect(zoneX,zoneY,zone.width,zone.height);// Zone border\nctx.strokeStyle='#000000';ctx.lineWidth=2;ctx.strokeRect(zoneX,zoneY,zone.width,zone.height);// Zone name\nctx.fillStyle='#000000';ctx.font='bold 16px Arial';ctx.textAlign='center';ctx.fillText(zone.name,zoneX+zone.width/2,zoneY+25);ctx.fillText(`Lv.${zone.level}`,zoneX+zone.width/2,zoneY+45);// NPCs\nzone.npcs.forEach(npc=>{const npcX=npc.x+offsetX;const npcY=npc.y+offsetY;// NPC icon based on type\nconst npcIcons={questGiver:'❗',shop:'🛒',guard:'🛡️',monster:'👹'};ctx.fillStyle='#FFD700';ctx.font='20px Arial';ctx.textAlign='center';ctx.fillText(npcIcons[npc.type],npcX,npcY);// NPC name\nctx.fillStyle='#000000';ctx.font='12px Arial';ctx.fillText(npc.name,npcX,npcY+25);});// Monsters\nzone.monsters.forEach(monster=>{const monsterX=monster.x+offsetX;const monsterY=monster.y+offsetY;ctx.fillStyle='#FF0000';ctx.font='16px Arial';ctx.textAlign='center';ctx.fillText('👹',monsterX,monsterY);// Health bar\nif(monster.health&&monster.maxHealth){const healthPercent=monster.health/monster.maxHealth;ctx.fillStyle='#FF0000';ctx.fillRect(monsterX-15,monsterY-25,30,4);ctx.fillStyle='#00FF00';ctx.fillRect(monsterX-15,monsterY-25,30*healthPercent,4);}});});// Draw online players\nonlinePlayers.forEach(player=>{var _gameState$selectedCh;if(!player.isOnline||player.id===((_gameState$selectedCh=gameState.selectedCharacter)===null||_gameState$selectedCh===void 0?void 0:_gameState$selectedCh.id))return;const playerX=player.x+offsetX;const playerY=player.y+offsetY;// Player character\nconst classData=characterClasses[player.class];ctx.fillStyle=classData.color;ctx.font='20px Arial';ctx.textAlign='center';ctx.fillText(classData.icon,playerX,playerY);// Player name\nctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.fillText(player.name,playerX,playerY+25);ctx.fillText(`Lv.${player.level}`,playerX,playerY+38);});// Draw player character\nconst playerX=gameState.selectedCharacter.x+offsetX;const playerY=gameState.selectedCharacter.y+offsetY;const playerClass=characterClasses[gameState.selectedCharacter.class];// Player glow effect\nctx.shadowColor=playerClass.color;ctx.shadowBlur=10;ctx.fillStyle=playerClass.color;ctx.font='24px Arial';ctx.textAlign='center';ctx.fillText(playerClass.icon,playerX,playerY);ctx.shadowBlur=0;// Player name and level\nctx.fillStyle='#FFFF00';ctx.font='bold 14px Arial';ctx.fillText(gameState.selectedCharacter.name,playerX,playerY+30);ctx.fillText(`Lv.${gameState.selectedCharacter.level}`,playerX,playerY+45);// Health and mana bars\nconst barWidth=40;// Health bar\nctx.fillStyle='#FF0000';ctx.fillRect(playerX-barWidth/2,playerY-35,barWidth,4);ctx.fillStyle='#00FF00';const healthPercent=gameState.selectedCharacter.health/gameState.selectedCharacter.maxHealth;ctx.fillRect(playerX-barWidth/2,playerY-35,barWidth*healthPercent,4);// Mana bar\nctx.fillStyle='#000080';ctx.fillRect(playerX-barWidth/2,playerY-28,barWidth,4);ctx.fillStyle='#0080FF';const manaPercent=gameState.selectedCharacter.mana/gameState.selectedCharacter.maxMana;ctx.fillRect(playerX-barWidth/2,playerY-28,barWidth*manaPercent,4);// UI Panel\ndrawUI(ctx,canvas);};const drawUI=(ctx,canvas)=>{if(!gameState.selectedCharacter)return;// Bottom UI panel\nctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(0,canvas.height-120,canvas.width,120);// Player stats\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='left';ctx.fillText(`${gameState.selectedCharacter.name} - Lv.${gameState.selectedCharacter.level}`,20,canvas.height-95);ctx.fillText(`HP: ${gameState.selectedCharacter.health}/${gameState.selectedCharacter.maxHealth}`,20,canvas.height-75);ctx.fillText(`MP: ${gameState.selectedCharacter.mana}/${gameState.selectedCharacter.maxMana}`,20,canvas.height-55);ctx.fillText(`Gold: ${gameState.selectedCharacter.gold}`,20,canvas.height-35);ctx.fillText(`EXP: ${gameState.selectedCharacter.experience}/${gameState.selectedCharacter.level*100}`,20,canvas.height-15);// Online players count\nconst onlineCount=onlinePlayers.filter(p=>p.isOnline).length;ctx.fillStyle='#00FF00';ctx.font='12px Arial';ctx.textAlign='right';ctx.fillText(`🌐 Online: ${onlineCount} players`,canvas.width-20,canvas.height-95);// Chat messages\nctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.textAlign='left';gameState.chatMessages.slice(-5).forEach((msg,index)=>{const channelColors={global:'#FFFFFF',party:'#00FF00',guild:'#FFD700',whisper:'#FF69B4'};ctx.fillStyle=channelColors[msg.channel];const y=canvas.height-95+index*15;ctx.fillText(`[${msg.channel.toUpperCase()}] ${msg.player}: ${msg.message}`,200,y);});// Controls\nctx.fillStyle='#CCCCCC';ctx.font='10px Arial';ctx.textAlign='center';ctx.fillText('WASD: Move | I: Inventory | Enter: Chat | ESC: Menu',canvas.width/2,canvas.height-5);};// Click handling\nconst handleCanvasClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(gameState.currentScene==='characterSelect'){// Handle class selection\nconst classes=Object.keys(characterClasses);classes.forEach((className,index)=>{const cardX=50+index%2*280;const cardY=150+Math.floor(index/2)*120;if(x>=cardX&&x<=cardX+250&&y>=cardY&&y<=cardY+100){const characterName=`Hero_${Math.floor(Math.random()*1000)}`;createCharacter(characterName,className);}});}},[gameState.currentScene]);const draw=useCallback(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;ctx.clearRect(0,0,canvas.width,canvas.height);switch(gameState.currentScene){case'characterSelect':drawCharacterSelect(ctx,canvas);break;case'world':drawWorld(ctx,canvas);break;}},[gameState]);// Game loop\nuseEffect(()=>{const gameLoop=()=>{draw();setFrameCount(prev=>prev+1);gameLoopRef.current=requestAnimationFrame(gameLoop);};gameLoopRef.current=requestAnimationFrame(gameLoop);return()=>{if(gameLoopRef.current){cancelAnimationFrame(gameLoopRef.current);}};},[draw]);// Event listeners\nuseEffect(()=>{document.addEventListener('keydown',handleKeyDown);return()=>{document.removeEventListener('keydown',handleKeyDown);};},[handleKeyDown]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',background:'#0a0a0a',borderRadius:'12px',padding:'16px',border:'2px solid #2d3748',maxHeight:'500px',overflowY:'auto',overflowX:'auto'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:600,height:400,style:{border:'2px solid #4a5568',borderRadius:'8px',cursor:'pointer',maxWidth:'100%',height:'auto'},onClick:handleCanvasClick,tabIndex:0}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px',color:'#ffffff',fontSize:'14px',textAlign:'center',maxWidth:'600px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDF1F \",/*#__PURE__*/_jsx(\"strong\",{children:\"MMO RPG Adventure\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[gameState.currentScene==='characterSelect'&&'클래스를 선택해서 모험을 시작하세요!',gameState.currentScene==='world'&&'WASD로 이동하며 다른 플레이어들과 함께 모험하세요!']}),gameState.selectedCharacter&&/*#__PURE__*/_jsxs(\"p\",{children:[gameState.selectedCharacter.name,\" | Level \",gameState.selectedCharacter.level,\" |\",characterClasses[gameState.selectedCharacter.class].icon,\" \",gameState.selectedCharacter.class]})]})]});};","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","MMORPGGame","_ref","onAction","playerStats","setPlayerStats","currentUser","canvasRef","gameLoopRef","frameCount","setFrameCount","gameState","setGameState","currentScene","selectedCharacter","worldMap","width","height","zones","camera","x","y","chatMessages","party","guild","selectedNPC","activeQuests","inventory","onlinePlayers","setOnlinePlayers","characterClasses","Warrior","icon","color","baseStats","health","mana","attack","defense","description","Mage","Archer","Healer","worldZones","id","name","level","type","background","npcs","dialogue","quests","title","objectives","target","amount","current","rewards","completed","shop","rarity","stats","price","critChance","monsters","maxHealth","prev","simulateOnlinePlayers","playerNames","classes","players","map","index","class","length","Math","floor","random","experience","maxMana","gold","equipment","isOnline","lastSeen","Date","toISOString","interval","setInterval","clearInterval","createCharacter","selectedClass","classData","newCharacter","user_id","now","character","player_id","character_name","character_class","starting_stats","moveCharacter","dx","dy","newX","max","min","newY","currentZone","find","zone","zone_id","zone_name","zone_level","player_level","handleKeyDown","e","includes","key","preventDefault","speed","toLowerCase","sendChatMessage","message","channel","arguments","undefined","chatMessage","player","timestamp","slice","player_name","drawCharacterSelect","ctx","canvas","fillStyle","fillRect","font","textAlign","fillText","Object","entries","forEach","_ref2","className","strokeStyle","lineWidth","strokeRect","drawWorld","offsetX","offsetY","zoneX","zoneY","npc","npcX","npcY","npcIcons","questGiver","guard","monster","monsterX","monsterY","healthPercent","_gameState$selectedCh","playerX","playerY","playerClass","shadowColor","shadowBlur","barWidth","manaPercent","drawUI","onlineCount","filter","p","msg","channelColors","global","whisper","toUpperCase","handleCanvasClick","rect","getBoundingClientRect","clientX","left","clientY","top","keys","cardX","cardY","characterName","draw","getContext","clearRect","gameLoop","requestAnimationFrame","cancelAnimationFrame","document","addEventListener","removeEventListener","style","display","flexDirection","alignItems","borderRadius","padding","border","maxHeight","overflowY","overflowX","children","ref","cursor","maxWidth","onClick","tabIndex","marginTop","fontSize"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/MMORPGGame.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface GameProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  playerStats: any;\n  setPlayerStats: (stats: any) => void;\n  currentUser: any;\n}\n\ninterface Player {\n  id: string;\n  name: string;\n  class: 'Warrior' | 'Mage' | 'Archer' | 'Healer';\n  level: number;\n  experience: number;\n  health: number;\n  maxHealth: number;\n  mana: number;\n  maxMana: number;\n  x: number;\n  y: number;\n  gold: number;\n  equipment: Equipment;\n  guild?: string;\n  isOnline: boolean;\n  lastSeen: string;\n}\n\ninterface Equipment {\n  weapon?: Item;\n  armor?: Item;\n  accessory?: Item;\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  type: 'weapon' | 'armor' | 'accessory' | 'consumable';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary';\n  stats: {\n    attack?: number;\n    defense?: number;\n    health?: number;\n    mana?: number;\n    critChance?: number;\n  };\n  price: number;\n  level: number;\n}\n\ninterface NPC {\n  id: string;\n  name: string;\n  type: 'questGiver' | 'shop' | 'guard' | 'monster';\n  x: number;\n  y: number;\n  level?: number;\n  health?: number;\n  maxHealth?: number;\n  dialogue?: string[];\n  quests?: Quest[];\n  shop?: Item[];\n}\n\ninterface Quest {\n  id: string;\n  title: string;\n  description: string;\n  objectives: QuestObjective[];\n  rewards: QuestReward[];\n  level: number;\n  completed: boolean;\n}\n\ninterface QuestObjective {\n  type: 'kill' | 'collect' | 'talk' | 'reach';\n  target: string;\n  amount: number;\n  current: number;\n}\n\ninterface QuestReward {\n  type: 'exp' | 'gold' | 'item';\n  amount: number;\n  item?: Item;\n}\n\ninterface ChatMessage {\n  id: string;\n  player: string;\n  message: string;\n  channel: 'global' | 'party' | 'guild' | 'whisper';\n  timestamp: number;\n}\n\ninterface Party {\n  id: string;\n  leader: string;\n  members: string[];\n  maxMembers: number;\n}\n\ninterface Guild {\n  id: string;\n  name: string;\n  leader: string;\n  members: string[];\n  level: number;\n  experience: number;\n}\n\ninterface GameState {\n  currentScene: 'characterSelect' | 'world' | 'dungeon' | 'pvp' | 'shop' | 'guild' | 'inventory';\n  selectedCharacter: Player | null;\n  worldMap: {\n    width: number;\n    height: number;\n    zones: Zone[];\n  };\n  camera: { x: number; y: number };\n  chatMessages: ChatMessage[];\n  party: Party | null;\n  guild: Guild | null;\n  selectedNPC: NPC | null;\n  activeQuests: Quest[];\n  inventory: Item[];\n}\n\ninterface Zone {\n  id: string;\n  name: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  level: number;\n  type: 'peaceful' | 'combat' | 'dungeon' | 'pvp';\n  background: string;\n  npcs: NPC[];\n  monsters: NPC[];\n}\n\nexport const MMORPGGame: React.FC<GameProps> = ({\n  onAction,\n  playerStats,\n  setPlayerStats,\n  currentUser\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number>();\n  const [frameCount, setFrameCount] = useState(0);\n\n  // Game state\n  const [gameState, setGameState] = useState<GameState>({\n    currentScene: 'characterSelect',\n    selectedCharacter: null,\n    worldMap: {\n      width: 2000,\n      height: 1500,\n      zones: []\n    },\n    camera: { x: 0, y: 0 },\n    chatMessages: [],\n    party: null,\n    guild: null,\n    selectedNPC: null,\n    activeQuests: [],\n    inventory: []\n  });\n\n  // Online players simulation\n  const [onlinePlayers, setOnlinePlayers] = useState<Player[]>([]);\n\n  // Character classes\n  const characterClasses = {\n    Warrior: {\n      icon: '⚔️',\n      color: '#FF4444',\n      baseStats: { health: 150, mana: 50, attack: 20, defense: 15 },\n      description: '근접 전투의 전문가, 높은 체력과 방어력'\n    },\n    Mage: {\n      icon: '🔮',\n      color: '#4444FF',\n      baseStats: { health: 80, mana: 120, attack: 25, defense: 8 },\n      description: '강력한 마법 공격, 높은 마나'\n    },\n    Archer: {\n      icon: '🏹',\n      color: '#44FF44',\n      baseStats: { health: 100, mana: 80, attack: 22, defense: 12 },\n      description: '원거리 공격 전문, 균형잡힌 능력치'\n    },\n    Healer: {\n      icon: '✨',\n      color: '#FFFF44',\n      baseStats: { health: 120, mana: 100, attack: 15, defense: 10 },\n      description: '치유와 보조 마법의 전문가'\n    }\n  };\n\n  // World zones\n  const worldZones: Zone[] = [\n    {\n      id: 'starter_village',\n      name: '시작 마을',\n      x: 100, y: 100, width: 400, height: 300,\n      level: 1, type: 'peaceful',\n      background: '#90EE90',\n      npcs: [\n        {\n          id: 'village_elder',\n          name: '마을 촌장',\n          type: 'questGiver',\n          x: 200, y: 200,\n          dialogue: ['안녕하신가, 젊은 모험가여!', '우리 마을에 도움이 필요하다네.'],\n          quests: [\n            {\n              id: 'first_quest',\n              title: '늑대 퇴치',\n              description: '마을 근처의 늑대 5마리를 처치하세요.',\n              objectives: [{ type: 'kill', target: 'wolf', amount: 5, current: 0 }],\n              rewards: [{ type: 'exp', amount: 100 }, { type: 'gold', amount: 50 }],\n              level: 1,\n              completed: false\n            }\n          ]\n        },\n        {\n          id: 'weapon_shop',\n          name: '무기 상인',\n          type: 'shop',\n          x: 150, y: 180,\n          dialogue: ['최고 품질의 무기를 판매합니다!'],\n          shop: [\n            {\n              id: 'iron_sword',\n              name: '철 검',\n              type: 'weapon',\n              rarity: 'common',\n              stats: { attack: 15 },\n              price: 100,\n              level: 1\n            },\n            {\n              id: 'steel_bow',\n              name: '강철 활',\n              type: 'weapon',\n              rarity: 'common',\n              stats: { attack: 12, critChance: 10 },\n              price: 120,\n              level: 1\n            }\n          ]\n        }\n      ],\n      monsters: []\n    },\n    {\n      id: 'forest',\n      name: '어둠의 숲',\n      x: 600, y: 100, width: 500, height: 400,\n      level: 2, type: 'combat',\n      background: '#228B22',\n      npcs: [],\n      monsters: [\n        {\n          id: 'wolf_1',\n          name: '늑대',\n          type: 'monster',\n          x: 700, y: 200,\n          level: 2,\n          health: 60,\n          maxHealth: 60\n        },\n        {\n          id: 'wolf_2',\n          name: '늑대',\n          type: 'monster',\n          x: 800, y: 300,\n          level: 2,\n          health: 60,\n          maxHealth: 60\n        }\n      ]\n    },\n    {\n      id: 'dungeon_entrance',\n      name: '던전 입구',\n      x: 400, y: 500, width: 200, height: 200,\n      level: 5, type: 'dungeon',\n      background: '#8B4513',\n      npcs: [\n        {\n          id: 'dungeon_guard',\n          name: '던전 수호자',\n          type: 'guard',\n          x: 500, y: 600,\n          dialogue: ['던전에 들어가려면 파티가 필요합니다.', '레벨 5 이상만 입장 가능합니다.']\n        }\n      ],\n      monsters: []\n    },\n    {\n      id: 'pvp_arena',\n      name: 'PvP 경기장',\n      x: 1000, y: 500, width: 300, height: 300,\n      level: 10, type: 'pvp',\n      background: '#DC143C',\n      npcs: [\n        {\n          id: 'arena_master',\n          name: '경기장 관리인',\n          type: 'questGiver',\n          x: 1150, y: 650,\n          dialogue: ['여기서 다른 플레이어와 대결할 수 있습니다!', 'PvP 랭킹을 올려보세요!']\n        }\n      ],\n      monsters: []\n    }\n  ];\n\n  // Initialize game\n  useEffect(() => {\n    setGameState(prev => ({\n      ...prev,\n      worldMap: { ...prev.worldMap, zones: worldZones }\n    }));\n\n    // Simulate online players\n    const simulateOnlinePlayers = () => {\n      const playerNames = ['DragonSlayer', 'MagicMaster', 'ShadowArcher', 'HolyPriest', 'IronWarrior'];\n      const classes: (keyof typeof characterClasses)[] = ['Warrior', 'Mage', 'Archer', 'Healer'];\n      \n      const players = playerNames.map((name, index) => ({\n        id: `player_${index}`,\n        name,\n        class: classes[index % classes.length],\n        level: Math.floor(Math.random() * 20) + 1,\n        experience: Math.floor(Math.random() * 1000),\n        health: 100,\n        maxHealth: 100,\n        mana: 50,\n        maxMana: 50,\n        x: Math.random() * 1500 + 200,\n        y: Math.random() * 1000 + 200,\n        gold: Math.floor(Math.random() * 1000),\n        equipment: {},\n        isOnline: Math.random() > 0.3,\n        lastSeen: new Date().toISOString()\n      }));\n\n      setOnlinePlayers(players);\n    };\n\n    simulateOnlinePlayers();\n    const interval = setInterval(simulateOnlinePlayers, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Create character\n  const createCharacter = (name: string, selectedClass: keyof typeof characterClasses) => {\n    const classData = characterClasses[selectedClass];\n    const newCharacter: Player = {\n      id: `${currentUser.user_id}_${Date.now()}`,\n      name,\n      class: selectedClass,\n      level: 1,\n      experience: 0,\n      health: classData.baseStats.health,\n      maxHealth: classData.baseStats.health,\n      mana: classData.baseStats.mana,\n      maxMana: classData.baseStats.mana,\n      x: 250, // Start in village\n      y: 250,\n      gold: 100,\n      equipment: {},\n      isOnline: true,\n      lastSeen: new Date().toISOString()\n    };\n\n    setGameState(prev => ({\n      ...prev,\n      selectedCharacter: newCharacter,\n      currentScene: 'world',\n      camera: { x: newCharacter.x - 300, y: newCharacter.y - 200 }\n    }));\n\n    setPlayerStats((prev: any) => ({\n      ...prev,\n      character: newCharacter\n    }));\n\n    onAction('character_created', {\n      player_id: currentUser.user_id,\n      character_name: name,\n      character_class: selectedClass,\n      starting_stats: classData.baseStats\n    });\n  };\n\n  // Movement\n  const moveCharacter = useCallback((dx: number, dy: number) => {\n    if (!gameState.selectedCharacter) return;\n\n    const newX = Math.max(0, Math.min(gameState.worldMap.width, gameState.selectedCharacter.x + dx));\n    const newY = Math.max(0, Math.min(gameState.worldMap.height, gameState.selectedCharacter.y + dy));\n\n    setGameState(prev => ({\n      ...prev,\n      selectedCharacter: prev.selectedCharacter ? {\n        ...prev.selectedCharacter,\n        x: newX,\n        y: newY\n      } : null,\n      camera: {\n        x: newX - 300,\n        y: newY - 200\n      }\n    }));\n\n    // Check for zone entry\n    const currentZone = worldZones.find(zone => \n      newX >= zone.x && newX <= zone.x + zone.width &&\n      newY >= zone.y && newY <= zone.y + zone.height\n    );\n\n    if (currentZone) {\n      onAction('zone_entered', {\n        player_id: currentUser.user_id,\n        zone_id: currentZone.id,\n        zone_name: currentZone.name,\n        zone_level: currentZone.level,\n        player_level: gameState.selectedCharacter.level\n      });\n    }\n  }, [gameState.selectedCharacter, gameState.worldMap, currentUser.user_id, onAction]);\n\n  // Keyboard handling\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'w', 'a', 's', 'd'].includes(e.key)) {\n      e.preventDefault();\n    }\n\n    if (gameState.currentScene === 'world' && gameState.selectedCharacter) {\n      const speed = 5;\n      switch (e.key.toLowerCase()) {\n        case 'arrowup':\n        case 'w':\n          moveCharacter(0, -speed);\n          break;\n        case 'arrowdown':\n        case 's':\n          moveCharacter(0, speed);\n          break;\n        case 'arrowleft':\n        case 'a':\n          moveCharacter(-speed, 0);\n          break;\n        case 'arrowright':\n        case 'd':\n          moveCharacter(speed, 0);\n          break;\n        case 'enter':\n          // Open chat\n          break;\n        case 'i':\n          setGameState(prev => ({ ...prev, currentScene: 'inventory' }));\n          break;\n        case 'escape':\n          setGameState(prev => ({ ...prev, currentScene: 'world' }));\n          break;\n      }\n    }\n  }, [gameState.currentScene, gameState.selectedCharacter, moveCharacter]);\n\n  // Chat system\n  const sendChatMessage = (message: string, channel: ChatMessage['channel'] = 'global') => {\n    if (!gameState.selectedCharacter) return;\n\n    const chatMessage: ChatMessage = {\n      id: `msg_${Date.now()}`,\n      player: gameState.selectedCharacter.name,\n      message,\n      channel,\n      timestamp: Date.now()\n    };\n\n    setGameState(prev => ({\n      ...prev,\n      chatMessages: [...prev.chatMessages.slice(-49), chatMessage] // Keep last 50 messages\n    }));\n\n    onAction('chat_message_sent', {\n      player_id: currentUser.user_id,\n      player_name: gameState.selectedCharacter.name,\n      message,\n      channel\n    });\n  };\n\n  // Drawing functions\n  const drawCharacterSelect = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Background\n    ctx.fillStyle = '#2C1810';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Title\n    ctx.fillStyle = '#FFD700';\n    ctx.font = 'bold 32px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🌟 MMO RPG - 캐릭터 생성', canvas.width / 2, 80);\n\n    // Class selection\n    const classes = Object.entries(characterClasses);\n    classes.forEach(([className, classData], index) => {\n      const x = 50 + (index % 2) * 280;\n      const y = 150 + Math.floor(index / 2) * 120;\n\n      // Class card\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.fillRect(x, y, 250, 100);\n      ctx.strokeStyle = classData.color;\n      ctx.lineWidth = 3;\n      ctx.strokeRect(x, y, 250, 100);\n\n      // Class info\n      ctx.fillStyle = classData.color;\n      ctx.font = 'bold 20px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText(`${classData.icon} ${className}`, x + 20, y + 30);\n\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '12px Arial';\n      ctx.fillText(classData.description, x + 20, y + 50);\n\n      // Stats\n      ctx.font = '10px Arial';\n      ctx.fillText(`HP: ${classData.baseStats.health} MP: ${classData.baseStats.mana}`, x + 20, y + 65);\n      ctx.fillText(`ATK: ${classData.baseStats.attack} DEF: ${classData.baseStats.defense}`, x + 20, y + 80);\n    });\n\n    // Instructions\n    ctx.fillStyle = '#CCCCCC';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('클릭해서 클래스를 선택하세요', canvas.width / 2, canvas.height - 30);\n  };\n\n  const drawWorld = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    if (!gameState.selectedCharacter) return;\n\n    // Camera offset\n    const offsetX = -gameState.camera.x;\n    const offsetY = -gameState.camera.y;\n\n    // Background\n    ctx.fillStyle = '#87CEEB';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw zones\n    gameState.worldMap.zones.forEach(zone => {\n      const zoneX = zone.x + offsetX;\n      const zoneY = zone.y + offsetY;\n\n      // Zone background\n      ctx.fillStyle = zone.background;\n      ctx.fillRect(zoneX, zoneY, zone.width, zone.height);\n\n      // Zone border\n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(zoneX, zoneY, zone.width, zone.height);\n\n      // Zone name\n      ctx.fillStyle = '#000000';\n      ctx.font = 'bold 16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(zone.name, zoneX + zone.width / 2, zoneY + 25);\n      ctx.fillText(`Lv.${zone.level}`, zoneX + zone.width / 2, zoneY + 45);\n\n      // NPCs\n      zone.npcs.forEach(npc => {\n        const npcX = npc.x + offsetX;\n        const npcY = npc.y + offsetY;\n\n        // NPC icon based on type\n        const npcIcons = {\n          questGiver: '❗',\n          shop: '🛒',\n          guard: '🛡️',\n          monster: '👹'\n        };\n\n        ctx.fillStyle = '#FFD700';\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(npcIcons[npc.type], npcX, npcY);\n\n        // NPC name\n        ctx.fillStyle = '#000000';\n        ctx.font = '12px Arial';\n        ctx.fillText(npc.name, npcX, npcY + 25);\n      });\n\n      // Monsters\n      zone.monsters.forEach(monster => {\n        const monsterX = monster.x + offsetX;\n        const monsterY = monster.y + offsetY;\n\n        ctx.fillStyle = '#FF0000';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('👹', monsterX, monsterY);\n\n        // Health bar\n        if (monster.health && monster.maxHealth) {\n          const healthPercent = monster.health / monster.maxHealth;\n          ctx.fillStyle = '#FF0000';\n          ctx.fillRect(monsterX - 15, monsterY - 25, 30, 4);\n          ctx.fillStyle = '#00FF00';\n          ctx.fillRect(monsterX - 15, monsterY - 25, 30 * healthPercent, 4);\n        }\n      });\n    });\n\n    // Draw online players\n    onlinePlayers.forEach(player => {\n      if (!player.isOnline || player.id === gameState.selectedCharacter?.id) return;\n\n      const playerX = player.x + offsetX;\n      const playerY = player.y + offsetY;\n\n      // Player character\n      const classData = characterClasses[player.class];\n      ctx.fillStyle = classData.color;\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(classData.icon, playerX, playerY);\n\n      // Player name\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '12px Arial';\n      ctx.fillText(player.name, playerX, playerY + 25);\n      ctx.fillText(`Lv.${player.level}`, playerX, playerY + 38);\n    });\n\n    // Draw player character\n    const playerX = gameState.selectedCharacter.x + offsetX;\n    const playerY = gameState.selectedCharacter.y + offsetY;\n    const playerClass = characterClasses[gameState.selectedCharacter.class];\n\n    // Player glow effect\n    ctx.shadowColor = playerClass.color;\n    ctx.shadowBlur = 10;\n    ctx.fillStyle = playerClass.color;\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(playerClass.icon, playerX, playerY);\n    ctx.shadowBlur = 0;\n\n    // Player name and level\n    ctx.fillStyle = '#FFFF00';\n    ctx.font = 'bold 14px Arial';\n    ctx.fillText(gameState.selectedCharacter.name, playerX, playerY + 30);\n    ctx.fillText(`Lv.${gameState.selectedCharacter.level}`, playerX, playerY + 45);\n\n    // Health and mana bars\n    const barWidth = 40;\n    // Health bar\n    ctx.fillStyle = '#FF0000';\n    ctx.fillRect(playerX - barWidth/2, playerY - 35, barWidth, 4);\n    ctx.fillStyle = '#00FF00';\n    const healthPercent = gameState.selectedCharacter.health / gameState.selectedCharacter.maxHealth;\n    ctx.fillRect(playerX - barWidth/2, playerY - 35, barWidth * healthPercent, 4);\n\n    // Mana bar\n    ctx.fillStyle = '#000080';\n    ctx.fillRect(playerX - barWidth/2, playerY - 28, barWidth, 4);\n    ctx.fillStyle = '#0080FF';\n    const manaPercent = gameState.selectedCharacter.mana / gameState.selectedCharacter.maxMana;\n    ctx.fillRect(playerX - barWidth/2, playerY - 28, barWidth * manaPercent, 4);\n\n    // UI Panel\n    drawUI(ctx, canvas);\n  };\n\n  const drawUI = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    if (!gameState.selectedCharacter) return;\n\n    // Bottom UI panel\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.fillRect(0, canvas.height - 120, canvas.width, 120);\n\n    // Player stats\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`${gameState.selectedCharacter.name} - Lv.${gameState.selectedCharacter.level}`, 20, canvas.height - 95);\n    ctx.fillText(`HP: ${gameState.selectedCharacter.health}/${gameState.selectedCharacter.maxHealth}`, 20, canvas.height - 75);\n    ctx.fillText(`MP: ${gameState.selectedCharacter.mana}/${gameState.selectedCharacter.maxMana}`, 20, canvas.height - 55);\n    ctx.fillText(`Gold: ${gameState.selectedCharacter.gold}`, 20, canvas.height - 35);\n    ctx.fillText(`EXP: ${gameState.selectedCharacter.experience}/${gameState.selectedCharacter.level * 100}`, 20, canvas.height - 15);\n\n    // Online players count\n    const onlineCount = onlinePlayers.filter(p => p.isOnline).length;\n    ctx.fillStyle = '#00FF00';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`🌐 Online: ${onlineCount} players`, canvas.width - 20, canvas.height - 95);\n\n    // Chat messages\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'left';\n    gameState.chatMessages.slice(-5).forEach((msg, index) => {\n      const channelColors = {\n        global: '#FFFFFF',\n        party: '#00FF00',\n        guild: '#FFD700',\n        whisper: '#FF69B4'\n      };\n      \n      ctx.fillStyle = channelColors[msg.channel];\n      const y = canvas.height - 95 + index * 15;\n      ctx.fillText(`[${msg.channel.toUpperCase()}] ${msg.player}: ${msg.message}`, 200, y);\n    });\n\n    // Controls\n    ctx.fillStyle = '#CCCCCC';\n    ctx.font = '10px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('WASD: Move | I: Inventory | Enter: Chat | ESC: Menu', canvas.width / 2, canvas.height - 5);\n  };\n\n  // Click handling\n  const handleCanvasClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    if (gameState.currentScene === 'characterSelect') {\n      // Handle class selection\n      const classes = Object.keys(characterClasses);\n      classes.forEach((className, index) => {\n        const cardX = 50 + (index % 2) * 280;\n        const cardY = 150 + Math.floor(index / 2) * 120;\n\n        if (x >= cardX && x <= cardX + 250 && y >= cardY && y <= cardY + 100) {\n          const characterName = `Hero_${Math.floor(Math.random() * 1000)}`;\n          createCharacter(characterName, className as keyof typeof characterClasses);\n        }\n      });\n    }\n  }, [gameState.currentScene]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    switch (gameState.currentScene) {\n      case 'characterSelect':\n        drawCharacterSelect(ctx, canvas);\n        break;\n      case 'world':\n        drawWorld(ctx, canvas);\n        break;\n    }\n  }, [gameState]);\n\n  // Game loop\n  useEffect(() => {\n    const gameLoop = () => {\n      draw();\n      setFrameCount(prev => prev + 1);\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    };\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n    };\n  }, [draw]);\n\n  // Event listeners\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      background: '#0a0a0a',\n      borderRadius: '12px',\n      padding: '16px',\n      border: '2px solid #2d3748',\n      maxHeight: '500px',\n      overflowY: 'auto',\n      overflowX: 'auto'\n    }}>\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={400}\n        style={{\n          border: '2px solid #4a5568',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          maxWidth: '100%',\n          height: 'auto'\n        }}\n        onClick={handleCanvasClick}\n        tabIndex={0}\n      />\n      \n      <div style={{\n        marginTop: '12px',\n        color: '#ffffff',\n        fontSize: '14px',\n        textAlign: 'center',\n        maxWidth: '600px',\n      }}>\n        <p>🌟 <strong>MMO RPG Adventure</strong></p>\n        <p>\n          {gameState.currentScene === 'characterSelect' && '클래스를 선택해서 모험을 시작하세요!'}\n          {gameState.currentScene === 'world' && 'WASD로 이동하며 다른 플레이어들과 함께 모험하세요!'}\n        </p>\n        {gameState.selectedCharacter && (\n          <p>\n            {gameState.selectedCharacter.name} | Level {gameState.selectedCharacter.level} | \n            {characterClasses[gameState.selectedCharacter.class].icon} {gameState.selectedCharacter.class}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}