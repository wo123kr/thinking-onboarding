{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CompleteGameSystem=_ref=>{let{onAction,playerStats,setPlayerStats,currentUser}=_ref;const canvasRef=useRef(null);const gameLoopRef=useRef();const[frameCount,setFrameCount]=useState(0);// Player persistent data\nconst[playerData,setPlayerData]=useState({id:currentUser.user_id,name:\"Hero\",level:1,experience:0,gold:1000,gems:50,energy:100,maxEnergy:100,unlockedStages:1,inventory:[{id:'sword1',name:'Iron Sword',type:'weapon',rarity:'common',quantity:1,stats:{attack:10},description:'A basic iron sword',price:100,sellPrice:50},{id:'potion1',name:'Health Potion',type:'consumable',rarity:'common',quantity:5,stats:{heal:50},description:'Restores health',price:25,sellPrice:10}],completedStages:[],achievements:[],totalPlayTime:0,lastLogin:new Date().toISOString()});// Game state\nconst[gameState,setGameState]=useState({currentScene:'lobby',selectedStage:null,battleState:{wave:1,lives:20,score:0,isWaveActive:false,towers:[],enemies:[],projectiles:[],waveProgress:0,battleTime:0,totalEnemies:0,enemiesSpawned:0,nextEnemySpawn:0},stageResults:null,cameraX:0,cameraY:0,selectedTower:null,selectedTowerType:null,isPaused:false,showUpgradeMenu:false,hoverPosition:null,shopCategory:'tower',selectedShopItem:null,inventoryPage:0});// Stage definitions\nconst stageDefinitions=[{id:1,name:\"Green Fields\",difficulty:'Easy',energyCost:10,recommendedLevel:1,rewards:[{type:'gold',amount:100},{type:'exp',amount:50}],isUnlocked:true,path:[{x:0,y:200},{x:150,y:200},{x:150,y:100},{x:300,y:100},{x:300,y:300},{x:600,y:300}],enemies:[{enemies:[],spawnDelay:60}],background:'#2d5016'},{id:2,name:\"Dark Forest\",difficulty:'Normal',energyCost:15,recommendedLevel:3,rewards:[{type:'gold',amount:200},{type:'exp',amount:80},{type:'gem',amount:5}],isUnlocked:false,path:[{x:0,y:150},{x:100,y:150},{x:100,y:50},{x:250,y:50},{x:250,y:250},{x:400,y:250},{x:400,y:100},{x:600,y:100}],enemies:[{enemies:[],spawnDelay:50}],background:'#1a3d1a'},{id:3,name:\"Ancient Ruins\",difficulty:'Hard',energyCost:20,recommendedLevel:5,rewards:[{type:'gold',amount:350},{type:'exp',amount:120},{type:'gem',amount:10}],isUnlocked:false,path:[{x:0,y:200},{x:80,y:200},{x:80,y:80},{x:200,y:80},{x:200,y:320},{x:320,y:320},{x:320,y:120},{x:500,y:120},{x:500,y:280},{x:600,y:280}],enemies:[{enemies:[],spawnDelay:40}],background:'#4a4a2a'},{id:4,name:\"Dragon's Lair\",difficulty:'Expert',energyCost:25,recommendedLevel:8,rewards:[{type:'gold',amount:500},{type:'exp',amount:200},{type:'gem',amount:20}],isUnlocked:false,path:[{x:0,y:200},{x:150,y:200},{x:150,y:100},{x:450,y:100},{x:450,y:300},{x:600,y:300}],enemies:[{enemies:[],spawnDelay:35}],background:'#5d1a1a'},{id:5,name:\"Demon Realm\",difficulty:'Hell',energyCost:30,recommendedLevel:12,rewards:[{type:'gold',amount:1000},{type:'exp',amount:400},{type:'gem',amount:50}],isUnlocked:false,path:[{x:0,y:200},{x:100,y:200},{x:200,y:200},{x:300,y:200},{x:400,y:200},{x:500,y:200},{x:600,y:200}],enemies:[{enemies:[],spawnDelay:30}],background:'#2d0d0d'}];// Tower types\nconst towerTypes={'archer':{cost:80,damage:25,range:120,speed:30,color:'#8B4513',icon:'🏹',description:'Fast shooting archer tower',upgradeMultiplier:1.5,effects:[]},'cannon':{cost:150,damage:60,range:100,speed:60,color:'#696969',icon:'💣',description:'Heavy damage explosive cannon',upgradeMultiplier:1.6,effects:['splash']},'magic':{cost:220,damage:40,range:140,speed:40,color:'#9400D3',icon:'✨',description:'Magic tower with penetration',upgradeMultiplier:1.7,effects:['penetrate']},'ice':{cost:180,damage:20,range:110,speed:35,color:'#00BFFF',icon:'❄️',description:'Slows enemies and deals damage',upgradeMultiplier:1.4,effects:['slow']},'lightning':{cost:300,damage:80,range:150,speed:50,color:'#FFD700',icon:'⚡',description:'Chain lightning that hits multiple enemies',upgradeMultiplier:1.8,effects:['chain']}};// Enemy types\nconst enemyTypes={'goblin':{health:80,speed:2,reward:15,color:'#228B22',icon:'👹',armor:0,size:12,description:'Fast and weak'},'orc':{health:150,speed:1.5,reward:25,color:'#8B4513',icon:'🗡️',armor:2,size:14,description:'Balanced warrior'},'troll':{health:300,speed:1,reward:40,color:'#2F4F4F',icon:'🏔️',armor:5,size:16,description:'Heavily armored'},'dragon':{health:500,speed:0.8,reward:80,color:'#DC143C',icon:'🐉',armor:8,size:20,description:'Flying boss'},'demon':{health:800,speed:0.6,reward:150,color:'#8B0000',icon:'😈',armor:12,size:24,description:'Ultimate boss'}};// Shop items\nconst shopItems=[// Tower upgrades\n{id:'damage_boost',name:'Damage Boost Potion',type:'tower_upgrade',price:150,currency:'gold',description:'Increases tower damage by 25% for next battle',effect:{type:'damage_boost',value:0.25,duration:1},category:'tower'},{id:'range_extender',name:'Range Extender',type:'tower_upgrade',price:200,currency:'gold',description:'Increases tower range by 20% for next battle',effect:{type:'range_boost',value:0.2,duration:1},category:'tower'},{id:'speed_upgrade',name:'Attack Speed Boost',type:'tower_upgrade',price:175,currency:'gold',description:'Increases tower attack speed by 30% for next battle',effect:{type:'speed_boost',value:0.3,duration:1},category:'tower'},// Utility items\n{id:'extra_life',name:'Extra Life',type:'consumable',price:100,currency:'gold',description:'Start next battle with +5 lives',effect:{type:'extra_lives',value:5},category:'utility'},{id:'starting_gold',name:'Treasure Chest',type:'consumable',price:80,currency:'gold',description:'Start next battle with +200 gold',effect:{type:'starting_gold',value:200},category:'utility'},{id:'energy_refill',name:'Energy Potion',type:'consumable',price:5,currency:'gem',description:'Instantly restore 20 energy',effect:{type:'restore_energy',value:20},category:'utility'},// Premium items\n{id:'tower_blueprint_laser',name:'Laser Tower Blueprint',type:'blueprint',price:50,currency:'gem',description:'Unlocks powerful Laser Tower (Permanent)',effect:{type:'unlock_tower',value:'laser'},requirements:{level:5,completedStages:3},category:'premium'},{id:'double_exp',name:'Experience Multiplier',type:'consumable',price:20,currency:'gem',description:'Double EXP gain for 3 battles',effect:{type:'exp_multiplier',value:2,duration:3},category:'premium'},{id:'auto_upgrade',name:'Auto-Upgrade Kit',type:'consumable',price:30,currency:'gem',description:'Automatically upgrade first tower placed to level 2',effect:{type:'auto_upgrade',value:1},category:'premium'}];// Initialize session\nuseEffect(()=>{onAction('session_started',{player_id:playerData.id,player_level:playerData.level,total_gold:playerData.gold,unlocked_stages:playerData.unlockedStages,login_streak:1});},[]);// Energy regeneration\nuseEffect(()=>{const energyRegen=setInterval(()=>{setPlayerData(prev=>({...prev,energy:Math.min(prev.maxEnergy,prev.energy+1)}));},60000);// 1 energy per minute\nreturn()=>clearInterval(energyRegen);},[]);// Level up check\nuseEffect(()=>{const expNeeded=playerData.level*100;if(playerData.experience>=expNeeded){const newLevel=playerData.level+1;setPlayerData(prev=>({...prev,level:newLevel,experience:prev.experience-expNeeded,maxEnergy:prev.maxEnergy+10}));onAction('player_level_up',{player_id:playerData.id,old_level:playerData.level,new_level:newLevel,new_max_energy:playerData.maxEnergy+10,total_playtime:playerData.totalPlayTime});}},[playerData.experience,playerData.level,playerData.maxEnergy,playerData.totalPlayTime,playerData.id,onAction]);// Keyboard handling\nconst handleKeyDown=useCallback(e=>{// Prevent page scrolling\nif(['ArrowUp','ArrowDown','ArrowLeft','ArrowRight','w','a','s','d',' ','Enter','Escape'].includes(e.key)){e.preventDefault();e.stopPropagation();}switch(e.key.toLowerCase()){case'escape':if(gameState.currentScene==='battle'){pauseBattle();}else if(gameState.currentScene!=='lobby'){setGameState(prev=>({...prev,currentScene:'lobby'}));}break;case' ':if(gameState.currentScene==='battle'){startWave();}break;case'1':case'2':case'3':case'4':case'5':if(gameState.currentScene==='battle'){const towerIndex=parseInt(e.key)-1;const towerTypeKeys=Object.keys(towerTypes);if(towerIndex<towerTypeKeys.length){setGameState(prev=>({...prev,selectedTowerType:towerTypeKeys[towerIndex],selectedTower:null}));}}break;}},[gameState.currentScene]);// Mouse/Click handling\nconst handleCanvasClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;switch(gameState.currentScene){case'lobby':handleLobbyClick(x,y);break;case'dungeon':handleDungeonClick(x,y);break;case'battle':handleBattleClick(x,y);break;case'shop':handleShopClick(x,y);break;case'inventory':handleInventoryClick(x,y);break;case'stageComplete':case'stageFailed':handleResultsClick(x,y);break;}},[gameState.currentScene]);const handleLobbyClick=(x,y)=>{// Dungeon button\nif(x>=250&&x<=350&&y>=200&&y<=250){setGameState(prev=>({...prev,currentScene:'dungeon'}));onAction('menu_navigation',{player_id:playerData.id,from_scene:'lobby',to_scene:'dungeon',player_level:playerData.level});}// Shop button\nif(x>=100&&x<=200&&y>=300&&y<=350){setGameState(prev=>({...prev,currentScene:'shop'}));onAction('menu_navigation',{player_id:playerData.id,from_scene:'lobby',to_scene:'shop',player_level:playerData.level});}// Inventory button\nif(x>=400&&x<=500&&y>=300&&y<=350){setGameState(prev=>({...prev,currentScene:'inventory'}));onAction('menu_navigation',{player_id:playerData.id,from_scene:'lobby',to_scene:'inventory',player_level:playerData.level});}};const handleDungeonClick=(x,y)=>{// Stage selection\nstageDefinitions.forEach((stage,index)=>{const stageX=50+index%3*200;const stageY=100+Math.floor(index/3)*150;if(x>=stageX&&x<=stageX+150&&y>=stageY&&y<=stageY+100){if(stage.id<=playerData.unlockedStages&&playerData.energy>=stage.energyCost){enterStage(stage.id);}}});// Back button\nif(x>=50&&x<=150&&y>=350&&y<=380){setGameState(prev=>({...prev,currentScene:'lobby'}));}};const enterStage=stageId=>{const stage=stageDefinitions.find(s=>s.id===stageId);if(!stage)return;// Consume energy\nsetPlayerData(prev=>({...prev,energy:prev.energy-stage.energyCost}));// Initialize battle\nsetGameState(prev=>({...prev,currentScene:'battle',selectedStage:stageId,battleState:{wave:1,lives:20,score:0,isWaveActive:false,towers:[],enemies:[],projectiles:[],waveProgress:0,battleTime:0,totalEnemies:8+1*2,// 8 base + wave * 2\nenemiesSpawned:0,nextEnemySpawn:0},selectedTower:null,selectedTowerType:null,isPaused:false,showUpgradeMenu:false}));onAction('stage_entered',{player_id:playerData.id,stage_id:stageId,stage_name:stage.name,energy_cost:stage.energyCost,remaining_energy:playerData.energy-stage.energyCost,player_level:playerData.level,recommended_level:stage.recommendedLevel});};const handleBattleClick=(x,y)=>{// UI area (bottom 80px)\nif(y>320)return;if(gameState.selectedTowerType){// Place tower\nif(canPlaceTower(x,y)){placeTower(x,y,gameState.selectedTowerType);}}else{// Select existing tower\nconst clickedTower=gameState.battleState.towers.find(tower=>{const distance=Math.sqrt((x-tower.x)**2+(y-tower.y)**2);return distance<25;});if(clickedTower){setGameState(prev=>({...prev,selectedTower:clickedTower,selectedTowerType:null}));}}};const canPlaceTower=(x,y)=>{if(!gameState.selectedStage)return false;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return false;// Check distance from path\nfor(const point of stage.path){const distance=Math.sqrt((x-point.x)**2+(y-point.y)**2);if(distance<40)return false;}// Check distance from other towers\nfor(const tower of gameState.battleState.towers){const distance=Math.sqrt((x-tower.x)**2+(y-tower.y)**2);if(distance<50)return false;}return x>25&&x<575&&y>25&&y<295;};const placeTower=(x,y,type)=>{const towerConfig=towerTypes[type];if(playerData.gold<towerConfig.cost)return;const newTower={id:`tower_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,x,y,type,level:1,damage:towerConfig.damage,range:towerConfig.range,attackSpeed:towerConfig.speed,lastAttack:0,cost:towerConfig.cost,kills:0,upgradeCost:Math.floor(towerConfig.cost*towerConfig.upgradeMultiplier),sellValue:Math.floor(towerConfig.cost*0.7),experience:0};setPlayerData(prev=>({...prev,gold:prev.gold-towerConfig.cost}));setGameState(prev=>({...prev,battleState:{...prev.battleState,towers:[...prev.battleState.towers,newTower]},selectedTowerType:null}));onAction('tower_placed',{player_id:playerData.id,stage_id:gameState.selectedStage,tower_type:type,tower_cost:towerConfig.cost,position_x:x,position_y:y,remaining_gold:playerData.gold-towerConfig.cost,wave_number:gameState.battleState.wave});};const startWave=()=>{if(gameState.battleState.isWaveActive)return;setGameState(prev=>({...prev,battleState:{...prev.battleState,isWaveActive:true,waveProgress:0}}));onAction('wave_started',{player_id:playerData.id,stage_id:gameState.selectedStage,wave_number:gameState.battleState.wave,towers_count:gameState.battleState.towers.length,current_gold:playerData.gold});// Spawn enemies\nspawnEnemyWave();};const spawnEnemyWave=()=>{if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return;const enemyCount=8+gameState.battleState.wave*2;const enemyTypeKeys=Object.keys(enemyTypes);setGameState(prev=>({...prev,battleState:{...prev.battleState,totalEnemies:enemyCount,enemiesSpawned:0,nextEnemySpawn:frameCount+60// Start spawning in 1 second\n}}));};const spawnSingleEnemy=()=>{if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return;const enemyTypeKeys=Object.keys(enemyTypes);const waveTypeIndex=Math.min(gameState.battleState.wave-1,enemyTypeKeys.length-1);const possibleTypes=enemyTypeKeys.slice(0,waveTypeIndex+1);const enemyType=possibleTypes[Math.floor(Math.random()*possibleTypes.length)];const enemyConfig=enemyTypes[enemyType];const newEnemy={id:`enemy_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,x:stage.path[0].x,y:stage.path[0].y,health:enemyConfig.health*gameState.selectedStage,maxHealth:enemyConfig.health*gameState.selectedStage,speed:enemyConfig.speed,type:enemyType,pathIndex:0,alive:true,armor:enemyConfig.armor,effects:[],slowDuration:0,reward:[{type:'gold',amount:enemyConfig.reward},{type:'exp',amount:enemyConfig.reward/2}]};setGameState(prev=>({...prev,battleState:{...prev.battleState,enemies:[...prev.battleState.enemies,newEnemy],enemiesSpawned:prev.battleState.enemiesSpawned+1,nextEnemySpawn:frameCount+Math.max(30,80-gameState.battleState.wave*5)}}));onAction('enemy_spawned',{player_id:playerData.id,stage_id:gameState.selectedStage,enemy_type:enemyType,enemy_id:newEnemy.id,wave_number:gameState.battleState.wave,enemies_spawned:gameState.battleState.enemiesSpawned+1,total_enemies:gameState.battleState.totalEnemies});};const pauseBattle=()=>{onAction('battle_paused',{player_id:playerData.id,stage_id:gameState.selectedStage,wave_number:gameState.battleState.wave,battle_time:gameState.battleState.battleTime,current_score:gameState.battleState.score});};const completeStage=victory=>{var _rewards$find,_rewards$find2;if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return;// Stop all battle updates\nsetGameState(prev=>({...prev,battleState:{...prev.battleState,isWaveActive:false},isPaused:true}));const starsEarned=victory?calculateStars():0;const rewards=victory?stage.rewards:[];// Apply rewards\nif(victory){let goldGained=0;let expGained=0;let gemsGained=0;rewards.forEach(reward=>{switch(reward.type){case'gold':goldGained+=reward.amount;break;case'exp':expGained+=reward.amount;break;case'gem':gemsGained+=reward.amount;break;}});setPlayerData(prev=>({...prev,gold:prev.gold+goldGained,experience:prev.experience+expGained,gems:prev.gems+gemsGained,unlockedStages:Math.max(prev.unlockedStages,gameState.selectedStage+1)}));// Record completion\nconst completion={stageId:gameState.selectedStage,bestScore:gameState.battleState.score,completionTime:gameState.battleState.battleTime,starsEarned,completedAt:new Date().toISOString()};setPlayerData(prev=>{const existingIndex=prev.completedStages.findIndex(c=>c.stageId===gameState.selectedStage);const newCompletedStages=[...prev.completedStages];if(existingIndex>=0){newCompletedStages[existingIndex]=completion;}else{newCompletedStages.push(completion);}return{...prev,completedStages:newCompletedStages};});}else{// On defeat, refund some energy (50%)\nconst energyRefund=Math.floor(stage.energyCost*0.5);setPlayerData(prev=>({...prev,energy:Math.min(prev.maxEnergy,prev.energy+energyRefund)}));}const results={victory,score:gameState.battleState.score,starsEarned,timeBonus:victory?Math.max(0,300-gameState.battleState.battleTime):0,rewards:victory?rewards:[{type:'gold',amount:Math.floor(gameState.battleState.score/100)}],// Small consolation reward\nnewUnlocks:victory&&gameState.selectedStage===playerData.unlockedStages?[`Stage ${gameState.selectedStage+1} Unlocked!`]:[]};// Show results screen with a delay\nsetTimeout(()=>{setGameState(prev=>({...prev,currentScene:victory?'stageComplete':'stageFailed',stageResults:results}));},1000);onAction(victory?'stage_victory':'stage_defeat',{player_id:playerData.id,stage_id:gameState.selectedStage,stage_name:stage.name,final_score:gameState.battleState.score,stars_earned:starsEarned,battle_time:gameState.battleState.battleTime,towers_built:gameState.battleState.towers.length,waves_completed:gameState.battleState.wave,enemies_defeated:gameState.battleState.towers.reduce((sum,tower)=>sum+tower.kills,0),gold_gained:victory?((_rewards$find=rewards.find(r=>r.type==='gold'))===null||_rewards$find===void 0?void 0:_rewards$find.amount)||0:Math.floor(gameState.battleState.score/100),exp_gained:victory?((_rewards$find2=rewards.find(r=>r.type==='exp'))===null||_rewards$find2===void 0?void 0:_rewards$find2.amount)||0:0,new_unlocks:results.newUnlocks,failure_reason:victory?null:gameState.battleState.lives<=0?'lives_depleted':'unknown'});};const calculateStars=()=>{const baseScore=gameState.battleState.score;const timeBonus=Math.max(0,300-gameState.battleState.battleTime);const livesBonus=gameState.battleState.lives*10;const totalScore=baseScore+timeBonus+livesBonus;if(totalScore>=1000)return 3;if(totalScore>=500)return 2;return 1;};const handleShopClick=(x,y)=>{// Category tabs\nconst categories=['tower','utility','premium'];categories.forEach((category,index)=>{const tabX=80+index*150;if(x>=tabX&&x<=tabX+140&&y>=50&&y<=80){setGameState(prev=>({...prev,shopCategory:category}));}});// Shop items\nconst categoryItems=shopItems.filter(item=>item.category===gameState.shopCategory);categoryItems.forEach((item,index)=>{const itemX=80+index%2*220;const itemY=100+Math.floor(index/2)*100;if(x>=itemX&&x<=itemX+200&&y>=itemY&&y<=itemY+90){purchaseItem(item);}});// Back button\nif(x>=50&&x<=150&&y>=350&&y<=380){setGameState(prev=>({...prev,currentScene:'lobby'}));}};const handleInventoryClick=(x,y)=>{// Inventory items\nconst itemsPerRow=5;const startY=100;playerData.inventory.forEach((item,index)=>{const itemX=50+index%itemsPerRow*100;const itemY=startY+Math.floor(index/itemsPerRow)*80;if(x>=itemX&&x<=itemX+80&&y>=itemY&&y<=itemY+60){useInventoryItem(item);}});// Back button\nif(x>=50&&x<=150&&y>=350&&y<=380){setGameState(prev=>({...prev,currentScene:'lobby'}));}};const purchaseItem=item=>{// Check requirements\nif(item.requirements){if(item.requirements.level&&playerData.level<item.requirements.level){onAction('purchase_failed',{player_id:playerData.id,item_id:item.id,reason:'level_requirement',required_level:item.requirements.level,current_level:playerData.level});return;}if(item.requirements.completedStages&&playerData.completedStages.length<item.requirements.completedStages){onAction('purchase_failed',{player_id:playerData.id,item_id:item.id,reason:'stage_requirement',required_stages:item.requirements.completedStages,completed_stages:playerData.completedStages.length});return;}}// Check currency\nconst hasEnoughCurrency=item.currency==='gold'?playerData.gold>=item.price:playerData.gems>=item.price;if(!hasEnoughCurrency){onAction('purchase_failed',{player_id:playerData.id,item_id:item.id,reason:'insufficient_currency',required_amount:item.price,current_amount:item.currency==='gold'?playerData.gold:playerData.gems,currency:item.currency});return;}// Process purchase\nif(item.currency==='gold'){setPlayerData(prev=>({...prev,gold:prev.gold-item.price}));}else{setPlayerData(prev=>({...prev,gems:prev.gems-item.price}));}// Add to inventory or apply effect\nif(item.type==='consumable'||item.type==='tower_upgrade'){const inventoryItem={id:item.id,name:item.name,type:item.type,rarity:'common',quantity:1,stats:item.effect,description:item.description,price:item.price,sellPrice:Math.floor(item.price*0.5)};setPlayerData(prev=>{const existingIndex=prev.inventory.findIndex(i=>i.id===item.id);if(existingIndex>=0){const newInventory=[...prev.inventory];newInventory[existingIndex].quantity+=1;return{...prev,inventory:newInventory};}else{return{...prev,inventory:[...prev.inventory,inventoryItem]};}});}onAction('item_purchased',{player_id:playerData.id,item_id:item.id,item_name:item.name,price:item.price,currency:item.currency,remaining_gold:item.currency==='gold'?playerData.gold-item.price:playerData.gold,remaining_gems:item.currency==='gem'?playerData.gems-item.price:playerData.gems});};const useInventoryItem=item=>{var _item$stats;if(item.quantity<=0)return;// Apply item effect based on type\nswitch((_item$stats=item.stats)===null||_item$stats===void 0?void 0:_item$stats.type){case'restore_energy':setPlayerData(prev=>({...prev,energy:Math.min(prev.maxEnergy,prev.energy+item.stats.value)}));break;// Other consumable effects would be applied in battle\n}// Reduce quantity\nif(item.type==='consumable'){setPlayerData(prev=>({...prev,inventory:prev.inventory.map(i=>i.id===item.id?{...i,quantity:i.quantity-1}:i).filter(i=>i.quantity>0)}));}onAction('item_used',{player_id:playerData.id,item_id:item.id,item_name:item.name,effect:item.stats});};const handleResultsClick=(x,y)=>{var _gameState$stageResul;// Continue button\nif(x>=200&&x<=400&&y>=300&&y<=350){returnToLobby();}// Retry button (only for failures)\nif(!((_gameState$stageResul=gameState.stageResults)!==null&&_gameState$stageResul!==void 0&&_gameState$stageResul.victory)&&x>=100&&x<=200&&y>=320&&y<=350){retryStage();}};const returnToLobby=()=>{var _gameState$stageResul2;setGameState(prev=>({...prev,currentScene:'lobby',stageResults:null,selectedStage:null,battleState:{wave:1,lives:20,score:0,isWaveActive:false,towers:[],enemies:[],projectiles:[],waveProgress:0,battleTime:0,totalEnemies:0,enemiesSpawned:0,nextEnemySpawn:0},selectedTower:null,selectedTowerType:null,isPaused:false,showUpgradeMenu:false}));onAction('returned_to_lobby',{player_id:playerData.id,from_scene:(_gameState$stageResul2=gameState.stageResults)!==null&&_gameState$stageResul2!==void 0&&_gameState$stageResul2.victory?'stage_complete':'stage_failed',player_level:playerData.level,total_gold:playerData.gold,total_energy:playerData.energy});};const retryStage=()=>{if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage||playerData.energy<stage.energyCost)return;// Consume energy again\nsetPlayerData(prev=>({...prev,energy:prev.energy-stage.energyCost}));// Reset battle state\nsetGameState(prev=>({...prev,currentScene:'battle',stageResults:null,battleState:{wave:1,lives:20,score:0,isWaveActive:false,towers:[],enemies:[],projectiles:[],waveProgress:0,battleTime:0,totalEnemies:8+1*2,enemiesSpawned:0,nextEnemySpawn:0},selectedTower:null,selectedTowerType:null,isPaused:false,showUpgradeMenu:false}));onAction('stage_retried',{player_id:playerData.id,stage_id:gameState.selectedStage,stage_name:stage.name,energy_cost:stage.energyCost,remaining_energy:playerData.energy-stage.energyCost});};// Game loop updates\nconst updateBattle=useCallback(()=>{if(gameState.currentScene!=='battle'||gameState.isPaused)return;// Update battle time\nsetGameState(prev=>({...prev,battleState:{...prev.battleState,battleTime:prev.battleState.battleTime+1}}));// Spawn enemies if wave is active\nif(gameState.battleState.isWaveActive&&frameCount>=gameState.battleState.nextEnemySpawn&&gameState.battleState.enemiesSpawned<gameState.battleState.totalEnemies){spawnSingleEnemy();}// Update enemies\nupdateEnemies();// Update towers\nupdateTowers();// Update projectiles\nupdateProjectiles();// Check win/lose conditions\ncheckBattleEnd();},[gameState.currentScene,gameState.battleState.isWaveActive,gameState.isPaused,frameCount]);const updateEnemies=()=>{if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return;setGameState(prev=>({...prev,battleState:{...prev.battleState,enemies:prev.battleState.enemies.map(enemy=>{if(!enemy.alive)return enemy;// Update slow effect\nlet currentSpeed=enemy.speed;if(enemy.slowDuration>0){currentSpeed*=0.5;// 50% speed reduction\nenemy.slowDuration--;}const currentTarget=stage.path[enemy.pathIndex+1];if(currentTarget){const dx=currentTarget.x-enemy.x;const dy=currentTarget.y-enemy.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<5){enemy.pathIndex++;if(enemy.pathIndex>=stage.path.length-1){// Enemy reached end\nsetGameState(prev2=>({...prev2,battleState:{...prev2.battleState,lives:prev2.battleState.lives-1}}));onAction('life_lost',{player_id:playerData.id,stage_id:gameState.selectedStage,enemy_type:enemy.type,remaining_lives:gameState.battleState.lives-1,wave_number:gameState.battleState.wave});return{...enemy,alive:false};}}else{const moveX=dx/distance*currentSpeed;const moveY=dy/distance*currentSpeed;enemy.x+=moveX;enemy.y+=moveY;}}return enemy;}).filter(enemy=>enemy.alive||enemy.pathIndex<stage.path.length-1)}}));};const updateProjectiles=()=>{setGameState(prev=>({...prev,battleState:{...prev.battleState,projectiles:prev.battleState.projectiles.filter(proj=>{// Update trail\nproj.trail.push({x:proj.x,y:proj.y});if(proj.trail.length>5){proj.trail.shift();}// Move projectile towards target\nconst dx=proj.targetX-proj.x;const dy=proj.targetY-proj.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<10){// Hit target - apply damage\nhitTarget(proj);return false;// Remove projectile\n}// Move projectile\nconst moveX=dx/distance*proj.speed;const moveY=dy/distance*proj.speed;proj.x+=moveX;proj.y+=moveY;return true;// Keep projectile\n})}}));};const hitTarget=projectile=>{const targetEnemy=gameState.battleState.enemies.find(e=>e.id===projectile.targetId);if(!targetEnemy||!targetEnemy.alive)return;const actualDamage=Math.max(1,projectile.damage-targetEnemy.armor);setGameState(prev=>({...prev,battleState:{...prev.battleState,enemies:prev.battleState.enemies.map(enemy=>{if(enemy.id===targetEnemy.id){const newHealth=Math.max(0,enemy.health-actualDamage);const killed=newHealth<=0;// Apply tower effects\nif(projectile.effects.includes('slow')){enemy.slowDuration=180;// 3 seconds at 60fps\n}if(killed){var _enemy$reward$find,_enemy$reward$find2;// Apply rewards\nconst goldGain=((_enemy$reward$find=enemy.reward.find(r=>r.type==='gold'))===null||_enemy$reward$find===void 0?void 0:_enemy$reward$find.amount)||0;const expGain=((_enemy$reward$find2=enemy.reward.find(r=>r.type==='exp'))===null||_enemy$reward$find2===void 0?void 0:_enemy$reward$find2.amount)||0;setPlayerData(prev2=>({...prev2,gold:prev2.gold+goldGain,experience:prev2.experience+expGain}));setGameState(prev2=>({...prev2,battleState:{...prev2.battleState,score:prev2.battleState.score+goldGain*10,towers:prev2.battleState.towers.map(t=>t.id===projectile.towerId?{...t,kills:t.kills+1,experience:t.experience+expGain}:t)}}));onAction('enemy_defeated',{player_id:playerData.id,stage_id:gameState.selectedStage,enemy_type:enemy.type,enemy_id:enemy.id,tower_type:projectile.type,tower_id:projectile.towerId,damage_dealt:actualDamage,gold_gained:goldGain,exp_gained:expGain,wave_number:gameState.battleState.wave});return{...enemy,health:0,alive:false};}else{onAction('enemy_damaged',{player_id:playerData.id,stage_id:gameState.selectedStage,enemy_type:enemy.type,enemy_id:enemy.id,tower_type:projectile.type,damage_dealt:actualDamage,enemy_health_remaining:newHealth,wave_number:gameState.battleState.wave});return{...enemy,health:newHealth};}}// Chain lightning effect\nif(projectile.effects.includes('chain')&&enemy.id!==targetEnemy.id&&enemy.alive){const distance=Math.sqrt((enemy.x-targetEnemy.x)**2+(enemy.y-targetEnemy.y)**2);if(distance<80){const chainDamage=Math.floor(projectile.damage*0.6);const actualChainDamage=Math.max(1,chainDamage-enemy.armor);const newHealth=Math.max(0,enemy.health-actualChainDamage);return{...enemy,health:newHealth,alive:newHealth>0};}}return enemy;})}}));// Splash damage for cannon\nif(projectile.effects.includes('splash')){const splashTargets=gameState.battleState.enemies.filter(enemy=>{if(enemy.id===targetEnemy.id||!enemy.alive)return false;const distance=Math.sqrt((enemy.x-targetEnemy.x)**2+(enemy.y-targetEnemy.y)**2);return distance<60;});splashTargets.forEach(enemy=>{const splashDamage=Math.floor(projectile.damage*0.5);const actualSplashDamage=Math.max(1,splashDamage-enemy.armor);setGameState(prev=>({...prev,battleState:{...prev.battleState,enemies:prev.battleState.enemies.map(e=>e.id===enemy.id?{...e,health:Math.max(0,e.health-actualSplashDamage),alive:e.health-actualSplashDamage>0}:e)}}));});}};const updateTowers=()=>{gameState.battleState.towers.forEach(tower=>{if(frameCount-tower.lastAttack<tower.attackSpeed)return;const enemiesInRange=gameState.battleState.enemies.filter(enemy=>{if(!enemy.alive)return false;const distance=Math.sqrt((enemy.x-tower.x)**2+(enemy.y-tower.y)**2);return distance<=tower.range;});if(enemiesInRange.length>0){const target=enemiesInRange.reduce((best,current)=>current.pathIndex>best.pathIndex?current:best);// Create projectile\nconst newProjectile={id:`proj_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,x:tower.x,y:tower.y,targetX:target.x,targetY:target.y,targetId:target.id,speed:8,damage:tower.damage,type:tower.type,towerId:tower.id,effects:towerTypes[tower.type].effects,trail:[]};setGameState(prev=>({...prev,battleState:{...prev.battleState,projectiles:[...prev.battleState.projectiles,newProjectile],towers:prev.battleState.towers.map(t=>t.id===tower.id?{...t,lastAttack:frameCount}:t)}}));onAction('tower_attack',{player_id:playerData.id,stage_id:gameState.selectedStage,tower_id:tower.id,tower_type:tower.type,target_enemy_id:target.id,damage:tower.damage,wave_number:gameState.battleState.wave});}});};const checkBattleEnd=()=>{if(gameState.battleState.lives<=0){completeStage(false);return;}const aliveEnemies=gameState.battleState.enemies.filter(e=>e.alive);const allEnemiesSpawned=gameState.battleState.enemiesSpawned>=gameState.battleState.totalEnemies;if(aliveEnemies.length===0&&allEnemiesSpawned&&gameState.battleState.isWaveActive){if(gameState.battleState.wave>=3){completeStage(true);}else{// Next wave\nconst nextWave=gameState.battleState.wave+1;const nextTotalEnemies=8+nextWave*2;setGameState(prev=>({...prev,battleState:{...prev.battleState,wave:nextWave,isWaveActive:false,waveProgress:0,totalEnemies:nextTotalEnemies,enemiesSpawned:0,nextEnemySpawn:0}}));// Wave completion bonus\nconst bonusGold=25+gameState.battleState.wave*15;setPlayerData(prev=>({...prev,gold:prev.gold+bonusGold}));onAction('wave_completed',{player_id:playerData.id,stage_id:gameState.selectedStage,wave_number:gameState.battleState.wave,bonus_gold:bonusGold,total_gold:playerData.gold+bonusGold,score:gameState.battleState.score,towers_count:gameState.battleState.towers.length});}}};// Drawing functions\nconst drawLobby=(ctx,canvas)=>{// Background\nctx.fillStyle='#1a1a2e';ctx.fillRect(0,0,canvas.width,canvas.height);// Title\nctx.fillStyle='#FFD700';ctx.font='bold 32px Arial';ctx.textAlign='center';ctx.fillText('🏰 TOWER DEFENSE',canvas.width/2,80);// Player info panel\nctx.fillStyle='rgba(255, 255, 255, 0.1)';ctx.fillRect(50,100,500,80);ctx.fillStyle='#FFFFFF';ctx.font='16px Arial';ctx.textAlign='left';ctx.fillText(`${playerData.name} - Level ${playerData.level}`,70,125);ctx.fillText(`Gold: ${playerData.gold} | Gems: ${playerData.gems}`,70,145);ctx.fillText(`Energy: ${playerData.energy}/${playerData.maxEnergy}`,70,165);// Experience bar\nconst expNeeded=playerData.level*100;const expPercent=playerData.experience/expNeeded;ctx.fillStyle='#444';ctx.fillRect(350,140,180,12);ctx.fillStyle='#FFD700';ctx.fillRect(350,140,180*expPercent,12);ctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.fillText(`EXP: ${playerData.experience}/${expNeeded}`,355,150);// Menu buttons\nconst buttons=[{text:'⚔️ DUNGEON',x:250,y:200,w:100,h:50},{text:'🛒 SHOP',x:100,y:300,w:100,h:50},{text:'🎒 INVENTORY',x:400,y:300,w:100,h:50}];buttons.forEach(button=>{ctx.fillStyle='rgba(74, 144, 226, 0.8)';ctx.fillRect(button.x,button.y,button.w,button.h);ctx.strokeStyle='#FFFFFF';ctx.lineWidth=2;ctx.strokeRect(button.x,button.y,button.w,button.h);ctx.fillStyle='#FFFFFF';ctx.font='bold 14px Arial';ctx.textAlign='center';ctx.fillText(button.text,button.x+button.w/2,button.y+button.h/2+5);});};const drawDungeon=(ctx,canvas)=>{// Background\nctx.fillStyle='#0f1419';ctx.fillRect(0,0,canvas.width,canvas.height);// Title\nctx.fillStyle='#FFD700';ctx.font='bold 24px Arial';ctx.textAlign='center';ctx.fillText('🗡️ DUNGEON SELECT',canvas.width/2,40);// Stage cards\nstageDefinitions.forEach((stage,index)=>{const x=50+index%3*200;const y=70+Math.floor(index/3)*120;const isUnlocked=stage.id<=playerData.unlockedStages;const hasEnergy=playerData.energy>=stage.energyCost;const canEnter=isUnlocked&&hasEnergy;// Stage card background\nctx.fillStyle=canEnter?'rgba(74, 144, 226, 0.8)':'rgba(100, 100, 100, 0.5)';ctx.fillRect(x,y,150,100);ctx.strokeStyle=canEnter?'#4a90e2':'#666';ctx.lineWidth=2;ctx.strokeRect(x,y,150,100);// Stage info\nctx.fillStyle=canEnter?'#FFFFFF':'#999';ctx.font='bold 14px Arial';ctx.textAlign='center';ctx.fillText(`Stage ${stage.id}`,x+75,y+20);ctx.font='12px Arial';ctx.fillText(stage.name,x+75,y+35);ctx.fillText(stage.difficulty,x+75,y+50);ctx.fillText(`Energy: ${stage.energyCost}`,x+75,y+65);ctx.fillText(`Lv.${stage.recommendedLevel} Rec.`,x+75,y+80);// Lock indicator\nif(!isUnlocked){ctx.fillStyle='#FF0000';ctx.font='bold 20px Arial';ctx.fillText('🔒',x+75,y+55);}// Completion stars\nconst completed=playerData.completedStages.find(c=>c.stageId===stage.id);if(completed){for(let i=0;i<completed.starsEarned;i++){ctx.fillStyle='#FFD700';ctx.font='16px Arial';ctx.fillText('⭐',x+20+i*20,y+95);}}});// Back button\nctx.fillStyle='rgba(255, 100, 100, 0.8)';ctx.fillRect(50,350,100,30);ctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='center';ctx.fillText('← BACK',100,370);};const drawBattle=(ctx,canvas)=>{if(!gameState.selectedStage)return;const stage=stageDefinitions.find(s=>s.id===gameState.selectedStage);if(!stage)return;// Background\nctx.fillStyle=stage.background;ctx.fillRect(0,0,canvas.width,320);// Draw path\nctx.strokeStyle='#8B4513';ctx.lineWidth=20;ctx.lineCap='round';ctx.lineJoin='round';ctx.beginPath();ctx.moveTo(stage.path[0].x,stage.path[0].y);stage.path.slice(1).forEach(point=>{ctx.lineTo(point.x,point.y);});ctx.stroke();ctx.strokeStyle='#DEB887';ctx.lineWidth=12;ctx.beginPath();ctx.moveTo(stage.path[0].x,stage.path[0].y);stage.path.slice(1).forEach(point=>{ctx.lineTo(point.x,point.y);});ctx.stroke();// Draw towers\ngameState.battleState.towers.forEach(tower=>{var _gameState$selectedTo;const config=towerTypes[tower.type];const isSelected=((_gameState$selectedTo=gameState.selectedTower)===null||_gameState$selectedTo===void 0?void 0:_gameState$selectedTo.id)===tower.id;// Tower base\nctx.fillStyle=isSelected?'#FFD700':'#696969';ctx.beginPath();ctx.arc(tower.x,tower.y,18,0,2*Math.PI);ctx.fill();// Tower body\nctx.fillStyle=config.color;ctx.beginPath();ctx.arc(tower.x,tower.y,14,0,2*Math.PI);ctx.fill();// Tower icon\nctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText(config.icon,tower.x,tower.y+4);// Level indicator\nctx.fillStyle='#FFD700';ctx.font='10px Arial';ctx.fillText(`Lv.${tower.level}`,tower.x,tower.y-25);// Range for selected tower\nif(isSelected){ctx.strokeStyle='rgba(255, 255, 255, 0.3)';ctx.lineWidth=2;ctx.setLineDash([5,5]);ctx.beginPath();ctx.arc(tower.x,tower.y,tower.range,0,2*Math.PI);ctx.stroke();ctx.setLineDash([]);}});// Draw enemies\ngameState.battleState.enemies.forEach(enemy=>{if(!enemy.alive)return;const config=enemyTypes[enemy.type];const size=config.size;// Enemy shadow\nctx.fillStyle='rgba(0, 0, 0, 0.3)';ctx.beginPath();ctx.ellipse(enemy.x+2,enemy.y+2,size*0.8,size*0.4,0,0,2*Math.PI);ctx.fill();// Enemy body with slow effect\nif(enemy.slowDuration>0){ctx.fillStyle='#87CEEB';// Light blue for slow effect\nctx.beginPath();ctx.arc(enemy.x,enemy.y,size+3,0,2*Math.PI);ctx.fill();}ctx.fillStyle=config.color;ctx.beginPath();ctx.arc(enemy.x,enemy.y,size,0,2*Math.PI);ctx.fill();// Enemy border\nctx.strokeStyle='#000000';ctx.lineWidth=2;ctx.stroke();// Enemy icon\nctx.fillStyle='#FFFFFF';ctx.font=`${Math.max(10,size)}px Arial`;ctx.textAlign='center';ctx.fillText(config.icon,enemy.x,enemy.y+4);// Health bar\nconst barWidth=size*1.5;const barHeight=4;const healthPercent=enemy.health/enemy.maxHealth;ctx.fillStyle='#000000';ctx.fillRect(enemy.x-barWidth/2-1,enemy.y-size-12,barWidth+2,barHeight+2);ctx.fillStyle='#FF0000';ctx.fillRect(enemy.x-barWidth/2,enemy.y-size-11,barWidth,barHeight);ctx.fillStyle=healthPercent>0.5?'#00FF00':healthPercent>0.25?'#FFFF00':'#FF8800';ctx.fillRect(enemy.x-barWidth/2,enemy.y-size-11,barWidth*healthPercent,barHeight);// Armor indicator\nif(enemy.armor>0){ctx.fillStyle='#C0C0C0';ctx.font='8px Arial';ctx.fillText(`🛡${enemy.armor}`,enemy.x,enemy.y-size-16);}});// Draw projectiles\ngameState.battleState.projectiles.forEach(proj=>{const config=towerTypes[proj.type];// Draw trail\nproj.trail.forEach((point,index)=>{const alpha=(index+1)/proj.trail.length*0.5;ctx.fillStyle=`rgba(255, 255, 255, ${alpha})`;ctx.beginPath();ctx.arc(point.x,point.y,2,0,2*Math.PI);ctx.fill();});// Draw projectile based on type\nswitch(proj.type){case'archer':ctx.fillStyle='#8B4513';ctx.beginPath();ctx.arc(proj.x,proj.y,3,0,2*Math.PI);ctx.fill();break;case'cannon':ctx.fillStyle='#000000';ctx.beginPath();ctx.arc(proj.x,proj.y,5,0,2*Math.PI);ctx.fill();ctx.fillStyle='#FF4500';ctx.beginPath();ctx.arc(proj.x,proj.y,3,0,2*Math.PI);ctx.fill();break;case'magic':ctx.fillStyle='#9400D3';ctx.beginPath();ctx.arc(proj.x,proj.y,4,0,2*Math.PI);ctx.fill();// Magic sparkle effect\nfor(let i=0;i<3;i++){const angle=(frameCount*0.1+i*Math.PI*2/3)%(Math.PI*2);const sparkleX=proj.x+Math.cos(angle)*8;const sparkleY=proj.y+Math.sin(angle)*8;ctx.fillStyle='#DDA0DD';ctx.beginPath();ctx.arc(sparkleX,sparkleY,1,0,2*Math.PI);ctx.fill();}break;case'ice':ctx.fillStyle='#00BFFF';ctx.beginPath();ctx.arc(proj.x,proj.y,4,0,2*Math.PI);ctx.fill();ctx.fillStyle='#E0FFFF';ctx.beginPath();ctx.arc(proj.x,proj.y,2,0,2*Math.PI);ctx.fill();break;case'lightning':ctx.strokeStyle='#FFD700';ctx.lineWidth=3;ctx.beginPath();ctx.moveTo(proj.x-4,proj.y);ctx.lineTo(proj.x+4,proj.y);ctx.moveTo(proj.x,proj.y-4);ctx.lineTo(proj.x,proj.y+4);ctx.stroke();ctx.fillStyle='#FFFF00';ctx.beginPath();ctx.arc(proj.x,proj.y,3,0,2*Math.PI);ctx.fill();break;}});// UI Panel\nctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,320,canvas.width,80);// Battle stats\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='left';ctx.fillText(`Stage ${gameState.selectedStage}: ${stage.name}`,10,340);ctx.fillText(`Wave: ${gameState.battleState.wave}/3`,10,355);ctx.fillText(`Lives: ${gameState.battleState.lives}`,10,370);ctx.fillText(`Score: ${gameState.battleState.score}`,10,385);ctx.fillText(`Gold: ${playerData.gold}`,150,340);ctx.fillText(`Towers: ${gameState.battleState.towers.length}`,150,355);// Tower selection buttons\nObject.entries(towerTypes).forEach((_ref2,index)=>{let[type,config]=_ref2;const x=300+index*60;const y=340;const isSelected=gameState.selectedTowerType===type;const canAfford=playerData.gold>=config.cost;ctx.fillStyle=isSelected?'rgba(255, 255, 0, 0.5)':canAfford?'rgba(255, 255, 255, 0.2)':'rgba(255, 0, 0, 0.2)';ctx.fillRect(x,y,50,50);ctx.fillStyle=config.color;ctx.beginPath();ctx.arc(x+25,y+20,12,0,2*Math.PI);ctx.fill();ctx.fillStyle=canAfford?'#FFFFFF':'#FF6666';ctx.font='10px Arial';ctx.textAlign='center';ctx.fillText(`${index+1}: $${config.cost}`,x+25,y+45);});// Wave control\nif(!gameState.battleState.isWaveActive){ctx.fillStyle='rgba(0, 255, 0, 0.8)';ctx.fillRect(450,350,100,30);ctx.fillStyle='#FFFFFF';ctx.font='bold 14px Arial';ctx.textAlign='center';ctx.fillText('START WAVE',500,370);}// Pause button\nctx.fillStyle='rgba(255, 200, 0, 0.8)';ctx.fillRect(560,350,30,30);ctx.fillStyle='#000';ctx.font='16px Arial';ctx.fillText('⏸',575,370);};const drawResults=(ctx,canvas)=>{if(!gameState.stageResults)return;const results=gameState.stageResults;// Overlay with animation\nctx.fillStyle='rgba(0, 0, 0, 0.9)';ctx.fillRect(0,0,canvas.width,canvas.height);// Results panel with glow effect\nctx.shadowColor=results.victory?'#00FF00':'#FF0000';ctx.shadowBlur=20;ctx.fillStyle='rgba(30, 30, 30, 0.95)';ctx.fillRect(80,40,440,320);ctx.shadowBlur=0;ctx.strokeStyle=results.victory?'#FFD700':'#FF4444';ctx.lineWidth=3;ctx.strokeRect(80,40,440,320);// Animated title\nconst titleScale=1+Math.sin(frameCount*0.1)*0.1;ctx.save();ctx.translate(300,80);ctx.scale(titleScale,titleScale);ctx.fillStyle=results.victory?'#00FF00':'#FF0000';ctx.font='bold 28px Arial';ctx.textAlign='center';ctx.fillText(results.victory?'🎉 VICTORY!':'💀 DEFEAT!',0,0);ctx.restore();// Results with better formatting\nctx.fillStyle='#FFFFFF';ctx.font='18px Arial';ctx.textAlign='left';let yPos=120;// Score with icon\nctx.fillText(`🏆 Score: ${results.score.toLocaleString()}`,100,yPos);yPos+=30;if(results.victory){// Stars with animation\nctx.fillText('Stars Earned:',100,yPos);for(let i=0;i<results.starsEarned;i++){const starScale=1+Math.sin((frameCount+i*20)*0.15)*0.2;ctx.save();ctx.translate(250+i*30,yPos-5);ctx.scale(starScale,starScale);ctx.font='20px Arial';ctx.fillText('⭐',0,0);ctx.restore();}yPos+=35;// Rewards section\nctx.fillStyle='#FFD700';ctx.font='bold 16px Arial';ctx.fillText('REWARDS:',100,yPos);yPos+=25;ctx.fillStyle='#FFFFFF';ctx.font='14px Arial';results.rewards.forEach(reward=>{const iconMap={gold:'💰',exp:'⭐',gem:'💎',item:'🎁'};const icon=iconMap[reward.type]||'🎁';ctx.fillText(`${icon} +${reward.amount.toLocaleString()}`,120,yPos);yPos+=22;});if(results.newUnlocks.length>0){yPos+=10;ctx.fillStyle='#FFD700';ctx.font='bold 14px Arial';results.newUnlocks.forEach(unlock=>{ctx.fillText(`🔓 ${unlock}`,100,yPos);yPos+=22;});}}else{// Defeat specific information\nctx.fillStyle='#FFAAAA';ctx.font='16px Arial';ctx.fillText(`💥 Wave Reached: ${gameState.battleState.wave}`,100,yPos);yPos+=25;ctx.fillText(`🏰 Towers Built: ${gameState.battleState.towers.length}`,100,yPos);yPos+=25;ctx.fillText(`💀 Enemies Defeated: ${gameState.battleState.towers.reduce((sum,tower)=>sum+tower.kills,0)}`,100,yPos);yPos+=30;// Consolation reward\nif(results.rewards.length>0){ctx.fillStyle='#FFFF99';ctx.font='14px Arial';ctx.fillText('Consolation Reward:',100,yPos);yPos+=20;ctx.fillStyle='#FFFFFF';results.rewards.forEach(reward=>{ctx.fillText(`💰 +${reward.amount} Gold`,120,yPos);yPos+=20;});}}// Buttons\nif(!results.victory){var _stageDefinitions$fin;// Retry button (only for failures)\nconst hasEnergy=gameState.selectedStage?playerData.energy>=(((_stageDefinitions$fin=stageDefinitions.find(s=>s.id===gameState.selectedStage))===null||_stageDefinitions$fin===void 0?void 0:_stageDefinitions$fin.energyCost)||0):false;ctx.fillStyle=hasEnergy?'rgba(255, 165, 0, 0.8)':'rgba(128, 128, 128, 0.5)';ctx.fillRect(100,320,120,30);ctx.strokeStyle=hasEnergy?'#FFA500':'#666666';ctx.lineWidth=2;ctx.strokeRect(100,320,120,30);ctx.fillStyle=hasEnergy?'#FFFFFF':'#AAAAAA';ctx.font='bold 14px Arial';ctx.textAlign='center';ctx.fillText(hasEnergy?'🔄 RETRY':'NO ENERGY',160,340);}// Continue button\nctx.fillStyle='rgba(74, 144, 226, 0.8)';ctx.fillRect(results.victory?250:280,320,140,30);ctx.strokeStyle='#4A90E2';ctx.lineWidth=2;ctx.strokeRect(results.victory?250:280,320,140,30);ctx.fillStyle='#FFFFFF';ctx.font='bold 14px Arial';ctx.textAlign='center';ctx.fillText('🏠 LOBBY',results.victory?320:350,340);// Instructions\nctx.fillStyle='#CCCCCC';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText('Click buttons to continue',300,370);};const draw=useCallback(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);switch(gameState.currentScene){case'lobby':drawLobby(ctx,canvas);break;case'dungeon':drawDungeon(ctx,canvas);break;case'battle':drawBattle(ctx,canvas);break;case'stageComplete':case'stageFailed':drawBattle(ctx,canvas);drawResults(ctx,canvas);break;case'shop':drawLobby(ctx,canvas);// Add shop overlay\nctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#FFD700';ctx.font='bold 24px Arial';ctx.textAlign='center';drawShop(ctx,canvas);return;break;case'inventory':drawLobby(ctx,canvas);// Add inventory overlay\nctx.fillStyle='rgba(0, 0, 0, 0.8)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#FFD700';ctx.font='bold 24px Arial';ctx.textAlign='center';drawInventory(ctx,canvas);return;break;}},[gameState,playerData]);const drawShop=(ctx,canvas)=>{// Background\nctx.fillStyle='#1a1a2e';ctx.fillRect(0,0,canvas.width,canvas.height);// Title\nctx.fillStyle='#FFD700';ctx.font='bold 24px Arial';ctx.textAlign='center';ctx.fillText('🛍️ MAGIC SHOP',canvas.width/2,30);// Player currency display\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='left';ctx.fillText(`💰 Gold: ${playerData.gold.toLocaleString()}`,50,370);ctx.fillText(`💎 Gems: ${playerData.gems.toLocaleString()}`,200,370);ctx.fillText(`Level: ${playerData.level}`,350,370);// Category tabs\nconst categories=[{id:'tower',name:'TOWER UPGRADES',icon:'🏰'},{id:'utility',name:'UTILITY',icon:'🧪'},{id:'premium',name:'PREMIUM',icon:'✨'}];categories.forEach((category,index)=>{const tabX=80+index*150;const isSelected=gameState.shopCategory===category.id;ctx.fillStyle=isSelected?'rgba(255, 215, 0, 0.8)':'rgba(100, 100, 100, 0.6)';ctx.fillRect(tabX,50,140,30);ctx.strokeStyle=isSelected?'#FFD700':'#666';ctx.lineWidth=2;ctx.strokeRect(tabX,50,140,30);ctx.fillStyle=isSelected?'#000':'#FFF';ctx.font='bold 12px Arial';ctx.textAlign='center';ctx.fillText(`${category.icon} ${category.name}`,tabX+70,70);});// Shop items\nconst categoryItems=shopItems.filter(item=>item.category===gameState.shopCategory);categoryItems.forEach((item,index)=>{const itemX=80+index%2*220;const itemY=100+Math.floor(index/2)*100;// Check if player can afford and meets requirements\nconst canAfford=item.currency==='gold'?playerData.gold>=item.price:playerData.gems>=item.price;const meetsRequirements=!item.requirements||(!item.requirements.level||playerData.level>=item.requirements.level)&&(!item.requirements.completedStages||playerData.completedStages.length>=item.requirements.completedStages);const canPurchase=canAfford&&meetsRequirements;// Item background\nctx.fillStyle=canPurchase?'rgba(74, 144, 226, 0.8)':'rgba(100, 100, 100, 0.5)';ctx.fillRect(itemX,itemY,200,90);ctx.strokeStyle=canPurchase?'#4A90E2':'#666';ctx.lineWidth=2;ctx.strokeRect(itemX,itemY,200,90);// Item info\nctx.fillStyle=canPurchase?'#FFFFFF':'#AAAAAA';ctx.font='bold 14px Arial';ctx.textAlign='left';ctx.fillText(item.name,itemX+10,itemY+20);ctx.font='11px Arial';const words=item.description.split(' ');let line='';let y=itemY+35;words.forEach(word=>{const testLine=line+word+' ';const metrics=ctx.measureText(testLine);if(metrics.width>180&&line!==''){ctx.fillText(line,itemX+10,y);line=word+' ';y+=12;}else{line=testLine;}});ctx.fillText(line,itemX+10,y);// Price\nctx.fillStyle=canAfford?'#00FF00':'#FF6666';ctx.font='bold 12px Arial';const currencyIcon=item.currency==='gold'?'💰':'💎';ctx.fillText(`${currencyIcon} ${item.price}`,itemX+10,itemY+80);// Requirements warning\nif(!meetsRequirements){var _item$requirements,_item$requirements2;ctx.fillStyle='#FF6666';ctx.font='10px Arial';if((_item$requirements=item.requirements)!==null&&_item$requirements!==void 0&&_item$requirements.level&&playerData.level<item.requirements.level){ctx.fillText(`Requires Level ${item.requirements.level}`,itemX+100,itemY+80);}if((_item$requirements2=item.requirements)!==null&&_item$requirements2!==void 0&&_item$requirements2.completedStages&&playerData.completedStages.length<item.requirements.completedStages){ctx.fillText(`Complete ${item.requirements.completedStages} stages`,itemX+100,itemY+80);}}});// Back button\nctx.fillStyle='rgba(255, 100, 100, 0.8)';ctx.fillRect(50,350,100,30);ctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='center';ctx.fillText('← BACK',100,370);};const drawInventory=(ctx,canvas)=>{// Background\nctx.fillStyle='#2d1b69';ctx.fillRect(0,0,canvas.width,canvas.height);// Title\nctx.fillStyle='#FFD700';ctx.font='bold 24px Arial';ctx.textAlign='center';ctx.fillText('🎒 INVENTORY',canvas.width/2,30);// Player info\nctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='left';ctx.fillText(`Items: ${playerData.inventory.length}`,50,60);ctx.fillText(`Total Value: ${playerData.inventory.reduce((sum,item)=>sum+item.sellPrice*item.quantity,0)} gold`,200,60);// Inventory grid\nconst itemsPerRow=5;const startY=100;playerData.inventory.forEach((item,index)=>{const itemX=50+index%itemsPerRow*100;const itemY=startY+Math.floor(index/itemsPerRow)*80;// Rarity colors\nconst rarityColors={common:'#CCCCCC',rare:'#0099FF',epic:'#9933FF',legendary:'#FF9900'};// Item slot\nctx.fillStyle='rgba(50, 50, 50, 0.8)';ctx.fillRect(itemX,itemY,80,60);ctx.strokeStyle=rarityColors[item.rarity];ctx.lineWidth=2;ctx.strokeRect(itemX,itemY,80,60);// Item info\nctx.fillStyle='#FFFFFF';ctx.font='bold 10px Arial';ctx.textAlign='center';// Truncate long names\nconst displayName=item.name.length>10?item.name.substring(0,8)+'...':item.name;ctx.fillText(displayName,itemX+40,itemY+15);// Type icon\nconst typeIcons={weapon:'⚔️',armor:'🛡️',consumable:'🧪',material:'📎',tower_upgrade:'⬆️',blueprint:'📜'};ctx.font='16px Arial';ctx.fillText(typeIcons[item.type]||'❓',itemX+40,itemY+35);// Quantity\nif(item.quantity>1){ctx.fillStyle='#FFD700';ctx.font='bold 10px Arial';ctx.fillText(`x${item.quantity}`,itemX+65,itemY+55);}// Sell value\nctx.fillStyle='#00FF00';ctx.font='8px Arial';ctx.fillText(`💰${item.sellPrice}`,itemX+5,itemY+55);});// Instructions\nctx.fillStyle='#CCCCCC';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText('Click items to use/equip them',canvas.width/2,320);// Back button\nctx.fillStyle='rgba(255, 100, 100, 0.8)';ctx.fillRect(50,350,100,30);ctx.fillStyle='#FFFFFF';ctx.font='14px Arial';ctx.textAlign='center';ctx.fillText('← BACK',100,370);};// Game loop\nuseEffect(()=>{const gameLoop=()=>{updateBattle();draw();setFrameCount(prev=>prev+1);gameLoopRef.current=requestAnimationFrame(gameLoop);};gameLoopRef.current=requestAnimationFrame(gameLoop);return()=>{if(gameLoopRef.current){cancelAnimationFrame(gameLoopRef.current);}};},[updateBattle,draw]);// Event listeners\nuseEffect(()=>{document.addEventListener('keydown',handleKeyDown);return()=>{document.removeEventListener('keydown',handleKeyDown);};},[handleKeyDown]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',background:'#0a0a0a',borderRadius:'12px',padding:'16px',border:'2px solid #2d3748',maxHeight:'500px',overflowY:'auto',overflowX:'auto'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:600,height:400,style:{border:'2px solid #4a5568',borderRadius:'8px',cursor:gameState.selectedTowerType?'crosshair':'pointer',maxWidth:'100%',height:'auto'},onClick:handleCanvasClick,tabIndex:0}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px',color:'#ffffff',fontSize:'14px',textAlign:'center',maxWidth:'600px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDFF0 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Complete Tower Defense RPG\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[gameState.currentScene==='lobby'&&'로비에서 던전을 선택하세요!',gameState.currentScene==='dungeon'&&'스테이지를 선택하세요!',gameState.currentScene==='battle'&&`Stage ${gameState.selectedStage} - Space로 웨이브 시작!`,(gameState.currentScene==='stageComplete'||gameState.currentScene==='stageFailed')&&'결과를 확인하고 계속하세요!']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Level \",playerData.level,\" | Gold: \",playerData.gold,\" | Energy: \",playerData.energy,\"/\",playerData.maxEnergy]})]})]});};","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","CompleteGameSystem","_ref","onAction","playerStats","setPlayerStats","currentUser","canvasRef","gameLoopRef","frameCount","setFrameCount","playerData","setPlayerData","id","user_id","name","level","experience","gold","gems","energy","maxEnergy","unlockedStages","inventory","type","rarity","quantity","stats","attack","description","price","sellPrice","heal","completedStages","achievements","totalPlayTime","lastLogin","Date","toISOString","gameState","setGameState","currentScene","selectedStage","battleState","wave","lives","score","isWaveActive","towers","enemies","projectiles","waveProgress","battleTime","totalEnemies","enemiesSpawned","nextEnemySpawn","stageResults","cameraX","cameraY","selectedTower","selectedTowerType","isPaused","showUpgradeMenu","hoverPosition","shopCategory","selectedShopItem","inventoryPage","stageDefinitions","difficulty","energyCost","recommendedLevel","rewards","amount","isUnlocked","path","x","y","spawnDelay","background","towerTypes","cost","damage","range","speed","color","icon","upgradeMultiplier","effects","enemyTypes","health","reward","armor","size","shopItems","currency","effect","value","duration","category","requirements","player_id","player_level","total_gold","unlocked_stages","login_streak","energyRegen","setInterval","prev","Math","min","clearInterval","expNeeded","newLevel","old_level","new_level","new_max_energy","total_playtime","handleKeyDown","e","includes","key","preventDefault","stopPropagation","toLowerCase","pauseBattle","startWave","towerIndex","parseInt","towerTypeKeys","Object","keys","length","handleCanvasClick","canvas","current","rect","getBoundingClientRect","clientX","left","clientY","top","handleLobbyClick","handleDungeonClick","handleBattleClick","handleShopClick","handleInventoryClick","handleResultsClick","from_scene","to_scene","forEach","stage","index","stageX","stageY","floor","enterStage","stageId","find","s","stage_id","stage_name","energy_cost","remaining_energy","recommended_level","canPlaceTower","placeTower","clickedTower","tower","distance","sqrt","point","towerConfig","newTower","now","random","toString","substr","attackSpeed","lastAttack","kills","upgradeCost","sellValue","tower_type","tower_cost","position_x","position_y","remaining_gold","wave_number","towers_count","current_gold","spawnEnemyWave","enemyCount","enemyTypeKeys","spawnSingleEnemy","waveTypeIndex","possibleTypes","slice","enemyType","enemyConfig","newEnemy","maxHealth","pathIndex","alive","slowDuration","max","enemy_type","enemy_id","enemies_spawned","total_enemies","battle_time","current_score","completeStage","victory","_rewards$find","_rewards$find2","starsEarned","calculateStars","goldGained","expGained","gemsGained","completion","bestScore","completionTime","completedAt","existingIndex","findIndex","c","newCompletedStages","push","energyRefund","results","timeBonus","newUnlocks","setTimeout","final_score","stars_earned","towers_built","waves_completed","enemies_defeated","reduce","sum","gold_gained","r","exp_gained","new_unlocks","failure_reason","baseScore","livesBonus","totalScore","categories","tabX","categoryItems","filter","item","itemX","itemY","purchaseItem","itemsPerRow","startY","useInventoryItem","item_id","reason","required_level","current_level","required_stages","completed_stages","hasEnoughCurrency","required_amount","current_amount","inventoryItem","i","newInventory","item_name","remaining_gems","_item$stats","map","_gameState$stageResul","returnToLobby","retryStage","_gameState$stageResul2","total_energy","updateBattle","updateEnemies","updateTowers","updateProjectiles","checkBattleEnd","enemy","currentSpeed","currentTarget","dx","dy","prev2","remaining_lives","moveX","moveY","proj","trail","shift","targetX","targetY","hitTarget","projectile","targetEnemy","targetId","actualDamage","newHealth","killed","_enemy$reward$find","_enemy$reward$find2","goldGain","expGain","t","towerId","tower_id","damage_dealt","enemy_health_remaining","chainDamage","actualChainDamage","splashTargets","splashDamage","actualSplashDamage","enemiesInRange","target","best","newProjectile","target_enemy_id","aliveEnemies","allEnemiesSpawned","nextWave","nextTotalEnemies","bonusGold","bonus_gold","drawLobby","ctx","fillStyle","fillRect","width","height","font","textAlign","fillText","expPercent","buttons","text","w","h","button","strokeStyle","lineWidth","strokeRect","drawDungeon","hasEnergy","canEnter","completed","drawBattle","lineCap","lineJoin","beginPath","moveTo","lineTo","stroke","_gameState$selectedTo","config","isSelected","arc","PI","fill","setLineDash","ellipse","barWidth","barHeight","healthPercent","alpha","angle","sparkleX","cos","sparkleY","sin","entries","_ref2","canAfford","drawResults","shadowColor","shadowBlur","titleScale","save","translate","scale","restore","yPos","toLocaleString","starScale","iconMap","exp","gem","unlock","_stageDefinitions$fin","draw","getContext","clearRect","drawShop","drawInventory","meetsRequirements","canPurchase","words","split","line","word","testLine","metrics","measureText","currencyIcon","_item$requirements","_item$requirements2","rarityColors","common","rare","epic","legendary","displayName","substring","typeIcons","weapon","consumable","material","tower_upgrade","blueprint","gameLoop","requestAnimationFrame","cancelAnimationFrame","document","addEventListener","removeEventListener","style","display","flexDirection","alignItems","borderRadius","padding","border","maxHeight","overflowY","overflowX","children","ref","cursor","maxWidth","onClick","tabIndex","marginTop","fontSize"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/CompleteGameSystem.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface GameProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  playerStats: any;\n  setPlayerStats: (stats: any) => void;\n  currentUser: any;\n}\n\ninterface PlayerData {\n  id: string;\n  name: string;\n  level: number;\n  experience: number;\n  gold: number;\n  gems: number;\n  energy: number;\n  maxEnergy: number;\n  unlockedStages: number;\n  inventory: InventoryItem[];\n  completedStages: CompletedStage[];\n  achievements: string[];\n  totalPlayTime: number;\n  lastLogin: string;\n}\n\ninterface InventoryItem {\n  id: string;\n  name: string;\n  type: 'weapon' | 'armor' | 'consumable' | 'material' | 'tower_upgrade' | 'blueprint';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary';\n  quantity: number;\n  stats: any;\n  description: string;\n  price: number;\n  sellPrice: number;\n}\n\ninterface ShopItem {\n  id: string;\n  name: string;\n  type: 'tower_upgrade' | 'consumable' | 'equipment' | 'blueprint';\n  price: number;\n  currency: 'gold' | 'gem';\n  description: string;\n  effect: any;\n  requirements?: {\n    level?: number;\n    completedStages?: number;\n  };\n  stock?: number;\n  category: 'tower' | 'utility' | 'premium';\n}\n\ninterface CompletedStage {\n  stageId: number;\n  bestScore: number;\n  completionTime: number;\n  starsEarned: number;\n  completedAt: string;\n}\n\ninterface StageData {\n  id: number;\n  name: string;\n  difficulty: 'Easy' | 'Normal' | 'Hard' | 'Expert' | 'Hell';\n  energyCost: number;\n  recommendedLevel: number;\n  rewards: StageReward[];\n  isUnlocked: boolean;\n  path: { x: number; y: number }[];\n  enemies: EnemyWave[];\n  background: string;\n}\n\ninterface StageReward {\n  type: 'gold' | 'exp' | 'item' | 'gem';\n  amount: number;\n  item?: InventoryItem;\n}\n\ninterface Projectile {\n  id: string;\n  x: number;\n  y: number;\n  targetX: number;\n  targetY: number;\n  targetId: string;\n  speed: number;\n  damage: number;\n  type: string;\n  towerId: string;\n  effects: string[];\n  trail: { x: number; y: number }[];\n}\n\ninterface EnemyWave {\n  enemies: Enemy[];\n  spawnDelay: number;\n}\n\ninterface Enemy {\n  id: string;\n  x: number;\n  y: number;\n  health: number;\n  maxHealth: number;\n  speed: number;\n  type: string;\n  pathIndex: number;\n  alive: boolean;\n  armor: number;\n  reward: StageReward[];\n  effects: string[];\n  slowDuration: number;\n  targetId?: string;\n}\n\ninterface Tower {\n  id: string;\n  x: number;\n  y: number;\n  type: string;\n  level: number;\n  damage: number;\n  range: number;\n  attackSpeed: number;\n  lastAttack: number;\n  cost: number;\n  kills: number;\n  upgradeCost: number;\n  sellValue: number;\n  experience: number;\n}\n\ninterface GameState {\n  currentScene: 'lobby' | 'dungeon' | 'stage' | 'shop' | 'inventory' | 'battle' | 'stageComplete' | 'stageFailed';\n  selectedStage: number | null;\n  battleState: BattleState;\n  stageResults: StageResults | null;\n  cameraX: number;\n  cameraY: number;\n  selectedTower: Tower | null;\n  selectedTowerType: string | null;\n  isPaused: boolean;\n  showUpgradeMenu: boolean;\n  hoverPosition: { x: number; y: number } | null;\n  shopCategory: 'tower' | 'utility' | 'premium';\n  selectedShopItem: ShopItem | null;\n  inventoryPage: number;\n}\n\ninterface BattleState {\n  wave: number;\n  lives: number;\n  score: number;\n  isWaveActive: boolean;\n  towers: Tower[];\n  enemies: Enemy[];\n  projectiles: Projectile[];\n  waveProgress: number;\n  battleTime: number;\n  totalEnemies: number;\n  enemiesSpawned: number;\n  nextEnemySpawn: number;\n}\n\ninterface StageResults {\n  victory: boolean;\n  score: number;\n  starsEarned: number;\n  timeBonus: number;\n  rewards: StageReward[];\n  newUnlocks: string[];\n}\n\nexport const CompleteGameSystem: React.FC<GameProps> = ({\n  onAction,\n  playerStats,\n  setPlayerStats,\n  currentUser\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number>();\n  const [frameCount, setFrameCount] = useState(0);\n\n  // Player persistent data\n  const [playerData, setPlayerData] = useState<PlayerData>({\n    id: currentUser.user_id,\n    name: \"Hero\",\n    level: 1,\n    experience: 0,\n    gold: 1000,\n    gems: 50,\n    energy: 100,\n    maxEnergy: 100,\n    unlockedStages: 1,\n    inventory: [\n      { \n        id: 'sword1', \n        name: 'Iron Sword', \n        type: 'weapon', \n        rarity: 'common', \n        quantity: 1, \n        stats: { attack: 10 }, \n        description: 'A basic iron sword',\n        price: 100,\n        sellPrice: 50\n      },\n      { \n        id: 'potion1', \n        name: 'Health Potion', \n        type: 'consumable', \n        rarity: 'common', \n        quantity: 5, \n        stats: { heal: 50 },\n        description: 'Restores health',\n        price: 25,\n        sellPrice: 10\n      }\n    ],\n    completedStages: [],\n    achievements: [],\n    totalPlayTime: 0,\n    lastLogin: new Date().toISOString()\n  });\n\n  // Game state\n  const [gameState, setGameState] = useState<GameState>({\n    currentScene: 'lobby',\n    selectedStage: null,\n    battleState: {\n      wave: 1,\n      lives: 20,\n      score: 0,\n      isWaveActive: false,\n      towers: [],\n      enemies: [],\n      projectiles: [],\n      waveProgress: 0,\n      battleTime: 0,\n      totalEnemies: 0,\n      enemiesSpawned: 0,\n      nextEnemySpawn: 0\n    },\n    stageResults: null,\n    cameraX: 0,\n    cameraY: 0,\n    selectedTower: null,\n    selectedTowerType: null,\n    isPaused: false,\n    showUpgradeMenu: false,\n    hoverPosition: null,\n    shopCategory: 'tower',\n    selectedShopItem: null,\n    inventoryPage: 0\n  });\n\n  // Stage definitions\n  const stageDefinitions: StageData[] = [\n    {\n      id: 1,\n      name: \"Green Fields\",\n      difficulty: 'Easy',\n      energyCost: 10,\n      recommendedLevel: 1,\n      rewards: [\n        { type: 'gold', amount: 100 },\n        { type: 'exp', amount: 50 }\n      ],\n      isUnlocked: true,\n      path: [\n        { x: 0, y: 200 }, { x: 150, y: 200 }, { x: 150, y: 100 },\n        { x: 300, y: 100 }, { x: 300, y: 300 }, { x: 600, y: 300 }\n      ],\n      enemies: [\n        { enemies: [], spawnDelay: 60 }\n      ],\n      background: '#2d5016'\n    },\n    {\n      id: 2,\n      name: \"Dark Forest\",\n      difficulty: 'Normal',\n      energyCost: 15,\n      recommendedLevel: 3,\n      rewards: [\n        { type: 'gold', amount: 200 },\n        { type: 'exp', amount: 80 },\n        { type: 'gem', amount: 5 }\n      ],\n      isUnlocked: false,\n      path: [\n        { x: 0, y: 150 }, { x: 100, y: 150 }, { x: 100, y: 50 },\n        { x: 250, y: 50 }, { x: 250, y: 250 }, { x: 400, y: 250 },\n        { x: 400, y: 100 }, { x: 600, y: 100 }\n      ],\n      enemies: [\n        { enemies: [], spawnDelay: 50 }\n      ],\n      background: '#1a3d1a'\n    },\n    {\n      id: 3,\n      name: \"Ancient Ruins\",\n      difficulty: 'Hard',\n      energyCost: 20,\n      recommendedLevel: 5,\n      rewards: [\n        { type: 'gold', amount: 350 },\n        { type: 'exp', amount: 120 },\n        { type: 'gem', amount: 10 }\n      ],\n      isUnlocked: false,\n      path: [\n        { x: 0, y: 200 }, { x: 80, y: 200 }, { x: 80, y: 80 },\n        { x: 200, y: 80 }, { x: 200, y: 320 }, { x: 320, y: 320 },\n        { x: 320, y: 120 }, { x: 500, y: 120 }, { x: 500, y: 280 },\n        { x: 600, y: 280 }\n      ],\n      enemies: [\n        { enemies: [], spawnDelay: 40 }\n      ],\n      background: '#4a4a2a'\n    },\n    {\n      id: 4,\n      name: \"Dragon's Lair\",\n      difficulty: 'Expert',\n      energyCost: 25,\n      recommendedLevel: 8,\n      rewards: [\n        { type: 'gold', amount: 500 },\n        { type: 'exp', amount: 200 },\n        { type: 'gem', amount: 20 }\n      ],\n      isUnlocked: false,\n      path: [\n        { x: 0, y: 200 }, { x: 150, y: 200 }, { x: 150, y: 100 },\n        { x: 450, y: 100 }, { x: 450, y: 300 }, { x: 600, y: 300 }\n      ],\n      enemies: [\n        { enemies: [], spawnDelay: 35 }\n      ],\n      background: '#5d1a1a'\n    },\n    {\n      id: 5,\n      name: \"Demon Realm\",\n      difficulty: 'Hell',\n      energyCost: 30,\n      recommendedLevel: 12,\n      rewards: [\n        { type: 'gold', amount: 1000 },\n        { type: 'exp', amount: 400 },\n        { type: 'gem', amount: 50 }\n      ],\n      isUnlocked: false,\n      path: [\n        { x: 0, y: 200 }, { x: 100, y: 200 }, { x: 200, y: 200 },\n        { x: 300, y: 200 }, { x: 400, y: 200 }, { x: 500, y: 200 },\n        { x: 600, y: 200 }\n      ],\n      enemies: [\n        { enemies: [], spawnDelay: 30 }\n      ],\n      background: '#2d0d0d'\n    }\n  ];\n\n  // Tower types\n  const towerTypes = {\n    'archer': { \n      cost: 80, damage: 25, range: 120, speed: 30, \n      color: '#8B4513', icon: '🏹', \n      description: 'Fast shooting archer tower',\n      upgradeMultiplier: 1.5,\n      effects: []\n    },\n    'cannon': { \n      cost: 150, damage: 60, range: 100, speed: 60, \n      color: '#696969', icon: '💣', \n      description: 'Heavy damage explosive cannon',\n      upgradeMultiplier: 1.6,\n      effects: ['splash']\n    },\n    'magic': { \n      cost: 220, damage: 40, range: 140, speed: 40, \n      color: '#9400D3', icon: '✨', \n      description: 'Magic tower with penetration',\n      upgradeMultiplier: 1.7,\n      effects: ['penetrate']\n    },\n    'ice': { \n      cost: 180, damage: 20, range: 110, speed: 35, \n      color: '#00BFFF', icon: '❄️', \n      description: 'Slows enemies and deals damage',\n      upgradeMultiplier: 1.4,\n      effects: ['slow']\n    },\n    'lightning': { \n      cost: 300, damage: 80, range: 150, speed: 50, \n      color: '#FFD700', icon: '⚡', \n      description: 'Chain lightning that hits multiple enemies',\n      upgradeMultiplier: 1.8,\n      effects: ['chain']\n    }\n  };\n\n  // Enemy types\n  const enemyTypes = {\n    'goblin': { health: 80, speed: 2, reward: 15, color: '#228B22', icon: '👹', armor: 0, size: 12, description: 'Fast and weak' },\n    'orc': { health: 150, speed: 1.5, reward: 25, color: '#8B4513', icon: '🗡️', armor: 2, size: 14, description: 'Balanced warrior' },\n    'troll': { health: 300, speed: 1, reward: 40, color: '#2F4F4F', icon: '🏔️', armor: 5, size: 16, description: 'Heavily armored' },\n    'dragon': { health: 500, speed: 0.8, reward: 80, color: '#DC143C', icon: '🐉', armor: 8, size: 20, description: 'Flying boss' },\n    'demon': { health: 800, speed: 0.6, reward: 150, color: '#8B0000', icon: '😈', armor: 12, size: 24, description: 'Ultimate boss' }\n  };\n\n  // Shop items\n  const shopItems: ShopItem[] = [\n    // Tower upgrades\n    {\n      id: 'damage_boost',\n      name: 'Damage Boost Potion',\n      type: 'tower_upgrade',\n      price: 150,\n      currency: 'gold',\n      description: 'Increases tower damage by 25% for next battle',\n      effect: { type: 'damage_boost', value: 0.25, duration: 1 },\n      category: 'tower'\n    },\n    {\n      id: 'range_extender',\n      name: 'Range Extender',\n      type: 'tower_upgrade', \n      price: 200,\n      currency: 'gold',\n      description: 'Increases tower range by 20% for next battle',\n      effect: { type: 'range_boost', value: 0.2, duration: 1 },\n      category: 'tower'\n    },\n    {\n      id: 'speed_upgrade',\n      name: 'Attack Speed Boost',\n      type: 'tower_upgrade',\n      price: 175,\n      currency: 'gold', \n      description: 'Increases tower attack speed by 30% for next battle',\n      effect: { type: 'speed_boost', value: 0.3, duration: 1 },\n      category: 'tower'\n    },\n    \n    // Utility items\n    {\n      id: 'extra_life',\n      name: 'Extra Life',\n      type: 'consumable',\n      price: 100,\n      currency: 'gold',\n      description: 'Start next battle with +5 lives',\n      effect: { type: 'extra_lives', value: 5 },\n      category: 'utility'\n    },\n    {\n      id: 'starting_gold',\n      name: 'Treasure Chest',\n      type: 'consumable',\n      price: 80,\n      currency: 'gold',\n      description: 'Start next battle with +200 gold',\n      effect: { type: 'starting_gold', value: 200 },\n      category: 'utility'\n    },\n    {\n      id: 'energy_refill',\n      name: 'Energy Potion',\n      type: 'consumable',\n      price: 5,\n      currency: 'gem',\n      description: 'Instantly restore 20 energy',\n      effect: { type: 'restore_energy', value: 20 },\n      category: 'utility'\n    },\n    \n    // Premium items\n    {\n      id: 'tower_blueprint_laser',\n      name: 'Laser Tower Blueprint',\n      type: 'blueprint',\n      price: 50,\n      currency: 'gem',\n      description: 'Unlocks powerful Laser Tower (Permanent)',\n      effect: { type: 'unlock_tower', value: 'laser' },\n      requirements: { level: 5, completedStages: 3 },\n      category: 'premium'\n    },\n    {\n      id: 'double_exp',\n      name: 'Experience Multiplier',\n      type: 'consumable',\n      price: 20,\n      currency: 'gem',\n      description: 'Double EXP gain for 3 battles',\n      effect: { type: 'exp_multiplier', value: 2, duration: 3 },\n      category: 'premium'\n    },\n    {\n      id: 'auto_upgrade',\n      name: 'Auto-Upgrade Kit',\n      type: 'consumable',\n      price: 30,\n      currency: 'gem',\n      description: 'Automatically upgrade first tower placed to level 2',\n      effect: { type: 'auto_upgrade', value: 1 },\n      category: 'premium'\n    }\n  ];\n\n  // Initialize session\n  useEffect(() => {\n    onAction('session_started', {\n      player_id: playerData.id,\n      player_level: playerData.level,\n      total_gold: playerData.gold,\n      unlocked_stages: playerData.unlockedStages,\n      login_streak: 1\n    });\n  }, []);\n\n  // Energy regeneration\n  useEffect(() => {\n    const energyRegen = setInterval(() => {\n      setPlayerData(prev => ({\n        ...prev,\n        energy: Math.min(prev.maxEnergy, prev.energy + 1)\n      }));\n    }, 60000); // 1 energy per minute\n\n    return () => clearInterval(energyRegen);\n  }, []);\n\n  // Level up check\n  useEffect(() => {\n    const expNeeded = playerData.level * 100;\n    if (playerData.experience >= expNeeded) {\n      const newLevel = playerData.level + 1;\n      setPlayerData(prev => ({\n        ...prev,\n        level: newLevel,\n        experience: prev.experience - expNeeded,\n        maxEnergy: prev.maxEnergy + 10\n      }));\n\n      onAction('player_level_up', {\n        player_id: playerData.id,\n        old_level: playerData.level,\n        new_level: newLevel,\n        new_max_energy: playerData.maxEnergy + 10,\n        total_playtime: playerData.totalPlayTime\n      });\n    }\n  }, [playerData.experience, playerData.level, playerData.maxEnergy, playerData.totalPlayTime, playerData.id, onAction]);\n\n  // Keyboard handling\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    // Prevent page scrolling\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'w', 'a', 's', 'd', ' ', 'Enter', 'Escape'].includes(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    switch (e.key.toLowerCase()) {\n      case 'escape':\n        if (gameState.currentScene === 'battle') {\n          pauseBattle();\n        } else if (gameState.currentScene !== 'lobby') {\n          setGameState(prev => ({ ...prev, currentScene: 'lobby' }));\n        }\n        break;\n      case ' ':\n        if (gameState.currentScene === 'battle') {\n          startWave();\n        }\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n        if (gameState.currentScene === 'battle') {\n          const towerIndex = parseInt(e.key) - 1;\n          const towerTypeKeys = Object.keys(towerTypes);\n          if (towerIndex < towerTypeKeys.length) {\n            setGameState(prev => ({\n              ...prev,\n              selectedTowerType: towerTypeKeys[towerIndex],\n              selectedTower: null\n            }));\n          }\n        }\n        break;\n    }\n  }, [gameState.currentScene]);\n\n  // Mouse/Click handling\n  const handleCanvasClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    switch (gameState.currentScene) {\n      case 'lobby':\n        handleLobbyClick(x, y);\n        break;\n      case 'dungeon':\n        handleDungeonClick(x, y);\n        break;\n      case 'battle':\n        handleBattleClick(x, y);\n        break;\n      case 'shop':\n        handleShopClick(x, y);\n        break;\n      case 'inventory':\n        handleInventoryClick(x, y);\n        break;\n      case 'stageComplete':\n      case 'stageFailed':\n        handleResultsClick(x, y);\n        break;\n    }\n  }, [gameState.currentScene]);\n\n  const handleLobbyClick = (x: number, y: number) => {\n    // Dungeon button\n    if (x >= 250 && x <= 350 && y >= 200 && y <= 250) {\n      setGameState(prev => ({ ...prev, currentScene: 'dungeon' }));\n      \n      onAction('menu_navigation', {\n        player_id: playerData.id,\n        from_scene: 'lobby',\n        to_scene: 'dungeon',\n        player_level: playerData.level\n      });\n    }\n    \n    // Shop button\n    if (x >= 100 && x <= 200 && y >= 300 && y <= 350) {\n      setGameState(prev => ({ ...prev, currentScene: 'shop' }));\n      \n      onAction('menu_navigation', {\n        player_id: playerData.id,\n        from_scene: 'lobby',\n        to_scene: 'shop',\n        player_level: playerData.level\n      });\n    }\n\n    // Inventory button\n    if (x >= 400 && x <= 500 && y >= 300 && y <= 350) {\n      setGameState(prev => ({ ...prev, currentScene: 'inventory' }));\n      \n      onAction('menu_navigation', {\n        player_id: playerData.id,\n        from_scene: 'lobby',\n        to_scene: 'inventory',\n        player_level: playerData.level\n      });\n    }\n  };\n\n  const handleDungeonClick = (x: number, y: number) => {\n    // Stage selection\n    stageDefinitions.forEach((stage, index) => {\n      const stageX = 50 + (index % 3) * 200;\n      const stageY = 100 + Math.floor(index / 3) * 150;\n      \n      if (x >= stageX && x <= stageX + 150 && y >= stageY && y <= stageY + 100) {\n        if (stage.id <= playerData.unlockedStages && playerData.energy >= stage.energyCost) {\n          enterStage(stage.id);\n        }\n      }\n    });\n\n    // Back button\n    if (x >= 50 && x <= 150 && y >= 350 && y <= 380) {\n      setGameState(prev => ({ ...prev, currentScene: 'lobby' }));\n    }\n  };\n\n  const enterStage = (stageId: number) => {\n    const stage = stageDefinitions.find(s => s.id === stageId);\n    if (!stage) return;\n\n    // Consume energy\n    setPlayerData(prev => ({ ...prev, energy: prev.energy - stage.energyCost }));\n\n    // Initialize battle\n    setGameState(prev => ({\n      ...prev,\n      currentScene: 'battle',\n      selectedStage: stageId,\n      battleState: {\n        wave: 1,\n        lives: 20,\n        score: 0,\n        isWaveActive: false,\n        towers: [],\n        enemies: [],\n        projectiles: [],\n        waveProgress: 0,\n        battleTime: 0,\n        totalEnemies: 8 + 1 * 2, // 8 base + wave * 2\n        enemiesSpawned: 0,\n        nextEnemySpawn: 0\n      },\n      selectedTower: null,\n      selectedTowerType: null,\n      isPaused: false,\n      showUpgradeMenu: false\n    }));\n\n    onAction('stage_entered', {\n      player_id: playerData.id,\n      stage_id: stageId,\n      stage_name: stage.name,\n      energy_cost: stage.energyCost,\n      remaining_energy: playerData.energy - stage.energyCost,\n      player_level: playerData.level,\n      recommended_level: stage.recommendedLevel\n    });\n  };\n\n  const handleBattleClick = (x: number, y: number) => {\n    // UI area (bottom 80px)\n    if (y > 320) return;\n\n    if (gameState.selectedTowerType) {\n      // Place tower\n      if (canPlaceTower(x, y)) {\n        placeTower(x, y, gameState.selectedTowerType);\n      }\n    } else {\n      // Select existing tower\n      const clickedTower = gameState.battleState.towers.find(tower => {\n        const distance = Math.sqrt((x - tower.x) ** 2 + (y - tower.y) ** 2);\n        return distance < 25;\n      });\n\n      if (clickedTower) {\n        setGameState(prev => ({\n          ...prev,\n          selectedTower: clickedTower,\n          selectedTowerType: null\n        }));\n      }\n    }\n  };\n\n  const canPlaceTower = (x: number, y: number): boolean => {\n    if (!gameState.selectedStage) return false;\n    \n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return false;\n\n    // Check distance from path\n    for (const point of stage.path) {\n      const distance = Math.sqrt((x - point.x) ** 2 + (y - point.y) ** 2);\n      if (distance < 40) return false;\n    }\n\n    // Check distance from other towers\n    for (const tower of gameState.battleState.towers) {\n      const distance = Math.sqrt((x - tower.x) ** 2 + (y - tower.y) ** 2);\n      if (distance < 50) return false;\n    }\n\n    return x > 25 && x < 575 && y > 25 && y < 295;\n  };\n\n  const placeTower = (x: number, y: number, type: string) => {\n    const towerConfig = towerTypes[type as keyof typeof towerTypes];\n    if (playerData.gold < towerConfig.cost) return;\n\n    const newTower: Tower = {\n      id: `tower_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      x, y, type,\n      level: 1,\n      damage: towerConfig.damage,\n      range: towerConfig.range,\n      attackSpeed: towerConfig.speed,\n      lastAttack: 0,\n      cost: towerConfig.cost,\n      kills: 0,\n      upgradeCost: Math.floor(towerConfig.cost * towerConfig.upgradeMultiplier),\n      sellValue: Math.floor(towerConfig.cost * 0.7),\n      experience: 0\n    };\n\n    setPlayerData(prev => ({ ...prev, gold: prev.gold - towerConfig.cost }));\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        towers: [...prev.battleState.towers, newTower]\n      },\n      selectedTowerType: null\n    }));\n\n    onAction('tower_placed', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      tower_type: type,\n      tower_cost: towerConfig.cost,\n      position_x: x,\n      position_y: y,\n      remaining_gold: playerData.gold - towerConfig.cost,\n      wave_number: gameState.battleState.wave\n    });\n  };\n\n  const startWave = () => {\n    if (gameState.battleState.isWaveActive) return;\n\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        isWaveActive: true,\n        waveProgress: 0\n      }\n    }));\n\n    onAction('wave_started', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      wave_number: gameState.battleState.wave,\n      towers_count: gameState.battleState.towers.length,\n      current_gold: playerData.gold\n    });\n\n    // Spawn enemies\n    spawnEnemyWave();\n  };\n\n  const spawnEnemyWave = () => {\n    if (!gameState.selectedStage) return;\n    \n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return;\n\n    const enemyCount = 8 + gameState.battleState.wave * 2;\n    const enemyTypeKeys = Object.keys(enemyTypes);\n    \n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        totalEnemies: enemyCount,\n        enemiesSpawned: 0,\n        nextEnemySpawn: frameCount + 60 // Start spawning in 1 second\n      }\n    }));\n  };\n\n  const spawnSingleEnemy = () => {\n    if (!gameState.selectedStage) return;\n    \n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return;\n\n    const enemyTypeKeys = Object.keys(enemyTypes);\n    const waveTypeIndex = Math.min(gameState.battleState.wave - 1, enemyTypeKeys.length - 1);\n    const possibleTypes = enemyTypeKeys.slice(0, waveTypeIndex + 1);\n    const enemyType = possibleTypes[Math.floor(Math.random() * possibleTypes.length)];\n    const enemyConfig = enemyTypes[enemyType as keyof typeof enemyTypes];\n    \n    const newEnemy: Enemy = {\n      id: `enemy_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      x: stage.path[0].x,\n      y: stage.path[0].y,\n      health: enemyConfig.health * gameState.selectedStage!,\n      maxHealth: enemyConfig.health * gameState.selectedStage!,\n      speed: enemyConfig.speed,\n      type: enemyType,\n      pathIndex: 0,\n      alive: true,\n      armor: enemyConfig.armor,\n      effects: [],\n      slowDuration: 0,\n      reward: [\n        { type: 'gold', amount: enemyConfig.reward },\n        { type: 'exp', amount: enemyConfig.reward / 2 }\n      ]\n    };\n\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        enemies: [...prev.battleState.enemies, newEnemy],\n        enemiesSpawned: prev.battleState.enemiesSpawned + 1,\n        nextEnemySpawn: frameCount + Math.max(30, 80 - gameState.battleState.wave * 5)\n      }\n    }));\n\n    onAction('enemy_spawned', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      enemy_type: enemyType,\n      enemy_id: newEnemy.id,\n      wave_number: gameState.battleState.wave,\n      enemies_spawned: gameState.battleState.enemiesSpawned + 1,\n      total_enemies: gameState.battleState.totalEnemies\n    });\n  };\n\n  const pauseBattle = () => {\n    onAction('battle_paused', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      wave_number: gameState.battleState.wave,\n      battle_time: gameState.battleState.battleTime,\n      current_score: gameState.battleState.score\n    });\n  };\n\n  const completeStage = (victory: boolean) => {\n    if (!gameState.selectedStage) return;\n\n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return;\n\n    // Stop all battle updates\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        isWaveActive: false\n      },\n      isPaused: true\n    }));\n\n    const starsEarned = victory ? calculateStars() : 0;\n    const rewards = victory ? stage.rewards : [];\n    \n    // Apply rewards\n    if (victory) {\n      let goldGained = 0;\n      let expGained = 0;\n      let gemsGained = 0;\n\n      rewards.forEach(reward => {\n        switch (reward.type) {\n          case 'gold':\n            goldGained += reward.amount;\n            break;\n          case 'exp':\n            expGained += reward.amount;\n            break;\n          case 'gem':\n            gemsGained += reward.amount;\n            break;\n        }\n      });\n\n      setPlayerData(prev => ({\n        ...prev,\n        gold: prev.gold + goldGained,\n        experience: prev.experience + expGained,\n        gems: prev.gems + gemsGained,\n        unlockedStages: Math.max(prev.unlockedStages, gameState.selectedStage! + 1)\n      }));\n\n      // Record completion\n      const completion: CompletedStage = {\n        stageId: gameState.selectedStage,\n        bestScore: gameState.battleState.score,\n        completionTime: gameState.battleState.battleTime,\n        starsEarned,\n        completedAt: new Date().toISOString()\n      };\n\n      setPlayerData(prev => {\n        const existingIndex = prev.completedStages.findIndex(c => c.stageId === gameState.selectedStage);\n        const newCompletedStages = [...prev.completedStages];\n        \n        if (existingIndex >= 0) {\n          newCompletedStages[existingIndex] = completion;\n        } else {\n          newCompletedStages.push(completion);\n        }\n\n        return { ...prev, completedStages: newCompletedStages };\n      });\n    } else {\n      // On defeat, refund some energy (50%)\n      const energyRefund = Math.floor(stage.energyCost * 0.5);\n      setPlayerData(prev => ({\n        ...prev,\n        energy: Math.min(prev.maxEnergy, prev.energy + energyRefund)\n      }));\n    }\n\n    const results: StageResults = {\n      victory,\n      score: gameState.battleState.score,\n      starsEarned,\n      timeBonus: victory ? Math.max(0, 300 - gameState.battleState.battleTime) : 0,\n      rewards: victory ? rewards : [{ type: 'gold', amount: Math.floor(gameState.battleState.score / 100) }], // Small consolation reward\n      newUnlocks: victory && gameState.selectedStage === playerData.unlockedStages ? \n        [`Stage ${gameState.selectedStage + 1} Unlocked!`] : []\n    };\n\n    // Show results screen with a delay\n    setTimeout(() => {\n      setGameState(prev => ({\n        ...prev,\n        currentScene: victory ? 'stageComplete' : 'stageFailed',\n        stageResults: results\n      }));\n    }, 1000);\n\n    onAction(victory ? 'stage_victory' : 'stage_defeat', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      stage_name: stage.name,\n      final_score: gameState.battleState.score,\n      stars_earned: starsEarned,\n      battle_time: gameState.battleState.battleTime,\n      towers_built: gameState.battleState.towers.length,\n      waves_completed: gameState.battleState.wave,\n      enemies_defeated: gameState.battleState.towers.reduce((sum, tower) => sum + tower.kills, 0),\n      gold_gained: victory ? rewards.find(r => r.type === 'gold')?.amount || 0 : Math.floor(gameState.battleState.score / 100),\n      exp_gained: victory ? rewards.find(r => r.type === 'exp')?.amount || 0 : 0,\n      new_unlocks: results.newUnlocks,\n      failure_reason: victory ? null : gameState.battleState.lives <= 0 ? 'lives_depleted' : 'unknown'\n    });\n  };\n\n  const calculateStars = (): number => {\n    const baseScore = gameState.battleState.score;\n    const timeBonus = Math.max(0, 300 - gameState.battleState.battleTime);\n    const livesBonus = gameState.battleState.lives * 10;\n    \n    const totalScore = baseScore + timeBonus + livesBonus;\n    \n    if (totalScore >= 1000) return 3;\n    if (totalScore >= 500) return 2;\n    return 1;\n  };\n\n  const handleShopClick = (x: number, y: number) => {\n    // Category tabs\n    const categories = ['tower', 'utility', 'premium'];\n    categories.forEach((category, index) => {\n      const tabX = 80 + index * 150;\n      if (x >= tabX && x <= tabX + 140 && y >= 50 && y <= 80) {\n        setGameState(prev => ({ ...prev, shopCategory: category as any }));\n      }\n    });\n\n    // Shop items\n    const categoryItems = shopItems.filter(item => item.category === gameState.shopCategory);\n    categoryItems.forEach((item, index) => {\n      const itemX = 80 + (index % 2) * 220;\n      const itemY = 100 + Math.floor(index / 2) * 100;\n      \n      if (x >= itemX && x <= itemX + 200 && y >= itemY && y <= itemY + 90) {\n        purchaseItem(item);\n      }\n    });\n\n    // Back button\n    if (x >= 50 && x <= 150 && y >= 350 && y <= 380) {\n      setGameState(prev => ({ ...prev, currentScene: 'lobby' }));\n    }\n  };\n\n  const handleInventoryClick = (x: number, y: number) => {\n    // Inventory items\n    const itemsPerRow = 5;\n    const startY = 100;\n    \n    playerData.inventory.forEach((item, index) => {\n      const itemX = 50 + (index % itemsPerRow) * 100;\n      const itemY = startY + Math.floor(index / itemsPerRow) * 80;\n      \n      if (x >= itemX && x <= itemX + 80 && y >= itemY && y <= itemY + 60) {\n        useInventoryItem(item);\n      }\n    });\n\n    // Back button\n    if (x >= 50 && x <= 150 && y >= 350 && y <= 380) {\n      setGameState(prev => ({ ...prev, currentScene: 'lobby' }));\n    }\n  };\n\n  const purchaseItem = (item: ShopItem) => {\n    // Check requirements\n    if (item.requirements) {\n      if (item.requirements.level && playerData.level < item.requirements.level) {\n        onAction('purchase_failed', {\n          player_id: playerData.id,\n          item_id: item.id,\n          reason: 'level_requirement',\n          required_level: item.requirements.level,\n          current_level: playerData.level\n        });\n        return;\n      }\n      \n      if (item.requirements.completedStages && playerData.completedStages.length < item.requirements.completedStages) {\n        onAction('purchase_failed', {\n          player_id: playerData.id,\n          item_id: item.id,\n          reason: 'stage_requirement',\n          required_stages: item.requirements.completedStages,\n          completed_stages: playerData.completedStages.length\n        });\n        return;\n      }\n    }\n\n    // Check currency\n    const hasEnoughCurrency = item.currency === 'gold' ? \n      playerData.gold >= item.price : \n      playerData.gems >= item.price;\n    \n    if (!hasEnoughCurrency) {\n      onAction('purchase_failed', {\n        player_id: playerData.id,\n        item_id: item.id,\n        reason: 'insufficient_currency',\n        required_amount: item.price,\n        current_amount: item.currency === 'gold' ? playerData.gold : playerData.gems,\n        currency: item.currency\n      });\n      return;\n    }\n\n    // Process purchase\n    if (item.currency === 'gold') {\n      setPlayerData(prev => ({ ...prev, gold: prev.gold - item.price }));\n    } else {\n      setPlayerData(prev => ({ ...prev, gems: prev.gems - item.price }));\n    }\n\n    // Add to inventory or apply effect\n    if (item.type === 'consumable' || item.type === 'tower_upgrade') {\n      const inventoryItem: InventoryItem = {\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: 'common',\n        quantity: 1,\n        stats: item.effect,\n        description: item.description,\n        price: item.price,\n        sellPrice: Math.floor(item.price * 0.5)\n      };\n      \n      setPlayerData(prev => {\n        const existingIndex = prev.inventory.findIndex(i => i.id === item.id);\n        if (existingIndex >= 0) {\n          const newInventory = [...prev.inventory];\n          newInventory[existingIndex].quantity += 1;\n          return { ...prev, inventory: newInventory };\n        } else {\n          return { ...prev, inventory: [...prev.inventory, inventoryItem] };\n        }\n      });\n    }\n\n    onAction('item_purchased', {\n      player_id: playerData.id,\n      item_id: item.id,\n      item_name: item.name,\n      price: item.price,\n      currency: item.currency,\n      remaining_gold: item.currency === 'gold' ? playerData.gold - item.price : playerData.gold,\n      remaining_gems: item.currency === 'gem' ? playerData.gems - item.price : playerData.gems\n    });\n  };\n\n  const useInventoryItem = (item: InventoryItem) => {\n    if (item.quantity <= 0) return;\n    \n    // Apply item effect based on type\n    switch (item.stats?.type) {\n      case 'restore_energy':\n        setPlayerData(prev => ({\n          ...prev,\n          energy: Math.min(prev.maxEnergy, prev.energy + item.stats.value)\n        }));\n        break;\n      // Other consumable effects would be applied in battle\n    }\n\n    // Reduce quantity\n    if (item.type === 'consumable') {\n      setPlayerData(prev => ({\n        ...prev,\n        inventory: prev.inventory.map(i => \n          i.id === item.id ? { ...i, quantity: i.quantity - 1 } : i\n        ).filter(i => i.quantity > 0)\n      }));\n    }\n\n    onAction('item_used', {\n      player_id: playerData.id,\n      item_id: item.id,\n      item_name: item.name,\n      effect: item.stats\n    });\n  };\n\n  const handleResultsClick = (x: number, y: number) => {\n    // Continue button\n    if (x >= 200 && x <= 400 && y >= 300 && y <= 350) {\n      returnToLobby();\n    }\n\n    // Retry button (only for failures)\n    if (!gameState.stageResults?.victory && x >= 100 && x <= 200 && y >= 320 && y <= 350) {\n      retryStage();\n    }\n  };\n\n  const returnToLobby = () => {\n    setGameState(prev => ({\n      ...prev,\n      currentScene: 'lobby',\n      stageResults: null,\n      selectedStage: null,\n      battleState: {\n        wave: 1,\n        lives: 20,\n        score: 0,\n        isWaveActive: false,\n        towers: [],\n        enemies: [],\n        projectiles: [],\n        waveProgress: 0,\n        battleTime: 0,\n        totalEnemies: 0,\n        enemiesSpawned: 0,\n        nextEnemySpawn: 0\n      },\n      selectedTower: null,\n      selectedTowerType: null,\n      isPaused: false,\n      showUpgradeMenu: false\n    }));\n\n    onAction('returned_to_lobby', {\n      player_id: playerData.id,\n      from_scene: gameState.stageResults?.victory ? 'stage_complete' : 'stage_failed',\n      player_level: playerData.level,\n      total_gold: playerData.gold,\n      total_energy: playerData.energy\n    });\n  };\n\n  const retryStage = () => {\n    if (!gameState.selectedStage) return;\n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage || playerData.energy < stage.energyCost) return;\n\n    // Consume energy again\n    setPlayerData(prev => ({ ...prev, energy: prev.energy - stage.energyCost }));\n\n    // Reset battle state\n    setGameState(prev => ({\n      ...prev,\n      currentScene: 'battle',\n      stageResults: null,\n      battleState: {\n        wave: 1,\n        lives: 20,\n        score: 0,\n        isWaveActive: false,\n        towers: [],\n        enemies: [],\n        projectiles: [],\n        waveProgress: 0,\n        battleTime: 0,\n        totalEnemies: 8 + 1 * 2,\n        enemiesSpawned: 0,\n        nextEnemySpawn: 0\n      },\n      selectedTower: null,\n      selectedTowerType: null,\n      isPaused: false,\n      showUpgradeMenu: false\n    }));\n\n    onAction('stage_retried', {\n      player_id: playerData.id,\n      stage_id: gameState.selectedStage,\n      stage_name: stage.name,\n      energy_cost: stage.energyCost,\n      remaining_energy: playerData.energy - stage.energyCost\n    });\n  };\n\n  // Game loop updates\n  const updateBattle = useCallback(() => {\n    if (gameState.currentScene !== 'battle' || gameState.isPaused) return;\n\n    // Update battle time\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        battleTime: prev.battleState.battleTime + 1\n      }\n    }));\n\n    // Spawn enemies if wave is active\n    if (gameState.battleState.isWaveActive && \n        frameCount >= gameState.battleState.nextEnemySpawn &&\n        gameState.battleState.enemiesSpawned < gameState.battleState.totalEnemies) {\n      spawnSingleEnemy();\n    }\n\n    // Update enemies\n    updateEnemies();\n    \n    // Update towers\n    updateTowers();\n\n    // Update projectiles\n    updateProjectiles();\n\n    // Check win/lose conditions\n    checkBattleEnd();\n  }, [gameState.currentScene, gameState.battleState.isWaveActive, gameState.isPaused, frameCount]);\n\n  const updateEnemies = () => {\n    if (!gameState.selectedStage) return;\n    \n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return;\n\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        enemies: prev.battleState.enemies.map(enemy => {\n          if (!enemy.alive) return enemy;\n\n          // Update slow effect\n          let currentSpeed = enemy.speed;\n          if (enemy.slowDuration > 0) {\n            currentSpeed *= 0.5; // 50% speed reduction\n            enemy.slowDuration--;\n          }\n\n          const currentTarget = stage.path[enemy.pathIndex + 1];\n          if (currentTarget) {\n            const dx = currentTarget.x - enemy.x;\n            const dy = currentTarget.y - enemy.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < 5) {\n              enemy.pathIndex++;\n              if (enemy.pathIndex >= stage.path.length - 1) {\n                // Enemy reached end\n                setGameState(prev2 => ({\n                  ...prev2,\n                  battleState: {\n                    ...prev2.battleState,\n                    lives: prev2.battleState.lives - 1\n                  }\n                }));\n\n                onAction('life_lost', {\n                  player_id: playerData.id,\n                  stage_id: gameState.selectedStage,\n                  enemy_type: enemy.type,\n                  remaining_lives: gameState.battleState.lives - 1,\n                  wave_number: gameState.battleState.wave\n                });\n\n                return { ...enemy, alive: false };\n              }\n            } else {\n              const moveX = (dx / distance) * currentSpeed;\n              const moveY = (dy / distance) * currentSpeed;\n              enemy.x += moveX;\n              enemy.y += moveY;\n            }\n          }\n\n          return enemy;\n        }).filter(enemy => enemy.alive || enemy.pathIndex < stage.path.length - 1)\n      }\n    }));\n  };\n\n  const updateProjectiles = () => {\n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        projectiles: prev.battleState.projectiles.filter(proj => {\n          // Update trail\n          proj.trail.push({ x: proj.x, y: proj.y });\n          if (proj.trail.length > 5) {\n            proj.trail.shift();\n          }\n\n          // Move projectile towards target\n          const dx = proj.targetX - proj.x;\n          const dy = proj.targetY - proj.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < 10) {\n            // Hit target - apply damage\n            hitTarget(proj);\n            return false; // Remove projectile\n          }\n\n          // Move projectile\n          const moveX = (dx / distance) * proj.speed;\n          const moveY = (dy / distance) * proj.speed;\n          proj.x += moveX;\n          proj.y += moveY;\n\n          return true; // Keep projectile\n        })\n      }\n    }));\n  };\n\n  const hitTarget = (projectile: Projectile) => {\n    const targetEnemy = gameState.battleState.enemies.find(e => e.id === projectile.targetId);\n    if (!targetEnemy || !targetEnemy.alive) return;\n\n    const actualDamage = Math.max(1, projectile.damage - targetEnemy.armor);\n    \n    setGameState(prev => ({\n      ...prev,\n      battleState: {\n        ...prev.battleState,\n        enemies: prev.battleState.enemies.map(enemy => {\n          if (enemy.id === targetEnemy.id) {\n            const newHealth = Math.max(0, enemy.health - actualDamage);\n            const killed = newHealth <= 0;\n\n            // Apply tower effects\n            if (projectile.effects.includes('slow')) {\n              enemy.slowDuration = 180; // 3 seconds at 60fps\n            }\n\n            if (killed) {\n              // Apply rewards\n              const goldGain = enemy.reward.find(r => r.type === 'gold')?.amount || 0;\n              const expGain = enemy.reward.find(r => r.type === 'exp')?.amount || 0;\n              \n              setPlayerData(prev2 => ({\n                ...prev2,\n                gold: prev2.gold + goldGain,\n                experience: prev2.experience + expGain\n              }));\n\n              setGameState(prev2 => ({\n                ...prev2,\n                battleState: {\n                  ...prev2.battleState,\n                  score: prev2.battleState.score + goldGain * 10,\n                  towers: prev2.battleState.towers.map(t => \n                    t.id === projectile.towerId ? { \n                      ...t, \n                      kills: t.kills + 1,\n                      experience: t.experience + expGain\n                    } : t\n                  )\n                }\n              }));\n\n              onAction('enemy_defeated', {\n                player_id: playerData.id,\n                stage_id: gameState.selectedStage,\n                enemy_type: enemy.type,\n                enemy_id: enemy.id,\n                tower_type: projectile.type,\n                tower_id: projectile.towerId,\n                damage_dealt: actualDamage,\n                gold_gained: goldGain,\n                exp_gained: expGain,\n                wave_number: gameState.battleState.wave\n              });\n\n              return { ...enemy, health: 0, alive: false };\n            } else {\n              onAction('enemy_damaged', {\n                player_id: playerData.id,\n                stage_id: gameState.selectedStage,\n                enemy_type: enemy.type,\n                enemy_id: enemy.id,\n                tower_type: projectile.type,\n                damage_dealt: actualDamage,\n                enemy_health_remaining: newHealth,\n                wave_number: gameState.battleState.wave\n              });\n\n              return { ...enemy, health: newHealth };\n            }\n          }\n\n          // Chain lightning effect\n          if (projectile.effects.includes('chain') && enemy.id !== targetEnemy.id && enemy.alive) {\n            const distance = Math.sqrt((enemy.x - targetEnemy.x) ** 2 + (enemy.y - targetEnemy.y) ** 2);\n            if (distance < 80) {\n              const chainDamage = Math.floor(projectile.damage * 0.6);\n              const actualChainDamage = Math.max(1, chainDamage - enemy.armor);\n              const newHealth = Math.max(0, enemy.health - actualChainDamage);\n              \n              return { ...enemy, health: newHealth, alive: newHealth > 0 };\n            }\n          }\n\n          return enemy;\n        })\n      }\n    }));\n\n    // Splash damage for cannon\n    if (projectile.effects.includes('splash')) {\n      const splashTargets = gameState.battleState.enemies.filter(enemy => {\n        if (enemy.id === targetEnemy.id || !enemy.alive) return false;\n        const distance = Math.sqrt((enemy.x - targetEnemy.x) ** 2 + (enemy.y - targetEnemy.y) ** 2);\n        return distance < 60;\n      });\n\n      splashTargets.forEach(enemy => {\n        const splashDamage = Math.floor(projectile.damage * 0.5);\n        const actualSplashDamage = Math.max(1, splashDamage - enemy.armor);\n        \n        setGameState(prev => ({\n          ...prev,\n          battleState: {\n            ...prev.battleState,\n            enemies: prev.battleState.enemies.map(e => \n              e.id === enemy.id ? { \n                ...e, \n                health: Math.max(0, e.health - actualSplashDamage),\n                alive: e.health - actualSplashDamage > 0\n              } : e\n            )\n          }\n        }));\n      });\n    }\n  };\n\n  const updateTowers = () => {\n    gameState.battleState.towers.forEach(tower => {\n      if (frameCount - tower.lastAttack < tower.attackSpeed) return;\n\n      const enemiesInRange = gameState.battleState.enemies.filter(enemy => {\n        if (!enemy.alive) return false;\n        const distance = Math.sqrt((enemy.x - tower.x) ** 2 + (enemy.y - tower.y) ** 2);\n        return distance <= tower.range;\n      });\n\n      if (enemiesInRange.length > 0) {\n        const target = enemiesInRange.reduce((best, current) => \n          current.pathIndex > best.pathIndex ? current : best\n        );\n\n        // Create projectile\n        const newProjectile: Projectile = {\n          id: `proj_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n          x: tower.x,\n          y: tower.y,\n          targetX: target.x,\n          targetY: target.y,\n          targetId: target.id,\n          speed: 8,\n          damage: tower.damage,\n          type: tower.type,\n          towerId: tower.id,\n          effects: towerTypes[tower.type as keyof typeof towerTypes].effects,\n          trail: []\n        };\n\n        setGameState(prev => ({\n          ...prev,\n          battleState: {\n            ...prev.battleState,\n            projectiles: [...prev.battleState.projectiles, newProjectile],\n            towers: prev.battleState.towers.map(t => \n              t.id === tower.id ? { ...t, lastAttack: frameCount } : t\n            )\n          }\n        }));\n\n        onAction('tower_attack', {\n          player_id: playerData.id,\n          stage_id: gameState.selectedStage,\n          tower_id: tower.id,\n          tower_type: tower.type,\n          target_enemy_id: target.id,\n          damage: tower.damage,\n          wave_number: gameState.battleState.wave\n        });\n      }\n    });\n  };\n\n  const checkBattleEnd = () => {\n    if (gameState.battleState.lives <= 0) {\n      completeStage(false);\n      return;\n    }\n\n    const aliveEnemies = gameState.battleState.enemies.filter(e => e.alive);\n    const allEnemiesSpawned = gameState.battleState.enemiesSpawned >= gameState.battleState.totalEnemies;\n    \n    if (aliveEnemies.length === 0 && allEnemiesSpawned && gameState.battleState.isWaveActive) {\n      if (gameState.battleState.wave >= 3) {\n        completeStage(true);\n      } else {\n        // Next wave\n        const nextWave = gameState.battleState.wave + 1;\n        const nextTotalEnemies = 8 + nextWave * 2;\n        \n        setGameState(prev => ({\n          ...prev,\n          battleState: {\n            ...prev.battleState,\n            wave: nextWave,\n            isWaveActive: false,\n            waveProgress: 0,\n            totalEnemies: nextTotalEnemies,\n            enemiesSpawned: 0,\n            nextEnemySpawn: 0\n          }\n        }));\n\n        // Wave completion bonus\n        const bonusGold = 25 + gameState.battleState.wave * 15;\n        setPlayerData(prev => ({\n          ...prev,\n          gold: prev.gold + bonusGold\n        }));\n\n        onAction('wave_completed', {\n          player_id: playerData.id,\n          stage_id: gameState.selectedStage,\n          wave_number: gameState.battleState.wave,\n          bonus_gold: bonusGold,\n          total_gold: playerData.gold + bonusGold,\n          score: gameState.battleState.score,\n          towers_count: gameState.battleState.towers.length\n        });\n      }\n    }\n  };\n\n  // Drawing functions\n  const drawLobby = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Background\n    ctx.fillStyle = '#1a1a2e';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Title\n    ctx.fillStyle = '#FFD700';\n    ctx.font = 'bold 32px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🏰 TOWER DEFENSE', canvas.width / 2, 80);\n\n    // Player info panel\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.fillRect(50, 100, 500, 80);\n    \n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`${playerData.name} - Level ${playerData.level}`, 70, 125);\n    ctx.fillText(`Gold: ${playerData.gold} | Gems: ${playerData.gems}`, 70, 145);\n    ctx.fillText(`Energy: ${playerData.energy}/${playerData.maxEnergy}`, 70, 165);\n    \n    // Experience bar\n    const expNeeded = playerData.level * 100;\n    const expPercent = playerData.experience / expNeeded;\n    ctx.fillStyle = '#444';\n    ctx.fillRect(350, 140, 180, 12);\n    ctx.fillStyle = '#FFD700';\n    ctx.fillRect(350, 140, 180 * expPercent, 12);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '12px Arial';\n    ctx.fillText(`EXP: ${playerData.experience}/${expNeeded}`, 355, 150);\n\n    // Menu buttons\n    const buttons = [\n      { text: '⚔️ DUNGEON', x: 250, y: 200, w: 100, h: 50 },\n      { text: '🛒 SHOP', x: 100, y: 300, w: 100, h: 50 },\n      { text: '🎒 INVENTORY', x: 400, y: 300, w: 100, h: 50 }\n    ];\n\n    buttons.forEach(button => {\n      ctx.fillStyle = 'rgba(74, 144, 226, 0.8)';\n      ctx.fillRect(button.x, button.y, button.w, button.h);\n      \n      ctx.strokeStyle = '#FFFFFF';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(button.x, button.y, button.w, button.h);\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = 'bold 14px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(button.text, button.x + button.w/2, button.y + button.h/2 + 5);\n    });\n  };\n\n  const drawDungeon = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Background\n    ctx.fillStyle = '#0f1419';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Title\n    ctx.fillStyle = '#FFD700';\n    ctx.font = 'bold 24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🗡️ DUNGEON SELECT', canvas.width / 2, 40);\n\n    // Stage cards\n    stageDefinitions.forEach((stage, index) => {\n      const x = 50 + (index % 3) * 200;\n      const y = 70 + Math.floor(index / 3) * 120;\n      \n      const isUnlocked = stage.id <= playerData.unlockedStages;\n      const hasEnergy = playerData.energy >= stage.energyCost;\n      const canEnter = isUnlocked && hasEnergy;\n\n      // Stage card background\n      ctx.fillStyle = canEnter ? 'rgba(74, 144, 226, 0.8)' : 'rgba(100, 100, 100, 0.5)';\n      ctx.fillRect(x, y, 150, 100);\n      \n      ctx.strokeStyle = canEnter ? '#4a90e2' : '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, 150, 100);\n\n      // Stage info\n      ctx.fillStyle = canEnter ? '#FFFFFF' : '#999';\n      ctx.font = 'bold 14px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(`Stage ${stage.id}`, x + 75, y + 20);\n      \n      ctx.font = '12px Arial';\n      ctx.fillText(stage.name, x + 75, y + 35);\n      ctx.fillText(stage.difficulty, x + 75, y + 50);\n      ctx.fillText(`Energy: ${stage.energyCost}`, x + 75, y + 65);\n      ctx.fillText(`Lv.${stage.recommendedLevel} Rec.`, x + 75, y + 80);\n\n      // Lock indicator\n      if (!isUnlocked) {\n        ctx.fillStyle = '#FF0000';\n        ctx.font = 'bold 20px Arial';\n        ctx.fillText('🔒', x + 75, y + 55);\n      }\n\n      // Completion stars\n      const completed = playerData.completedStages.find(c => c.stageId === stage.id);\n      if (completed) {\n        for (let i = 0; i < completed.starsEarned; i++) {\n          ctx.fillStyle = '#FFD700';\n          ctx.font = '16px Arial';\n          ctx.fillText('⭐', x + 20 + i * 20, y + 95);\n        }\n      }\n    });\n\n    // Back button\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.8)';\n    ctx.fillRect(50, 350, 100, 30);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('← BACK', 100, 370);\n  };\n\n  const drawBattle = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    if (!gameState.selectedStage) return;\n    \n    const stage = stageDefinitions.find(s => s.id === gameState.selectedStage);\n    if (!stage) return;\n\n    // Background\n    ctx.fillStyle = stage.background;\n    ctx.fillRect(0, 0, canvas.width, 320);\n\n    // Draw path\n    ctx.strokeStyle = '#8B4513';\n    ctx.lineWidth = 20;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    ctx.beginPath();\n    ctx.moveTo(stage.path[0].x, stage.path[0].y);\n    stage.path.slice(1).forEach(point => {\n      ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n\n    ctx.strokeStyle = '#DEB887';\n    ctx.lineWidth = 12;\n    ctx.beginPath();\n    ctx.moveTo(stage.path[0].x, stage.path[0].y);\n    stage.path.slice(1).forEach(point => {\n      ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n\n    // Draw towers\n    gameState.battleState.towers.forEach(tower => {\n      const config = towerTypes[tower.type as keyof typeof towerTypes];\n      const isSelected = gameState.selectedTower?.id === tower.id;\n      \n      // Tower base\n      ctx.fillStyle = isSelected ? '#FFD700' : '#696969';\n      ctx.beginPath();\n      ctx.arc(tower.x, tower.y, 18, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Tower body\n      ctx.fillStyle = config.color;\n      ctx.beginPath();\n      ctx.arc(tower.x, tower.y, 14, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Tower icon\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(config.icon, tower.x, tower.y + 4);\n\n      // Level indicator\n      ctx.fillStyle = '#FFD700';\n      ctx.font = '10px Arial';\n      ctx.fillText(`Lv.${tower.level}`, tower.x, tower.y - 25);\n\n      // Range for selected tower\n      if (isSelected) {\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([5, 5]);\n        ctx.beginPath();\n        ctx.arc(tower.x, tower.y, tower.range, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.setLineDash([]);\n      }\n    });\n\n    // Draw enemies\n    gameState.battleState.enemies.forEach(enemy => {\n      if (!enemy.alive) return;\n\n      const config = enemyTypes[enemy.type as keyof typeof enemyTypes];\n      const size = config.size;\n      \n      // Enemy shadow\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n      ctx.beginPath();\n      ctx.ellipse(enemy.x + 2, enemy.y + 2, size * 0.8, size * 0.4, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      \n      // Enemy body with slow effect\n      if (enemy.slowDuration > 0) {\n        ctx.fillStyle = '#87CEEB'; // Light blue for slow effect\n        ctx.beginPath();\n        ctx.arc(enemy.x, enemy.y, size + 3, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n      \n      ctx.fillStyle = config.color;\n      ctx.beginPath();\n      ctx.arc(enemy.x, enemy.y, size, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Enemy border\n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Enemy icon\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = `${Math.max(10, size)}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.fillText(config.icon, enemy.x, enemy.y + 4);\n\n      // Health bar\n      const barWidth = size * 1.5;\n      const barHeight = 4;\n      const healthPercent = enemy.health / enemy.maxHealth;\n      \n      ctx.fillStyle = '#000000';\n      ctx.fillRect(enemy.x - barWidth/2 - 1, enemy.y - size - 12, barWidth + 2, barHeight + 2);\n      ctx.fillStyle = '#FF0000';\n      ctx.fillRect(enemy.x - barWidth/2, enemy.y - size - 11, barWidth, barHeight);\n      ctx.fillStyle = healthPercent > 0.5 ? '#00FF00' : healthPercent > 0.25 ? '#FFFF00' : '#FF8800';\n      ctx.fillRect(enemy.x - barWidth/2, enemy.y - size - 11, barWidth * healthPercent, barHeight);\n      \n      // Armor indicator\n      if (enemy.armor > 0) {\n        ctx.fillStyle = '#C0C0C0';\n        ctx.font = '8px Arial';\n        ctx.fillText(`🛡${enemy.armor}`, enemy.x, enemy.y - size - 16);\n      }\n    });\n\n    // Draw projectiles\n    gameState.battleState.projectiles.forEach(proj => {\n      const config = towerTypes[proj.type as keyof typeof towerTypes];\n      \n      // Draw trail\n      proj.trail.forEach((point, index) => {\n        const alpha = (index + 1) / proj.trail.length * 0.5;\n        ctx.fillStyle = `rgba(255, 255, 255, ${alpha})`;\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, 2, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n      \n      // Draw projectile based on type\n      switch (proj.type) {\n        case 'archer':\n          ctx.fillStyle = '#8B4513';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 3, 0, 2 * Math.PI);\n          ctx.fill();\n          break;\n        case 'cannon':\n          ctx.fillStyle = '#000000';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 5, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.fillStyle = '#FF4500';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 3, 0, 2 * Math.PI);\n          ctx.fill();\n          break;\n        case 'magic':\n          ctx.fillStyle = '#9400D3';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 4, 0, 2 * Math.PI);\n          ctx.fill();\n          // Magic sparkle effect\n          for (let i = 0; i < 3; i++) {\n            const angle = (frameCount * 0.1 + i * Math.PI * 2 / 3) % (Math.PI * 2);\n            const sparkleX = proj.x + Math.cos(angle) * 8;\n            const sparkleY = proj.y + Math.sin(angle) * 8;\n            ctx.fillStyle = '#DDA0DD';\n            ctx.beginPath();\n            ctx.arc(sparkleX, sparkleY, 1, 0, 2 * Math.PI);\n            ctx.fill();\n          }\n          break;\n        case 'ice':\n          ctx.fillStyle = '#00BFFF';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 4, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.fillStyle = '#E0FFFF';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 2, 0, 2 * Math.PI);\n          ctx.fill();\n          break;\n        case 'lightning':\n          ctx.strokeStyle = '#FFD700';\n          ctx.lineWidth = 3;\n          ctx.beginPath();\n          ctx.moveTo(proj.x - 4, proj.y);\n          ctx.lineTo(proj.x + 4, proj.y);\n          ctx.moveTo(proj.x, proj.y - 4);\n          ctx.lineTo(proj.x, proj.y + 4);\n          ctx.stroke();\n          \n          ctx.fillStyle = '#FFFF00';\n          ctx.beginPath();\n          ctx.arc(proj.x, proj.y, 3, 0, 2 * Math.PI);\n          ctx.fill();\n          break;\n      }\n    });\n\n    // UI Panel\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n    ctx.fillRect(0, 320, canvas.width, 80);\n\n    // Battle stats\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Stage ${gameState.selectedStage}: ${stage.name}`, 10, 340);\n    ctx.fillText(`Wave: ${gameState.battleState.wave}/3`, 10, 355);\n    ctx.fillText(`Lives: ${gameState.battleState.lives}`, 10, 370);\n    ctx.fillText(`Score: ${gameState.battleState.score}`, 10, 385);\n    ctx.fillText(`Gold: ${playerData.gold}`, 150, 340);\n    ctx.fillText(`Towers: ${gameState.battleState.towers.length}`, 150, 355);\n\n    // Tower selection buttons\n    Object.entries(towerTypes).forEach(([type, config], index) => {\n      const x = 300 + index * 60;\n      const y = 340;\n      const isSelected = gameState.selectedTowerType === type;\n      const canAfford = playerData.gold >= config.cost;\n\n      ctx.fillStyle = isSelected ? 'rgba(255, 255, 0, 0.5)' : \n                     canAfford ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 0, 0, 0.2)';\n      ctx.fillRect(x, y, 50, 50);\n\n      ctx.fillStyle = config.color;\n      ctx.beginPath();\n      ctx.arc(x + 25, y + 20, 12, 0, 2 * Math.PI);\n      ctx.fill();\n\n      ctx.fillStyle = canAfford ? '#FFFFFF' : '#FF6666';\n      ctx.font = '10px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(`${index + 1}: $${config.cost}`, x + 25, y + 45);\n    });\n\n    // Wave control\n    if (!gameState.battleState.isWaveActive) {\n      ctx.fillStyle = 'rgba(0, 255, 0, 0.8)';\n      ctx.fillRect(450, 350, 100, 30);\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = 'bold 14px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('START WAVE', 500, 370);\n    }\n\n    // Pause button\n    ctx.fillStyle = 'rgba(255, 200, 0, 0.8)';\n    ctx.fillRect(560, 350, 30, 30);\n    ctx.fillStyle = '#000';\n    ctx.font = '16px Arial';\n    ctx.fillText('⏸', 575, 370);\n  };\n\n  const drawResults = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    if (!gameState.stageResults) return;\n\n    const results = gameState.stageResults;\n    \n    // Overlay with animation\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.9)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Results panel with glow effect\n    ctx.shadowColor = results.victory ? '#00FF00' : '#FF0000';\n    ctx.shadowBlur = 20;\n    ctx.fillStyle = 'rgba(30, 30, 30, 0.95)';\n    ctx.fillRect(80, 40, 440, 320);\n    \n    ctx.shadowBlur = 0;\n    ctx.strokeStyle = results.victory ? '#FFD700' : '#FF4444';\n    ctx.lineWidth = 3;\n    ctx.strokeRect(80, 40, 440, 320);\n\n    // Animated title\n    const titleScale = 1 + Math.sin(frameCount * 0.1) * 0.1;\n    ctx.save();\n    ctx.translate(300, 80);\n    ctx.scale(titleScale, titleScale);\n    ctx.fillStyle = results.victory ? '#00FF00' : '#FF0000';\n    ctx.font = 'bold 28px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(results.victory ? '🎉 VICTORY!' : '💀 DEFEAT!', 0, 0);\n    ctx.restore();\n\n    // Results with better formatting\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '18px Arial';\n    ctx.textAlign = 'left';\n    \n    let yPos = 120;\n    \n    // Score with icon\n    ctx.fillText(`🏆 Score: ${results.score.toLocaleString()}`, 100, yPos);\n    yPos += 30;\n    \n    if (results.victory) {\n      // Stars with animation\n      ctx.fillText('Stars Earned:', 100, yPos);\n      for (let i = 0; i < results.starsEarned; i++) {\n        const starScale = 1 + Math.sin((frameCount + i * 20) * 0.15) * 0.2;\n        ctx.save();\n        ctx.translate(250 + i * 30, yPos - 5);\n        ctx.scale(starScale, starScale);\n        ctx.font = '20px Arial';\n        ctx.fillText('⭐', 0, 0);\n        ctx.restore();\n      }\n      yPos += 35;\n      \n      // Rewards section\n      ctx.fillStyle = '#FFD700';\n      ctx.font = 'bold 16px Arial';\n      ctx.fillText('REWARDS:', 100, yPos);\n      yPos += 25;\n      \n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '14px Arial';\n      results.rewards.forEach(reward => {\n        const iconMap: Record<string, string> = { \n          gold: '💰', exp: '⭐', gem: '💎', item: '🎁' \n        };\n        const icon = iconMap[reward.type] || '🎁';\n        ctx.fillText(`${icon} +${reward.amount.toLocaleString()}`, 120, yPos);\n        yPos += 22;\n      });\n\n      if (results.newUnlocks.length > 0) {\n        yPos += 10;\n        ctx.fillStyle = '#FFD700';\n        ctx.font = 'bold 14px Arial';\n        results.newUnlocks.forEach(unlock => {\n          ctx.fillText(`🔓 ${unlock}`, 100, yPos);\n          yPos += 22;\n        });\n      }\n    } else {\n      // Defeat specific information\n      ctx.fillStyle = '#FFAAAA';\n      ctx.font = '16px Arial';\n      ctx.fillText(`💥 Wave Reached: ${gameState.battleState.wave}`, 100, yPos);\n      yPos += 25;\n      ctx.fillText(`🏰 Towers Built: ${gameState.battleState.towers.length}`, 100, yPos);\n      yPos += 25;\n      ctx.fillText(`💀 Enemies Defeated: ${gameState.battleState.towers.reduce((sum, tower) => sum + tower.kills, 0)}`, 100, yPos);\n      yPos += 30;\n      \n      // Consolation reward\n      if (results.rewards.length > 0) {\n        ctx.fillStyle = '#FFFF99';\n        ctx.font = '14px Arial';\n        ctx.fillText('Consolation Reward:', 100, yPos);\n        yPos += 20;\n        ctx.fillStyle = '#FFFFFF';\n        results.rewards.forEach(reward => {\n          ctx.fillText(`💰 +${reward.amount} Gold`, 120, yPos);\n          yPos += 20;\n        });\n      }\n    }\n\n    // Buttons\n    if (!results.victory) {\n      // Retry button (only for failures)\n      const hasEnergy = gameState.selectedStage ? \n        playerData.energy >= (stageDefinitions.find(s => s.id === gameState.selectedStage)?.energyCost || 0) : false;\n      \n      ctx.fillStyle = hasEnergy ? 'rgba(255, 165, 0, 0.8)' : 'rgba(128, 128, 128, 0.5)';\n      ctx.fillRect(100, 320, 120, 30);\n      ctx.strokeStyle = hasEnergy ? '#FFA500' : '#666666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(100, 320, 120, 30);\n      \n      ctx.fillStyle = hasEnergy ? '#FFFFFF' : '#AAAAAA';\n      ctx.font = 'bold 14px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(hasEnergy ? '🔄 RETRY' : 'NO ENERGY', 160, 340);\n    }\n    \n    // Continue button\n    ctx.fillStyle = 'rgba(74, 144, 226, 0.8)';\n    ctx.fillRect(results.victory ? 250 : 280, 320, 140, 30);\n    ctx.strokeStyle = '#4A90E2';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(results.victory ? 250 : 280, 320, 140, 30);\n    \n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🏠 LOBBY', results.victory ? 320 : 350, 340);\n    \n    // Instructions\n    ctx.fillStyle = '#CCCCCC';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('Click buttons to continue', 300, 370);\n  };\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    switch (gameState.currentScene) {\n      case 'lobby':\n        drawLobby(ctx, canvas);\n        break;\n      case 'dungeon':\n        drawDungeon(ctx, canvas);\n        break;\n      case 'battle':\n        drawBattle(ctx, canvas);\n        break;\n      case 'stageComplete':\n      case 'stageFailed':\n        drawBattle(ctx, canvas);\n        drawResults(ctx, canvas);\n        break;\n      case 'shop':\n        drawLobby(ctx, canvas);\n        // Add shop overlay\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = '#FFD700';\n        ctx.font = 'bold 24px Arial';\n        ctx.textAlign = 'center';\n        drawShop(ctx, canvas); return;\n        break;\n      case 'inventory':\n        drawLobby(ctx, canvas);\n        // Add inventory overlay\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = '#FFD700';\n        ctx.font = 'bold 24px Arial';\n        ctx.textAlign = 'center';\n        drawInventory(ctx, canvas); return;\n        break;\n    }\n  }, [gameState, playerData]);\n\n  const drawShop = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Background\n    ctx.fillStyle = '#1a1a2e';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Title\n    ctx.fillStyle = '#FFD700';\n    ctx.font = 'bold 24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🛍️ MAGIC SHOP', canvas.width / 2, 30);\n\n    // Player currency display\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`💰 Gold: ${playerData.gold.toLocaleString()}`, 50, 370);\n    ctx.fillText(`💎 Gems: ${playerData.gems.toLocaleString()}`, 200, 370);\n    ctx.fillText(`Level: ${playerData.level}`, 350, 370);\n\n    // Category tabs\n    const categories = [\n      { id: 'tower', name: 'TOWER UPGRADES', icon: '🏰' },\n      { id: 'utility', name: 'UTILITY', icon: '🧪' },\n      { id: 'premium', name: 'PREMIUM', icon: '✨' }\n    ];\n\n    categories.forEach((category, index) => {\n      const tabX = 80 + index * 150;\n      const isSelected = gameState.shopCategory === category.id;\n      \n      ctx.fillStyle = isSelected ? 'rgba(255, 215, 0, 0.8)' : 'rgba(100, 100, 100, 0.6)';\n      ctx.fillRect(tabX, 50, 140, 30);\n      \n      ctx.strokeStyle = isSelected ? '#FFD700' : '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(tabX, 50, 140, 30);\n      \n      ctx.fillStyle = isSelected ? '#000' : '#FFF';\n      ctx.font = 'bold 12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(`${category.icon} ${category.name}`, tabX + 70, 70);\n    });\n\n    // Shop items\n    const categoryItems = shopItems.filter(item => item.category === gameState.shopCategory);\n    \n    categoryItems.forEach((item, index) => {\n      const itemX = 80 + (index % 2) * 220;\n      const itemY = 100 + Math.floor(index / 2) * 100;\n      \n      // Check if player can afford and meets requirements\n      const canAfford = item.currency === 'gold' ? \n        playerData.gold >= item.price : \n        playerData.gems >= item.price;\n      \n      const meetsRequirements = !item.requirements || (\n        (!item.requirements.level || playerData.level >= item.requirements.level) &&\n        (!item.requirements.completedStages || playerData.completedStages.length >= item.requirements.completedStages)\n      );\n      \n      const canPurchase = canAfford && meetsRequirements;\n      \n      // Item background\n      ctx.fillStyle = canPurchase ? 'rgba(74, 144, 226, 0.8)' : 'rgba(100, 100, 100, 0.5)';\n      ctx.fillRect(itemX, itemY, 200, 90);\n      \n      ctx.strokeStyle = canPurchase ? '#4A90E2' : '#666';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(itemX, itemY, 200, 90);\n      \n      // Item info\n      ctx.fillStyle = canPurchase ? '#FFFFFF' : '#AAAAAA';\n      ctx.font = 'bold 14px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText(item.name, itemX + 10, itemY + 20);\n      \n      ctx.font = '11px Arial';\n      const words = item.description.split(' ');\n      let line = '';\n      let y = itemY + 35;\n      \n      words.forEach(word => {\n        const testLine = line + word + ' ';\n        const metrics = ctx.measureText(testLine);\n        if (metrics.width > 180 && line !== '') {\n          ctx.fillText(line, itemX + 10, y);\n          line = word + ' ';\n          y += 12;\n        } else {\n          line = testLine;\n        }\n      });\n      ctx.fillText(line, itemX + 10, y);\n      \n      // Price\n      ctx.fillStyle = canAfford ? '#00FF00' : '#FF6666';\n      ctx.font = 'bold 12px Arial';\n      const currencyIcon = item.currency === 'gold' ? '💰' : '💎';\n      ctx.fillText(`${currencyIcon} ${item.price}`, itemX + 10, itemY + 80);\n      \n      // Requirements warning\n      if (!meetsRequirements) {\n        ctx.fillStyle = '#FF6666';\n        ctx.font = '10px Arial';\n        if (item.requirements?.level && playerData.level < item.requirements.level) {\n          ctx.fillText(`Requires Level ${item.requirements.level}`, itemX + 100, itemY + 80);\n        }\n        if (item.requirements?.completedStages && playerData.completedStages.length < item.requirements.completedStages) {\n          ctx.fillText(`Complete ${item.requirements.completedStages} stages`, itemX + 100, itemY + 80);\n        }\n      }\n    });\n\n    // Back button\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.8)';\n    ctx.fillRect(50, 350, 100, 30);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('← BACK', 100, 370);\n  };\n\n  const drawInventory = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Background\n    ctx.fillStyle = '#2d1b69';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Title\n    ctx.fillStyle = '#FFD700';\n    ctx.font = 'bold 24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎒 INVENTORY', canvas.width / 2, 30);\n\n    // Player info\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Items: ${playerData.inventory.length}`, 50, 60);\n    ctx.fillText(`Total Value: ${playerData.inventory.reduce((sum, item) => sum + item.sellPrice * item.quantity, 0)} gold`, 200, 60);\n\n    // Inventory grid\n    const itemsPerRow = 5;\n    const startY = 100;\n    \n    playerData.inventory.forEach((item, index) => {\n      const itemX = 50 + (index % itemsPerRow) * 100;\n      const itemY = startY + Math.floor(index / itemsPerRow) * 80;\n      \n      // Rarity colors\n      const rarityColors = {\n        common: '#CCCCCC',\n        rare: '#0099FF',\n        epic: '#9933FF',\n        legendary: '#FF9900'\n      };\n      \n      // Item slot\n      ctx.fillStyle = 'rgba(50, 50, 50, 0.8)';\n      ctx.fillRect(itemX, itemY, 80, 60);\n      \n      ctx.strokeStyle = rarityColors[item.rarity];\n      ctx.lineWidth = 2;\n      ctx.strokeRect(itemX, itemY, 80, 60);\n      \n      // Item info\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = 'bold 10px Arial';\n      ctx.textAlign = 'center';\n      \n      // Truncate long names\n      const displayName = item.name.length > 10 ? item.name.substring(0, 8) + '...' : item.name;\n      ctx.fillText(displayName, itemX + 40, itemY + 15);\n      \n      // Type icon\n      const typeIcons = {\n        weapon: '⚔️',\n        armor: '🛡️',\n        consumable: '🧪',\n        material: '📎',\n        tower_upgrade: '⬆️',\n        blueprint: '📜'\n      };\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(typeIcons[item.type] || '❓', itemX + 40, itemY + 35);\n      \n      // Quantity\n      if (item.quantity > 1) {\n        ctx.fillStyle = '#FFD700';\n        ctx.font = 'bold 10px Arial';\n        ctx.fillText(`x${item.quantity}`, itemX + 65, itemY + 55);\n      }\n      \n      // Sell value\n      ctx.fillStyle = '#00FF00';\n      ctx.font = '8px Arial';\n      ctx.fillText(`💰${item.sellPrice}`, itemX + 5, itemY + 55);\n    });\n\n    // Instructions\n    ctx.fillStyle = '#CCCCCC';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('Click items to use/equip them', canvas.width / 2, 320);\n\n    // Back button\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.8)';\n    ctx.fillRect(50, 350, 100, 30);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('← BACK', 100, 370);\n  };\n\n  // Game loop\n  useEffect(() => {\n    const gameLoop = () => {\n      updateBattle();\n      draw();\n      setFrameCount(prev => prev + 1);\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    };\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n    };\n  }, [updateBattle, draw]);\n\n  // Event listeners\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      background: '#0a0a0a',\n      borderRadius: '12px',\n      padding: '16px',\n      border: '2px solid #2d3748',\n      maxHeight: '500px',\n      overflowY: 'auto',\n      overflowX: 'auto'\n    }}>\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={400}\n        style={{\n          border: '2px solid #4a5568',\n          borderRadius: '8px',\n          cursor: gameState.selectedTowerType ? 'crosshair' : 'pointer',\n          maxWidth: '100%',\n          height: 'auto'\n        }}\n        onClick={handleCanvasClick}\n        tabIndex={0}\n      />\n      \n      <div style={{\n        marginTop: '12px',\n        color: '#ffffff',\n        fontSize: '14px',\n        textAlign: 'center',\n        maxWidth: '600px',\n      }}>\n        <p>🏰 <strong>Complete Tower Defense RPG</strong></p>\n        <p>\n          {gameState.currentScene === 'lobby' && '로비에서 던전을 선택하세요!'}\n          {gameState.currentScene === 'dungeon' && '스테이지를 선택하세요!'}\n          {gameState.currentScene === 'battle' && `Stage ${gameState.selectedStage} - Space로 웨이브 시작!`}\n          {(gameState.currentScene === 'stageComplete' || gameState.currentScene === 'stageFailed') && '결과를 확인하고 계속하세요!'}\n        </p>\n        <p>Level {playerData.level} | Gold: {playerData.gold} | Energy: {playerData.energy}/{playerData.maxEnergy}</p>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}