{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{useTheme}from\"../contexts/ThemeContext\";import{useLanguage}from\"../contexts/LanguageContext\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export const AdvancedIdleRPG=_ref=>{let{onAction,isSimulating,currentAction,userStats,setUserStats,currentUser}=_ref;const{colors}=useTheme();const{t}=useLanguage();// Theme-based color scheme for RPG UI\nconst gameColors={// Main containers and backgrounds\nmainBg:colors.background,cardBg:colors.cardBg,cardBorder:colors.cardBorder,// Text colors - ensure high contrast\nprimaryText:colors.cardBg===\"#ffffff\"?\"#1f2937\":\"#f8fafc\",secondaryText:colors.cardBg===\"#ffffff\"?\"#6b7280\":\"#9ca3af\",// Game-specific colors that adapt to theme\npanelBg:colors.cardBg===\"#ffffff\"?\"#f8fafc\":\"#374151\",darkPanelBg:colors.cardBg===\"#ffffff\"?\"#e2e8f0\":\"#1f2937\",// Status colors (these remain consistent for game logic)\nhealth:\"#34d399\",mana:\"#a78bfa\",attack:\"#f87171\",defense:\"#60a5fa\",gold:\"#fbbf24\",exp:\"#f59e0b\",// Rarity colors (consistent across themes)\ncommon:\"#9ca3af\",uncommon:\"#10b981\",rare:\"#3b82f6\",epic:\"#8b5cf6\",legendary:\"#f59e0b\",mythic:\"#ef4444\",// Interactive elements\nbuttonBg:colors.cardBg===\"#ffffff\"?\"#3b82f6\":\"#4f46e5\",buttonText:\"#ffffff\",buttonHover:colors.cardBg===\"#ffffff\"?\"#2563eb\":\"#6366f1\",// Borders and dividers\nborder:colors.cardBorder,divider:colors.cardBg===\"#ffffff\"?\"#e5e7eb\":\"#4b5563\"};// 스킬 데미지 계산 함수\nconst calculateSkillDamage=(skill,character)=>{if(skill.level===0||!skill.isLearned)return 0;let damage=skill.baseDamage;// 레벨에 따른 데미지 증가\ndamage+=skill.baseDamage*skill.damageMultiplier*(skill.level-1);// 스탯에 따른 데미지 증가\nif(skill.statMultiplier.attack){damage+=character.attack*skill.statMultiplier.attack*skill.level;}if(skill.statMultiplier.defense){damage+=character.defense*skill.statMultiplier.defense*skill.level;}if(skill.statMultiplier.hp){damage+=character.maxHp*skill.statMultiplier.hp*skill.level;}if(skill.statMultiplier.mp){damage+=character.maxMp*skill.statMultiplier.mp*skill.level;}return Math.floor(damage);};// CSS 애니메이션 추가\nReact.useEffect(()=>{const style=document.createElement(\"style\");style.textContent=`\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;document.head.appendChild(style);return()=>{document.head.removeChild(style);};},[]);const[character,setCharacter]=useState({id:\"1\",name:\"용사\",level:1,exp:0,maxExp:100,hp:100,maxHp:100,mp:50,maxMp:50,attack:20,defense:10,speed:15,gold:100,class:t(\"rpg.class.warrior\"),skills:[// 기본 스킬들을 미리 정의하여 초기화 문제 방지\n{id:\"basic-attack\",name:\"기본 공격\",level:1,maxLevel:10,baseDamage:15,damageMultiplier:0.2,statMultiplier:{attack:1.0},manaCost:0,cooldown:1000,currentCooldown:0,type:\"active\",category:\"combat\",description:\"기본적인 물리 공격입니다.\",requiredLevel:1,isUnlocked:true,isLearned:true},{id:\"power-strike\",name:\"강력한 베기\",level:0,maxLevel:10,baseDamage:25,damageMultiplier:0.3,statMultiplier:{attack:1.5},manaCost:15,cooldown:3000,currentCooldown:0,type:\"active\",category:\"combat\",description:\"강력한 일격을 가합니다.\",requiredLevel:3,isUnlocked:true,isLearned:false},{id:\"heal\",name:\"치유\",level:0,maxLevel:10,baseDamage:30,damageMultiplier:0.25,statMultiplier:{mp:0.5},manaCost:20,cooldown:5000,currentCooldown:0,type:\"active\",category:\"support\",description:\"HP를 회복합니다.\",requiredLevel:2,isUnlocked:true,isLearned:false},{id:\"strength-boost\",name:t(\"rpg.skills.strengthBoost.name\"),level:0,maxLevel:5,baseDamage:0,damageMultiplier:0,statMultiplier:{attack:0.1},manaCost:0,cooldown:0,currentCooldown:0,type:\"passive\",category:\"passive\",description:t(\"rpg.skills.strengthBoost.description\"),requiredLevel:5,isUnlocked:true,isLearned:false}],equipment:{},stats:{strength:10,agility:8,intelligence:5,vitality:12,luck:7,availablePoints:0},prestige:0,rebirth:0,buffs:{attack:{amount:0,duration:0},defense:{amount:0,duration:0},speed:{amount:0,duration:0}}});const[currentTab,setCurrentTab]=useState(\"lobby\");const[gameMode,setGameMode]=useState(\"lobby\");const[isAutoFighting,setIsAutoFighting]=useState(false);const[currentMonster,setCurrentMonster]=useState(null);const[combatLog,setCombatLog]=useState([]);const[selectedDungeon,setSelectedDungeon]=useState(null);const[inventory,setInventory]=useState([]);const[availableDungeons,setAvailableDungeons]=useState([]);const[currentDungeon,setCurrentDungeon]=useState(null);const[inDungeon,setInDungeon]=useState(false);const[guild,setGuild]=useState(null);const[shop,setShop]=useState([]);const[achievements,setAchievements]=useState([]);const[monstersDefeated,setMonstersDefeated]=useState(0);const[totalGoldEarned,setTotalGoldEarned]=useState(0);const[showDungeonChoice,setShowDungeonChoice]=useState(false);const logRef=useRef(null);// 게임 초기화 - 언어 변경 시에도 다시 초기화\nuseEffect(()=>{initializeGame();},[t]);// 캐릭터 상태가 변경될 때마다 userStats 업데이트\nuseEffect(()=>{setUserStats({level:character.level,gold:character.gold,attack:character.attack,defense:character.defense,hp:character.hp,maxHp:character.maxHp,exp:character.exp,maxExp:character.maxExp,monsters_defeated:monstersDefeated,character_class:character.class,total_gold_earned:totalGoldEarned,inventory_items:inventory.map(item=>({id:item.id,name:item.name,type:item.type,rarity:item.rarity,quantity:item.quantity||1,stats:item.stats})),skills:character.skills.map(skill=>({id:skill.id,name:skill.name,level:skill.level,type:skill.type})),current_buffs:Object.entries(character.buffs).filter(_ref2=>{let[_,buff]=_ref2;return buff.duration>0;}).map(_ref3=>{let[type,buff]=_ref3;return{type,amount:buff.amount,duration:Math.ceil(buff.duration/1000)};})});},[character,inventory,monstersDefeated,totalGoldEarned,setUserStats]);const initializeGame=()=>{// LanguageContext에서 번역 함수 사용\nconst texts={character:{name:t(\"rpg.character.name\"),class:t(\"rpg.character.class\")},dungeon:{forest:{name:t(\"rpg.dungeon.forest.name\"),description:t(\"rpg.dungeon.forest.description\")},cave:{name:t(\"rpg.dungeon.cave.name\"),description:t(\"rpg.dungeon.cave.description\")},tower:{name:t(\"rpg.dungeon.tower.name\"),description:t(\"rpg.dungeon.tower.description\")}},monsters:{slime:t(\"rpg.monsters.slime\"),goblin:t(\"rpg.monsters.goblin\"),orc:t(\"rpg.monsters.orc\"),troll:t(\"rpg.monsters.troll\"),dragon:t(\"rpg.monsters.dragon\")},combat:{appeared:t(\"rpg.combat.appeared\"),attack:t(\"rpg.combat.attack\"),damage:t(\"rpg.combat.damage\"),critical:t(\"rpg.combat.critical\"),levelUp:t(\"rpg.combat.levelUp\"),defeated:t(\"rpg.combat.defeated\"),gold:t(\"rpg.combat.gold\"),itemObtained:t(\"rpg.combat.itemObtained\"),dungeonCleared:t(\"rpg.combat.dungeonCleared\"),nextFloor:t(\"rpg.combat.nextFloor\")}};// 모든 스킬 정의 함수 (공통 사용)\nconst getAllSkills=(currentLevel,existingSkills)=>{var _existingSkills$find;const allSkills=[// 전투 스킬 (레벨 1)\n{id:\"slash\",name:t(\"rpg.skills.slash.name\"),level:(existingSkills===null||existingSkills===void 0?void 0:(_existingSkills$find=existingSkills.find(s=>s.id===\"slash\"))===null||_existingSkills$find===void 0?void 0:_existingSkills$find.level)||0,maxLevel:10,baseDamage:20,damageMultiplier:0.5,statMultiplier:{attack:2.0},manaCost:10,cooldown:3000,currentCooldown:0,type:\"active\",category:\"combat\",description:t(\"rpg.skills.slash.description\"),requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},{id:\"heal\",name:t(\"rpg.skills.heal.name\"),level:0,maxLevel:10,baseDamage:30,damageMultiplier:0.3,statMultiplier:{mp:1.5},manaCost:15,cooldown:5000,currentCooldown:0,type:\"active\",category:\"support\",description:t(\"rpg.skills.heal.description\"),requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},{id:\"critical\",name:t(\"rpg.skills.critical.name\"),level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:\"passive\",category:\"passive\",description:t(\"rpg.skills.critical.description\"),requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},// 레벨 5 스킬\n{id:\"double_strike\",name:\"이중 공격\",level:0,maxLevel:10,baseDamage:25,damageMultiplier:0.4,statMultiplier:{attack:1.5},manaCost:20,cooldown:4000,currentCooldown:0,type:\"active\",category:\"combat\",description:\"연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)\",requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},{id:\"mana_shield\",name:\"마나 방패\",level:0,maxLevel:10,baseDamage:20,damageMultiplier:0.2,statMultiplier:{mp:1.0,defense:0.5},manaCost:25,cooldown:8000,currentCooldown:0,type:\"active\",category:\"magic\",description:\"마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)\",requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},{id:\"defense_mastery\",name:\"방어 숙련\",level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:\"passive\",category:\"passive\",description:\"방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)\",requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},// 레벨 10 스킬\n{id:\"whirlwind\",name:\"회오리 공격\",level:0,maxLevel:10,baseDamage:40,damageMultiplier:0.6,statMultiplier:{attack:1.8},manaCost:35,cooldown:6000,currentCooldown:0,type:\"active\",category:\"combat\",description:\"주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)\",requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},{id:\"regeneration\",name:\"재생\",level:0,maxLevel:10,baseDamage:50,damageMultiplier:0.4,statMultiplier:{hp:0.1,mp:2.0},manaCost:40,cooldown:12000,currentCooldown:0,type:\"active\",category:\"support\",description:\"지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)\",requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},{id:\"mp_efficiency\",name:\"마나 효율\",level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:\"passive\",category:\"passive\",description:\"모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)\",requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},// 레벨 15 스킬\n{id:\"meteor\",name:\"메테오\",level:0,maxLevel:10,baseDamage:80,damageMultiplier:1.0,statMultiplier:{mp:3.0,attack:1.0},manaCost:60,cooldown:10000,currentCooldown:0,type:\"active\",category:\"magic\",description:\"강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)\",requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false},{id:\"time_stop\",name:\"시간 정지\",level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{mp:1.0},manaCost:80,cooldown:15000,currentCooldown:0,type:\"active\",category:\"magic\",description:\"모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)\",requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false},{id:\"exp_boost\",name:t(\"rpg.skills.expAmplify.name\"),level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:\"passive\",category:\"passive\",description:t(\"rpg.skills.expAmplify.description\"),requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false}];// 해금된 스킬만 반환\nreturn allSkills.filter(skill=>skill.isUnlocked);};const initialSkills=getAllSkills(1);// 던전 초기화\nconst initialDungeons=[{id:\"forest\",name:texts.dungeon.forest.name,level:1,description:texts.dungeon.forest.description,floors:10,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[10,25],expRange:[15,30],itemDropChance:0.1},requiredLevel:1,isUnlocked:true},{id:\"cave\",name:texts.dungeon.cave.name,level:5,description:texts.dungeon.cave.description,floors:15,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[25,50],expRange:[40,75],itemDropChance:0.15},requiredLevel:5,isUnlocked:false},{id:\"tower\",name:texts.dungeon.tower.name,level:10,description:texts.dungeon.tower.description,floors:20,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[50,100],expRange:[80,150],itemDropChance:0.2},requiredLevel:10,isUnlocked:false},{id:\"abyss\",name:t(\"rpg.dungeon.abyss.name\"),level:20,description:t(\"rpg.dungeon.abyss.description\"),floors:50,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[100,200],expRange:[200,300],itemDropChance:0.3},requiredLevel:20,isUnlocked:false,isComingSoon:true// 업데이트 예정 플래그\n}];// 상점 아이템 초기화 (기본 아이템들)\nconst getShopItems=()=>{var _availableDungeons$fi;const baseItems=[{id:\"sword1\",name:t(\"rpg.items.sword1\"),type:\"weapon\",rarity:\"common\",level:1,stats:{attack:15},price:200,enhancement:0},{id:\"armor1\",name:t(\"rpg.items.armor1\"),type:\"armor\",rarity:\"common\",level:1,stats:{defense:10,hp:20},price:150,enhancement:0},{id:\"helmet1\",name:t(\"rpg.items.helmet1\"),type:\"helmet\",rarity:\"common\",level:1,stats:{defense:5,hp:15},price:100,enhancement:0},// 기본 물약들\n{id:\"health_potion\",name:t(\"rpg.items.health_potion\"),type:\"consumable\",rarity:\"common\",level:1,stats:{},price:50,enhancement:0,consumableEffect:{healHp:50},quantity:1},{id:\"mana_potion\",name:t(\"rpg.items.mana_potion\"),type:\"consumable\",rarity:\"common\",level:1,stats:{},price:40,enhancement:0,consumableEffect:{healMp:30},quantity:1}];// 고블린 동굴이 해금되면 고급 아이템 추가\nconst goblinCaveUnlocked=(_availableDungeons$fi=availableDungeons.find(d=>d.id===\"cave\"))===null||_availableDungeons$fi===void 0?void 0:_availableDungeons$fi.isUnlocked;if(goblinCaveUnlocked){baseItems.push(// 고급 장비\n{id:\"steel_sword\",name:t(\"rpg.items.enhanced_steel_sword\"),type:\"weapon\",rarity:\"rare\",level:3,stats:{attack:25},price:500,enhancement:0},{id:\"plate_armor\",name:\"판금 갑옷\",type:\"armor\",rarity:\"rare\",level:3,stats:{defense:20,hp:40},price:400,enhancement:0},{id:\"steel_helmet\",name:t(\"rpg.items.steel_helmet\"),type:\"helmet\",rarity:\"rare\",level:3,stats:{defense:12,hp:25},price:300,enhancement:0},// 고급 물약들\n{id:\"greater_health_potion\",name:t(\"rpg.items.greater_health_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:120,enhancement:0,consumableEffect:{healHp:120},quantity:1},{id:\"greater_mana_potion\",name:\"고급 마나 물약\",type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:100,enhancement:0,consumableEffect:{healMp:80},quantity:1},{id:\"strength_potion\",name:t(\"rpg.items.strength_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:\"attack\",buffAmount:10,buffDuration:30000},quantity:1},{id:\"defense_potion\",name:t(\"rpg.items.defense_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:\"defense\",buffAmount:8,buffDuration:30000},quantity:1});}return baseItems;};const shopItems=getShopItems();setCharacter(prev=>{// 기존 스킬이 있으면 보존하고, 없으면 새로 생성\nconst existingSkills=prev.skills&&prev.skills.length>0?prev.skills:initialSkills;// 새로운 스킬이 있으면 추가하되, 기존 스킬의 진행도는 보존\nconst mergedSkills=initialSkills.map(newSkill=>{const existingSkill=existingSkills.find(s=>s.id===newSkill.id);if(existingSkill){// 기존 스킬이 있으면 레벨과 학습 상태 보존\nreturn{...newSkill,level:existingSkill.level,isLearned:existingSkill.isLearned,isUnlocked:prev.level>=(newSkill.requiredLevel||1)};}return newSkill;});return{...prev,name:texts.character.name,class:texts.character.class,skills:mergedSkills};});setAvailableDungeons(initialDungeons);setShop(shopItems);// Store texts globally for other functions to use\nwindow.gameTexts=texts;// 던전에 있지 않을 때만 일반 몬스터 생성\nif(!inDungeon){spawnMonster();}};// 던전 해금 상태에 따른 상점 업데이트\nuseEffect(()=>{const updateShop=()=>{const getShopItems=()=>{var _availableDungeons$fi2,_availableDungeons$fi3;const baseItems=[{id:\"sword1\",name:t(\"rpg.items.steel_sword\"),type:\"weapon\",rarity:\"common\",level:1,stats:{attack:15},price:200,enhancement:0},{id:\"armor1\",name:t(\"rpg.items.leather_armor\"),type:\"armor\",rarity:\"common\",level:1,stats:{defense:10,hp:20},price:150,enhancement:0},{id:\"helmet1\",name:t(\"rpg.items.iron_helmet\"),type:\"helmet\",rarity:\"common\",level:1,stats:{defense:5,hp:15},price:100,enhancement:0},// 기본 물약들\n{id:\"health_potion\",name:t(\"rpg.items.health_potion\"),type:\"consumable\",rarity:\"common\",level:1,stats:{},price:50,enhancement:0,consumableEffect:{healHp:50},quantity:1},{id:\"mana_potion\",name:t(\"rpg.items.mana_potion\"),type:\"consumable\",rarity:\"common\",level:1,stats:{},price:40,enhancement:0,consumableEffect:{healMp:30},quantity:1}];// 고블린 동굴이 해금되면 고급 아이템 추가\nconst goblinCaveUnlocked=(_availableDungeons$fi2=availableDungeons.find(d=>d.id===\"cave\"))===null||_availableDungeons$fi2===void 0?void 0:_availableDungeons$fi2.isUnlocked;if(goblinCaveUnlocked){// 중복 방지: 이미 있는 아이템은 추가하지 않음\nconst existingIds=baseItems.map(item=>item.id);const newItems=[{id:\"steel_sword\",name:t(\"rpg.items.enhanced_steel_sword\"),type:\"weapon\",rarity:\"rare\",level:3,stats:{attack:25},price:500,enhancement:0},{id:\"plate_armor\",name:t(\"rpg.items.plate_armor\"),type:\"armor\",rarity:\"rare\",level:3,stats:{defense:20,hp:40},price:400,enhancement:0},{id:\"steel_helmet\",name:t(\"rpg.items.steel_helmet\"),type:\"helmet\",rarity:\"rare\",level:3,stats:{defense:12,hp:25},price:300,enhancement:0},{id:\"greater_health_potion\",name:t(\"rpg.items.greater_health_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:120,enhancement:0,consumableEffect:{healHp:120},quantity:1},{id:\"greater_mana_potion\",name:\"고급 마나 물약\",type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:100,enhancement:0,consumableEffect:{healMp:80},quantity:1},{id:\"strength_potion\",name:t(\"rpg.items.strength_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:\"attack\",buffAmount:10,buffDuration:30000},quantity:1},{id:\"defense_potion\",name:t(\"rpg.items.defense_potion\"),type:\"consumable\",rarity:\"rare\",level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:\"defense\",buffAmount:8,buffDuration:30000},quantity:1}].filter(item=>!existingIds.includes(item.id));baseItems.push(...newItems);}// 마법사의 탑이 해금되면 최고급 아이템 추가\nconst wizardTowerUnlocked=(_availableDungeons$fi3=availableDungeons.find(d=>d.id===\"tower\"))===null||_availableDungeons$fi3===void 0?void 0:_availableDungeons$fi3.isUnlocked;if(wizardTowerUnlocked){const existingIds=baseItems.map(item=>item.id);const wizardItems=[{id:\"enchanted_sword\",name:\"마법 부여 검\",type:\"weapon\",rarity:\"epic\",level:5,stats:{attack:40,mp:20},price:1200,enhancement:0},{id:\"dragon_armor\",name:\"드래곤 갑옷\",type:\"armor\",rarity:\"epic\",level:5,stats:{defense:35,hp:80},price:1000,enhancement:0},{id:\"mystic_helmet\",name:\"신비의 투구\",type:\"helmet\",rarity:\"epic\",level:5,stats:{defense:20,hp:40,mp:30},price:800,enhancement:0},{id:\"supreme_health_potion\",name:\"최고급 체력 물약\",type:\"consumable\",rarity:\"epic\",level:3,stats:{},price:300,enhancement:0,consumableEffect:{healHp:250},quantity:1},{id:\"supreme_mana_potion\",name:\"최고급 마나 물약\",type:\"consumable\",rarity:\"epic\",level:3,stats:{},price:250,enhancement:0,consumableEffect:{healMp:200},quantity:1},{id:\"berserker_potion\",name:t(\"rpg.items.berserker_potion\"),type:\"consumable\",rarity:\"epic\",level:3,stats:{},price:400,enhancement:0,consumableEffect:{buffType:\"attack\",buffAmount:25,buffDuration:60000},quantity:1},{id:\"guardian_potion\",name:\"수호자의 물약\",type:\"consumable\",rarity:\"epic\",level:3,stats:{},price:400,enhancement:0,consumableEffect:{buffType:\"defense\",buffAmount:20,buffDuration:60000},quantity:1}].filter(item=>!existingIds.includes(item.id));baseItems.push(...wizardItems);}return baseItems;};setShop(getShopItems());};updateShop();},[availableDungeons]);// 레벨업 시 스킬 업데이트\nuseEffect(()=>{const updateSkills=()=>{setCharacter(prev=>{// 기존 스킬들의 해금 상태만 업데이트\nconst updatedSkills=prev.skills.map(skill=>({...skill,isUnlocked:prev.level>=(skill.requiredLevel||1)}));return{...prev,skills:updatedSkills};});};updateSkills();},[character.level]);// 스킬 사용 함수 (수정된 데미지 계산 포함)\nconst executeSkill=skill=>{if(!skill.isLearned||skill.level===0){addToCombatLog(t(\"rpg.combat.skillLearnFirst\"));return;}if(character.mp<skill.manaCost){addToCombatLog(t(\"rpg.combat.notEnoughMana\"));return;}if(skill.currentCooldown>0){addToCombatLog(t(\"rpg.combat.skillCooldown\"));return;}const damage=calculateSkillDamage(skill,character);// 스킬 사용 로직\nif(skill.id===\"heal\"||skill.id===\"regeneration\"){// 힐링 스킬\nconst healAmount=damage;setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount),mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);}else if(currentMonster){// 공격 스킬\nconst newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);if(newMonsterHp===0){setTimeout(defeatMonster,500);}}// 쿨다운 설정\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:skill.cooldown}:s)}));};// 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\nconst learnSkill=skill=>{if(skill.level>0){addToCombatLog(t(\"rpg.combat.alreadyLearned\"));return;}const cost=100;// 스킬 배우기 비용\nif(character.gold<cost){addToCombatLog(t(\"rpg.combat.notEnoughGold\"));return;}setCharacter(prev=>({...prev,gold:prev.gold-cost,skills:prev.skills.map(s=>s.id===skill.id?{...s,level:1,isLearned:true}:s)}));addToCombatLog(`${skill.name}을(를) 배웠습니다!`);};// 스킬 렌더링 함수 (분류별)\n// 스킬 아이콘 맵핑\nconst getSkillIcon=skill=>{const iconMap={// 전투 스킬\n\"basic-attack\":\"⚔️\",\"power-strike\":\"💥\",\"fire-slash\":\"🔥\",\"lightning-bolt\":\"⚡\",\"ice-shard\":\"❄️\",\"double-attack\":\"⚔️⚔️\",// 지원 스킬\nheal:\"💚\",\"mana-recovery\":\"💙\",shield:\"🛡️\",haste:\"💨\",blessing:\"✨\",// 패시브 스킬\n\"strength-boost\":\"💪\",\"defense-boost\":\"🛡️\",\"agility-boost\":\"🏃\",\"mana-boost\":\"🔮\",\"critical-chance\":\"💎\",vampire:\"🩸\"};return iconMap[skill.id]||\"📜\";};// 선택된 스킬 상태\nconst[selectedSkill,setSelectedSkill]=useState(null);// 스킬 탭 내부의 서브 탭 상태\nconst[skillSubTab,setSkillSubTab]=React.useState(\"combat\");// 스킬 탭 컨텐츠 렌더링 (게임 스타일 UI)\nconst renderSkillsTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:\"200px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"16px\"},children:[\"\\uD83D\\uDCDA \",t(\"rpg.ui.skillInfo\")]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"5px\"},children:[{id:\"combat\",label:t(\"rpg.skills.category.all\"),count:character.skills.filter(s=>s.isUnlocked).length,color:\"#8b5cf6\"},{id:\"combat\",label:t(\"rpg.skills.category.combat\"),count:character.skills.filter(s=>s.isUnlocked&&(s.category===\"combat\"||s.category===\"magic\")).length,color:\"#dc2626\"},{id:\"support\",label:t(\"rpg.skills.category.support\"),count:character.skills.filter(s=>s.isUnlocked&&s.category===\"support\").length,color:\"#10b981\"},{id:\"passive\",label:t(\"rpg.skills.category.passive\"),count:character.skills.filter(s=>s.isUnlocked&&s.category===\"passive\").length,color:\"#f59e0b\"}].map((tab,index)=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setSkillSubTab(index===0?\"combat\":tab.id),style:{padding:\"12px 15px\",background:index===0&&skillSubTab||skillSubTab===tab.id?`linear-gradient(135deg, ${tab.color} 0%, ${tab.color}CC 100%)`:\"rgba(255, 255, 255, 0.1)\",color:index===0&&skillSubTab||skillSubTab===tab.id?\"white\":\"#9ca3af\",border:\"1px solid #4b5563\",borderRadius:\"8px\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:\"normal\",transition:\"all 0.2s ease\",textAlign:\"left\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"span\",{children:tab.label}),/*#__PURE__*/_jsx(\"span\",{style:{background:\"rgba(0, 0, 0, 0.3)\",color:gameColors.primaryText,fontSize:\"11px\",padding:\"2px 6px\",borderRadius:\"10px\",minWidth:\"20px\",textAlign:\"center\"},children:index===0?character.skills.filter(s=>s.isUnlocked).length:tab.count})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"16px\"},children:[\"\\uD83C\\uDFAF\",\" \",skillSubTab===\"combat\"?t(\"rpg.ui.combatSkills\"):skillSubTab===\"support\"?t(\"rpg.skills.supportSkills\"):t(\"rpg.skills.category.passive\")]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(8, 1fr)\",gap:\"6px\",background:\"rgba(0, 0, 0, 0.3)\",padding:\"15px\",borderRadius:\"10px\",border:\"2px solid #4b5563\",minHeight:\"400px\"},children:Array.from({length:32},(_,index)=>{const filteredSkills=character.skills.filter(skill=>{if(skillSubTab===\"combat\"){return skill.isUnlocked&&(skill.category===\"combat\"||skill.category===\"magic\");}return skill.isUnlocked&&skill.category===skillSubTab;});const skill=filteredSkills[index];const isEmpty=!skill;return/*#__PURE__*/_jsx(\"div\",{onClick:()=>skill&&setSelectedSkill(skill),style:{width:\"50px\",height:\"50px\",background:isEmpty?\"rgba(255, 255, 255, 0.05)\":skill.isLearned?\"rgba(16, 185, 129, 0.2)\":\"rgba(107, 114, 128, 0.2)\",border:isEmpty?\"1px solid #374151\":skill.isLearned?\"2px solid #10b981\":\"2px solid #6b7280\",borderRadius:\"8px\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",cursor:skill?\"pointer\":\"default\",position:\"relative\",transition:\"all 0.2s ease\"},onMouseEnter:e=>{if(skill){e.currentTarget.style.transform=\"scale(1.1)\";e.currentTarget.style.boxShadow=skill.isLearned?\"0 0 15px #10b98150\":\"0 0 15px #6b728050\";}},onMouseLeave:e=>{if(skill){e.currentTarget.style.transform=\"scale(1)\";e.currentTarget.style.boxShadow=\"none\";}},children:skill&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"20px\",filter:skill.isLearned?\"none\":\"grayscale(1)\",opacity:skill.isLearned?1:0.5},children:getSkillIcon(skill)}),skill.level>0&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",bottom:\"2px\",right:\"2px\",background:\"#10b981\",color:gameColors.primaryText,fontSize:\"10px\",padding:\"1px 4px\",borderRadius:\"3px\",lineHeight:\"1\",fontWeight:\"bold\"},children:skill.level}),skill.level===0&&character.gold>=100&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",top:\"2px\",right:\"2px\",background:\"#fbbf24\",width:\"8px\",height:\"8px\",borderRadius:\"50%\",animation:\"pulse 2s infinite\"}})]})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"300px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"16px\"},children:[\"\\uD83D\\uDCCB \",t(\"rpg.ui.skillInfoPanel\")]}),selectedSkill?/*#__PURE__*/_jsxs(\"div\",{style:{background:\"rgba(255, 255, 255, 0.1)\",border:selectedSkill.isLearned?\"2px solid #10b981\":\"2px solid #6b7280\",borderRadius:\"10px\",padding:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"48px\",marginBottom:\"10px\",filter:selectedSkill.isLearned?\"none\":\"grayscale(1)\",opacity:selectedSkill.isLearned?1:0.7},children:getSkillIcon(selectedSkill)}),/*#__PURE__*/_jsx(\"h4\",{style:{color:selectedSkill.isLearned?\"#10b981\":\"#9ca3af\",margin:\"0 0 5px 0\",fontSize:\"18px\",fontWeight:\"bold\"},children:selectedSkill.name}),/*#__PURE__*/_jsxs(\"p\",{style:{color:gameColors.secondaryText,margin:\"0 0 15px 0\",fontSize:\"14px\"},children:[\"Lv.\",selectedSkill.level,\"/\",selectedSkill.maxLevel,\" \\u2022\",\" \",selectedSkill.type===\"active\"?t(\"rpg.skills.active\"):t(\"rpg.skills.passive\")]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.skills.effect\")}),/*#__PURE__*/_jsx(\"p\",{style:{color:gameColors.primaryText,fontSize:\"12px\",lineHeight:\"1.4\",margin:0},children:selectedSkill.description}),selectedSkill.level>0&&selectedSkill.type===\"active\"&&/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#fbbf24\",fontSize:\"12px\",fontWeight:\"bold\",marginTop:\"8px\"},children:[\"\\uB370\\uBBF8\\uC9C0: \",calculateSkillDamage(selectedSkill,character)]})]}),selectedSkill.type===\"active\"&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.skills.usageInfo\")}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"12px\",color:\"#9ca3af\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:t(\"rpg.skills.manaCost\")}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"#60a5fa\"},children:selectedSkill.manaCost})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:t(\"rpg.skills.cooldown\")}),/*#__PURE__*/_jsxs(\"span\",{style:{color:\"#f472b6\"},children:[selectedSkill.cooldown/1000,\"\\uCD08\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:selectedSkill.level===0?t(\"rpg.skills.learnCost\"):t(\"rpg.skills.upgradeCost\")}),/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#f59e0b\",fontSize:\"12px\",margin:0},children:[selectedSkill.level===0?\"100\":(selectedSkill.level*100).toLocaleString(),t(\"rpg.item.gold\")]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"10px\"},children:selectedSkill.level===0?/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{learnSkill(selectedSkill);setSelectedSkill(null);},disabled:character.gold<100,style:{background:character.gold>=100?\"linear-gradient(135deg, #10b981 0%, #059669 100%)\":\"#6b7280\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"12px\",fontSize:\"14px\",cursor:character.gold>=100?\"pointer\":\"not-allowed\",fontWeight:\"bold\"},children:[t(\"rpg.skills.learn\"),\" (100G)\"]}):selectedSkill.level<selectedSkill.maxLevel?/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const cost=selectedSkill.level*100;if(character.gold>=cost){setCharacter(prev=>({...prev,gold:prev.gold-cost,skills:prev.skills.map(s=>s.id===selectedSkill.id?{...s,level:s.level+1}:s)}));addToCombatLog(`${selectedSkill.name}을(를) 레벨업했다! (Lv.${selectedSkill.level+1})`);setSelectedSkill(prev=>prev?{...prev,level:prev.level+1}:null);}},disabled:character.gold<selectedSkill.level*100,style:{background:character.gold>=selectedSkill.level*100?\"linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)\":\"#6b7280\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"12px\",fontSize:\"14px\",cursor:character.gold>=selectedSkill.level*100?\"pointer\":\"not-allowed\",fontWeight:\"bold\"},children:[\"\\uB808\\uBCA8\\uC5C5 (\",(selectedSkill.level*100).toLocaleString(),\"G)\"]}):/*#__PURE__*/_jsx(\"div\",{style:{background:gameColors.panelBg,color:gameColors.secondaryText,border:\"none\",borderRadius:\"6px\",padding:\"12px\",fontSize:\"14px\",textAlign:\"center\"},children:\"\\uCD5C\\uB300 \\uB808\\uBCA8 \\uB2EC\\uC131\"})})]}):/*#__PURE__*/_jsx(\"div\",{style:{background:\"rgba(255, 255, 255, 0.05)\",borderRadius:\"10px\",padding:\"40px\",textAlign:\"center\",color:gameColors.secondaryText},children:/*#__PURE__*/_jsx(\"p\",{children:t(\"rpg.skills.info.description\")})})]})]})]});// 몬스터 생성\nconst spawnMonster=()=>{// 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\nif(currentMonster||inDungeon){return;}const gameTexts=window.gameTexts||{monsters:{slime:t(\"rpg.monsters.slime\"),goblin:t(\"rpg.monsters.goblin\"),orc:t(\"rpg.monsters.orc\"),troll:t(\"rpg.monsters.troll\"),dragon:t(\"rpg.monsters.dragon\")},combat:{appeared:t(\"rpg.combat.appeared\")}};const monsters=[{name:gameTexts.monsters.slime,baseHp:40,baseAttack:8,baseDefense:2,exp:15,gold:10,minLevel:1,maxLevel:3},{name:gameTexts.monsters.goblin,baseHp:60,baseAttack:12,baseDefense:4,exp:25,gold:18,minLevel:3,maxLevel:6},{name:gameTexts.monsters.orc,baseHp:100,baseAttack:18,baseDefense:8,exp:40,gold:30,minLevel:6,maxLevel:10},{name:gameTexts.monsters.troll,baseHp:150,baseAttack:25,baseDefense:12,exp:60,gold:45,minLevel:10,maxLevel:15},{name:gameTexts.monsters.dragon,baseHp:300,baseAttack:40,baseDefense:20,exp:120,gold:100,minLevel:15,maxLevel:999}];// 캐릭터 레벨에 적합한 몬스터만 필터링\nconst availableMonsters=monsters.filter(monster=>character.level>=monster.minLevel&&character.level<=monster.maxLevel);// 적합한 몬스터가 없으면 레벨 범위를 확장\nconst finalMonsters=availableMonsters.length>0?availableMonsters:monsters.filter(monster=>Math.abs(character.level-monster.minLevel)<=2);const randomMonster=finalMonsters[Math.floor(Math.random()*finalMonsters.length)];const levelMultiplier=1+(character.level-1)*0.3;const monster={id:`monster_${Date.now()}`,name:randomMonster.name,level:Math.max(1,character.level+Math.floor(Math.random()*3-1)),hp:Math.floor(randomMonster.baseHp*levelMultiplier),maxHp:Math.floor(randomMonster.baseHp*levelMultiplier),attack:Math.floor(randomMonster.baseAttack*levelMultiplier),defense:Math.floor(randomMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor(randomMonster.exp*levelMultiplier),gold:Math.floor(randomMonster.gold*levelMultiplier),dropItems:generateDropItems(),isBoss:Math.random()<0.1// 10% 보스 확률\n};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=3;monster.maxHp*=3;monster.attack*=2;monster.defense*=2;monster.exp*=5;monster.gold*=3;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);};// 드롭 아이템 생성\nconst generateDropItems=()=>{const dropChance=Math.random();if(dropChance<0.1){// 10% 확률로 아이템 드롭\nconst rarities=[\"common\",\"rare\",\"epic\",\"legendary\",\"mythic\"];const rarity=rarities[Math.floor(Math.random()*rarities.length)];const itemTypes=[\"weapon\",\"armor\",\"helmet\",\"boots\",\"ring\",\"amulet\"];const itemType=itemTypes[Math.floor(Math.random()*itemTypes.length)];return[{id:`drop_${Date.now()}`,name:generateItemName(rarity,itemType),type:itemType,rarity,level:character.level,stats:generateItemStats(rarity),price:calculateItemPrice(rarity,character.level),enhancement:0}];}return[];};const generateItemName=(rarity,itemType)=>{const prefixes={common:[\"낡은\",\"일반적인\",\"기본\"],rare:[\"날카로운\",\"튼튼한\",\"마법의\"],epic:[\"전설적인\",\"고대의\",\"신성한\"],legendary:[\"전설의\",\"영웅의\",\"불멸의\"],mythic:[\"신화의\",\"창조의\",\"절대의\"]};const itemNames={weapon:[\"검\",\"도끼\",\"창\",\"활\",\"지팡이\"],armor:[\"갑옷\",\"로브\",\"사슬갑옷\",\"가죽갑옷\"],helmet:[\"투구\",\"모자\",\"관\",\"헬름\"],boots:[\"신발\",\"부츠\",\"장화\",\"샌들\"],ring:[\"반지\",\"링\",\"밴드\"],amulet:[\"목걸이\",\"부적\",\"펜던트\"]};const prefix=prefixes[rarity][Math.floor(Math.random()*3)];const itemTypeNames=itemNames[itemType]||[\"아이템\"];const item=itemTypeNames[Math.floor(Math.random()*itemTypeNames.length)];return`${prefix} ${item}`;};const generateItemStats=rarity=>{const multipliers={common:1,rare:1.5,epic:2.5,legendary:4,mythic:7};const base=multipliers[rarity];return{attack:Math.floor(Math.random()*20*base),defense:Math.floor(Math.random()*15*base),hp:Math.floor(Math.random()*50*base),mp:Math.floor(Math.random()*30*base),speed:Math.floor(Math.random()*10*base),critRate:Math.floor(Math.random()*10*base),critDamage:Math.floor(Math.random()*20*base)};};const calculateItemPrice=(rarity,level)=>{const basePrice={common:50,rare:150,epic:500,legendary:2000,mythic:10000};return Math.floor(basePrice[rarity]*(1+level*0.2));};// 전투 시스템\nconst attack=()=>{if(!currentMonster)return;const buffedAttack=character.attack+character.buffs.attack.amount;const damage=calculateDamage(buffedAttack,currentMonster.defense);const isCritical=Math.random()<0.1+character.stats.luck*0.01;const finalDamage=isCritical?Math.floor(damage*1.5):damage;const newMonsterHp=Math.max(0,currentMonster.hp-finalDamage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);const gameTexts=window.gameTexts||{combat:{attack:\"의 공격!\",damage:\"데미지!\",critical:\"치명타!\"}};addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical?` (${gameTexts.combat.critical})`:\"\"} ${gameTexts.combat.damage}`);onAction(\"combat_attack\",{user_id:currentUser.user_id,damage:finalDamage,is_critical:isCritical,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,character_attack:character.attack,monster_hp_remaining:newMonsterHp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});if(newMonsterHp<=0){defeatMonster();}else{// 몬스터 반격\nsetTimeout(()=>monsterAttack(),1000);}};const monsterAttack=()=>{if(!currentMonster||currentMonster.hp<=0)return;const buffedDefense=character.defense+character.buffs.defense.amount;const damage=calculateDamage(currentMonster.attack,buffedDefense);const newHp=Math.max(0,character.hp-damage);setCharacter(prev=>({...prev,hp:newHp}));const gameTexts=window.gameTexts||{combat:{attack:\"의 공격!\",damage:\"데미지!\"}};addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);if(newHp<=0){const gameTexts=window.gameTexts||{combat:{defeat:\"전투에서 패배했습니다...\"}};addToCombatLog(gameTexts.combat.defeat);setIsAutoFighting(false);// 전투 실패 이벤트 로깅\nonAction(\"combat_defeat\",{monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,dungeon_id:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.id)||\"field\",dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||\"field\",damage_taken:currentMonster.attack,character_defense:character.defense});// 던전에서 나가고 체력/마나 완전 회복\nsetTimeout(()=>{setCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));if(inDungeon&&currentDungeon){// 던전에서 나가기 (죽음으로 인한 자동 퇴장)\nonAction(\"dungeon_exited\",{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:\"death\",time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab(\"lobby\");setGameMode(\"lobby\");addToCombatLog(\"던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!\");}else{// 일반 필드에서는 새 몬스터 스폰\naddToCombatLog(\"체력과 마나가 완전히 회복되었습니다!\");spawnMonster();}},2000);}};const calculateDamage=(attack,defense)=>{const baseDamage=Math.max(1,attack-Math.floor(defense*0.5));return Math.floor(baseDamage*(0.8+Math.random()*0.4));};const defeatMonster=()=>{if(!currentMonster)return;const expGained=currentMonster.exp;const goldGained=currentMonster.gold;setCharacter(prev=>{let newExp=prev.exp+expGained;const newGold=prev.gold+goldGained;let newLevel=prev.level;let newMaxExp=prev.maxExp;let newHp=prev.hp;let newMp=prev.mp;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let availablePoints=prev.stats.availablePoints;// 레벨업 체크\nwhile(newExp>=newMaxExp){newLevel+=1;newExp-=newMaxExp;newMaxExp=Math.floor(newMaxExp*1.5);newMaxHp+=20;newMaxMp+=10;newHp=newMaxHp;// 레벨업 시 체력 완전 회복\nnewMp=newMaxMp;// 레벨업 시 마나 완전 회복\navailablePoints+=5;addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);onAction(\"level_up\",{user_id:currentUser.user_id,new_level:newLevel,character_class:prev.class,stat_points_gained:5});// 던전 해금 체크\nsetAvailableDungeons(prevDungeons=>prevDungeons.map(dungeon=>({...dungeon,isUnlocked:dungeon.isUnlocked||newLevel>=dungeon.requiredLevel})));}return{...prev,exp:newExp,gold:newGold,level:newLevel,maxExp:newMaxExp,hp:newHp,mp:newMp,maxHp:newMaxHp,maxMp:newMaxMp,stats:{...prev.stats,availablePoints}};});// 아이템 드롭 처리\nif(currentMonster.dropItems.length>0){setInventory(prev=>[...prev,...currentMonster.dropItems]);addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);}addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);// 추적 카운터 업데이트\nsetMonstersDefeated(prev=>prev+1);setTotalGoldEarned(prev=>prev+goldGained);onAction(\"monster_defeated\",{user_id:currentUser.user_id,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,exp_gained:expGained,gold_gained:goldGained,items_dropped:currentMonster.dropItems.length,character_attack:character.attack,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});// 현재 몬스터 제거\nsetCurrentMonster(null);// 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\nif(inDungeon&&currentDungeon){// 현재 층을 클리어한 것으로 마킹\nconst updatedDungeon={...currentDungeon,clearedFloors:new Set([...Array.from(currentDungeon.clearedFloors),currentDungeon.currentFloor])};setCurrentDungeon(updatedDungeon);// 던전 리스트에서도 업데이트\nsetAvailableDungeons(prev=>prev.map(d=>d.id===updatedDungeon.id?updatedDungeon:d));// 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\naddToCombatLog(t(\"rpg.messages.monsterDefeatedFloorCleared\").replace(\"{floor}\",currentDungeon.currentFloor.toString()));setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},2000);}else{// 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\nif(!inDungeon){setTimeout(()=>{spawnMonster();},2000);}}};// 다음 층으로 진행\nconst proceedToNextFloor=()=>{if(!currentDungeon)return;const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor+1};setCurrentDungeon(updatedDungeon);setShowDungeonChoice(false);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);// 강제 스폰\naddToCombatLog(t(\"rpg.messages.proceedToFloor\").replace(\"{floor}\",updatedDungeon.currentFloor.toString()));},500);};// 던전 나가기\nconst exitDungeonAfterVictory=()=>{if(!currentDungeon)return;// 던전 나가기 이벤트 로깅\nonAction(\"dungeon_exited\",{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:\"victory_choice\",time_spent:new Date().getTime()});// 던전 리셋 (현재 층을 1층으로 되돌림)\nconst resetDungeon={...currentDungeon,currentFloor:1};setAvailableDungeons(prev=>prev.map(d=>d.id===resetDungeon.id?resetDungeon:d));setInDungeon(false);setCurrentDungeon(null);setCurrentTab(\"lobby\");setGameMode(\"lobby\");setShowDungeonChoice(false);// 체력과 마나 완전 회복\nsetCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));addToCombatLog(\"던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!\");// 새로운 일반 몬스터 생성\nsetTimeout(()=>{spawnMonster();},1000);};// 자동 전투\nuseEffect(()=>{if(isAutoFighting&&currentMonster&&currentMonster.hp>0&&character.hp>0){const autoAttackTimer=setTimeout(()=>{attack();},2000);return()=>clearTimeout(autoAttackTimer);}},[isAutoFighting,currentMonster,character.hp]);// 스킬 쿨다운 및 MP 회복\nuseEffect(()=>{const interval=setInterval(()=>{setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+1),skills:prev.skills.map(skill=>({...skill,currentCooldown:Math.max(0,skill.currentCooldown-100)})),buffs:{attack:{amount:prev.buffs.attack.duration>0?prev.buffs.attack.amount:0,duration:Math.max(0,prev.buffs.attack.duration-100)},defense:{amount:prev.buffs.defense.duration>0?prev.buffs.defense.amount:0,duration:Math.max(0,prev.buffs.defense.duration-100)},speed:{amount:prev.buffs.speed.duration>0?prev.buffs.speed.amount:0,duration:Math.max(0,prev.buffs.speed.duration-100)}}}));},100);return()=>clearInterval(interval);},[]);const addToCombatLog=message=>{setCombatLog(prev=>{const newLog=[...prev,message];if(newLog.length>50)newLog.shift();return newLog;});// Auto-scroll to bottom immediately and with backup timing\nif(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}// Additional scroll with slight delay to ensure content is rendered\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},10);// Final backup scroll\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},100);};// 스탯 분배\nconst allocateStatPoint=stat=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[stat]:prev.stats[stat]+1,availablePoints:prev.stats.availablePoints-1},// 스탯에 따른 능력치 업데이트\nattack:stat===\"strength\"?prev.attack+2:prev.attack,defense:stat===\"vitality\"?prev.defense+1:prev.defense,maxHp:stat===\"vitality\"?prev.maxHp+10:prev.maxHp,maxMp:stat===\"intelligence\"?prev.maxMp+5:prev.maxMp,speed:stat===\"agility\"?prev.speed+1:prev.speed}));};// 아이템 장착\nconst equipItem=item=>{// 소비 아이템은 장착할 수 없음\nif(item.type===\"consumable\"){return;}// 기존에 장착된 아이템이 있는지 확인\nconst slot=item.type;const currentEquippedItem=character.equipment[slot];setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[slot]=item;// 기존 아이템의 스탯 제거\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(currentEquippedItem){if(currentEquippedItem.stats.attack)newAttack-=currentEquippedItem.stats.attack;if(currentEquippedItem.stats.defense)newDefense-=currentEquippedItem.stats.defense;if(currentEquippedItem.stats.hp)newMaxHp-=currentEquippedItem.stats.hp;if(currentEquippedItem.stats.mp)newMaxMp-=currentEquippedItem.stats.mp;if(currentEquippedItem.stats.speed)newSpeed-=currentEquippedItem.stats.speed;}// 새 아이템의 스탯 적용\nif(item.stats.attack)newAttack+=item.stats.attack;if(item.stats.defense)newDefense+=item.stats.defense;if(item.stats.hp)newMaxHp+=item.stats.hp;if(item.stats.mp)newMaxMp+=item.stats.mp;if(item.stats.speed)newSpeed+=item.stats.speed;// 스탯이 최소값 이하로 내려가지 않도록 보정\nnewAttack=Math.max(1,newAttack);newDefense=Math.max(0,newDefense);newMaxHp=Math.max(100,newMaxHp);newMaxMp=Math.max(50,newMaxMp);newSpeed=Math.max(1,newSpeed);return{...prev,equipment:newEquipment,attack:newAttack,defense:newDefense,maxHp:newMaxHp,maxMp:newMaxMp,speed:newSpeed,hp:Math.min(prev.hp,newMaxHp),// 최대 체력이 줄어들 경우 현재 체력도 조정\nmp:Math.min(prev.mp,newMaxMp)// 최대 마나가 줄어들 경우 현재 마나도 조정\n};});// 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\nif(currentEquippedItem){setInventory(prev=>[...prev,currentEquippedItem]);addToCombatLog(`기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`);}else{addToCombatLog(`${item.name}을 장착했습니다!`);}// 인벤토리에서 새 아이템 제거\nsetInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));};// 장비 해제\nconst unequipItem=slot=>{const equippedItem=character.equipment[slot];if(!equippedItem)return;setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[slot]=undefined;// 장착 해제한 아이템의 스탯 제거\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(equippedItem.stats.attack)newAttack-=equippedItem.stats.attack;if(equippedItem.stats.defense)newDefense-=equippedItem.stats.defense;if(equippedItem.stats.hp)newMaxHp-=equippedItem.stats.hp;if(equippedItem.stats.mp)newMaxMp-=equippedItem.stats.mp;if(equippedItem.stats.speed)newSpeed-=equippedItem.stats.speed;// HP가 maxHp를 초과하지 않도록 조정\nconst adjustedHp=Math.min(prev.hp,newMaxHp);const adjustedMp=Math.min(prev.mp,newMaxMp);return{...prev,equipment:newEquipment,attack:Math.max(1,newAttack),// 최소 공격력 1\ndefense:Math.max(0,newDefense),maxHp:Math.max(100,newMaxHp),// 최소 체력 100\nmaxMp:Math.max(50,newMaxMp),// 최소 마나 50\nspeed:Math.max(1,newSpeed),// 최소 속도 1\nhp:adjustedHp,mp:adjustedMp};});// 인벤토리에 아이템 추가\nsetInventory(prev=>[...prev,equippedItem]);addToCombatLog(`${equippedItem.name}을 해제했습니다!`);};// 아이템 판매\nconst sellItem=item=>{const sellPrice=Math.floor(item.price*0.7);setCharacter(prev=>({...prev,gold:prev.gold+sellPrice}));setInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);};// 아이템 구매\nconst buyItem=item=>{if(character.gold<item.price)return;setCharacter(prev=>({...prev,gold:prev.gold-item.price}));setInventory(prev=>[...prev,{...item,id:`${item.id}_${Date.now()}`}]);addToCombatLog(`${item.name}${t(\"rpg.combat.itemPurchased\")}`);};const getRarityColor=rarity=>{const colors={common:\"#9ca3af\",rare:\"#3b82f6\",epic:\"#8b5cf6\",legendary:\"#f59e0b\",mythic:\"#ef4444\"};return colors[rarity]||\"#9ca3af\";};// 던전 입장 함수\nconst enterDungeon=dungeon=>{if(dungeon.isComingSoon){addToCombatLog(t(\"rpg.combat.comingSoonDungeon\"));return;}if(character.level<dungeon.requiredLevel){addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);return;}setCurrentDungeon(dungeon);setInDungeon(true);setGameMode(\"dungeon\");setCurrentTab(\"dungeon\");spawnDungeonMonster(dungeon);// 이벤트 로깅\nonAction(\"dungeon_entered\",{dungeon_id:dungeon.id,dungeon_name:dungeon.name,character_level:character.level,floor:dungeon.currentFloor,character_attack:character.attack,character_defense:character.defense,character_hp:character.hp,character_mp:character.mp,entry_time:new Date().getTime()});};// 던전 몬스터 스폰\nconst spawnDungeonMonster=function(dungeon){let forceSpawn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;// 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\nif(currentMonster&&!forceSpawn)return;// 강제 생성인 경우 기존 몬스터를 먼저 제거\nif(forceSpawn&&currentMonster){setCurrentMonster(null);}// 던전별 고유 몬스터 타입 정의\nconst getDungeonMonsters=dungeonId=>{switch(dungeonId){case\"forest\":// 어둠의 숲\nreturn[{name:t(\"rpg.monsters.wolf\"),baseHp:40,baseAttack:10,baseDefense:3},{name:t(\"rpg.monsters.bear\"),baseHp:80,baseAttack:16,baseDefense:6},{name:t(\"rpg.monsters.giantSpider\"),baseHp:120,baseAttack:22,baseDefense:10},{name:\"숲의 수호자\",baseHp:200,baseAttack:35,baseDefense:18},{name:\"고대 엔트\",baseHp:350,baseAttack:45,baseDefense:25}];case\"cave\":// 고블린 동굴\nreturn[{name:t(\"rpg.monsters.goblinWarrior\"),baseHp:60,baseAttack:14,baseDefense:5},{name:t(\"rpg.monsters.goblinArcher\"),baseHp:45,baseAttack:18,baseDefense:3},{name:t(\"rpg.monsters.goblinMage\"),baseHp:50,baseAttack:20,baseDefense:4},{name:t(\"rpg.monsters.goblinChief\"),baseHp:180,baseAttack:30,baseDefense:15},{name:t(\"rpg.monsters.goblinKing\"),baseHp:400,baseAttack:50,baseDefense:28}];case\"tower\":// 마법사의 탑\nreturn[{name:t(\"rpg.monsters.magicGolem\"),baseHp:100,baseAttack:20,baseDefense:12},{name:t(\"rpg.monsters.skeletonMage\"),baseHp:70,baseAttack:25,baseDefense:8},{name:t(\"rpg.monsters.flameElemental\"),baseHp:110,baseAttack:28,baseDefense:10},{name:t(\"rpg.monsters.lich\"),baseHp:250,baseAttack:40,baseDefense:20},{name:t(\"rpg.monsters.ancientMage\"),baseHp:500,baseAttack:60,baseDefense:35}];default:return[{name:t(\"rpg.monsters.slime\"),baseHp:30,baseAttack:8,baseDefense:2},{name:t(\"rpg.monsters.goblin\"),baseHp:50,baseAttack:12,baseDefense:4},{name:t(\"rpg.monsters.orc\"),baseHp:100,baseAttack:18,baseDefense:8},{name:t(\"rpg.monsters.troll\"),baseHp:150,baseAttack:25,baseDefense:12},{name:t(\"rpg.monsters.dragon\"),baseHp:300,baseAttack:40,baseDefense:20}];}};const baseMonsters=getDungeonMonsters(dungeon.id);// 층수에 따른 점진적 몬스터 선택 로직\nconst floorBasedMonsterIndex=()=>{const currentFloor=dungeon.currentFloor;if(currentFloor<=3)return 0;// 첫 번째 몬스터 (1~3층)\nif(currentFloor<=7)return 1;// 두 번째 몬스터 (4~7층)\nif(currentFloor<=12)return 2;// 세 번째 몬스터 (8~12층)\nif(currentFloor<=18)return 3;// 네 번째 몬스터 (13~18층)\nreturn 4;// 다섯 번째 몬스터 (19층 이상)\n};// 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\nconst baseIndex=floorBasedMonsterIndex();const randomVariation=Math.random()<0.3&&baseIndex>0?-1:0;// 30% 확률로 한 단계 낮은 몬스터\nconst selectedIndex=Math.max(0,baseIndex+randomVariation);const selectedMonster=baseMonsters[selectedIndex];const levelMultiplier=1+(dungeon.level+dungeon.currentFloor-1)*0.2;const monster={id:`dungeon_${dungeon.id}_${Date.now()}`,name:selectedMonster.name,level:dungeon.level+dungeon.currentFloor,hp:Math.floor(selectedMonster.baseHp*levelMultiplier),maxHp:Math.floor(selectedMonster.baseHp*levelMultiplier),attack:Math.floor(selectedMonster.baseAttack*levelMultiplier),defense:Math.floor(selectedMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor((20+dungeon.level*8+dungeon.currentFloor*3)*levelMultiplier),gold:Math.floor((10+dungeon.level*3)*levelMultiplier),dropItems:generateDropItems(),isBoss:dungeon.currentFloor%5===0};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=2;monster.maxHp*=2;monster.attack*=1.5;monster.exp*=3;monster.gold*=2;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);};// 물약 사용 함수\nconst consumeItem=item=>{if(item.type!==\"consumable\"||!item.consumableEffect)return;const effect=item.consumableEffect;// 체력 회복\nif(effect.healHp){setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+effect.healHp)}));addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);}// 마나 회복\nif(effect.healMp){setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+effect.healMp)}));addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);}// 버프 효과\nif(effect.buffType&&effect.buffAmount&&effect.buffDuration){setCharacter(prev=>({...prev,buffs:{...prev.buffs,[effect.buffType]:{amount:effect.buffAmount,duration:effect.buffDuration}}}));addToCombatLog(`${item.name}을 사용하여 ${effect.buffType===\"attack\"?\"공격력\":effect.buffType===\"defense\"?\"방어력\":t(\"rpg.speed\")} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);}// 인벤토리에서 물약 제거 또는 수량 감소\nsetInventory(prev=>{const itemIndex=prev.findIndex(invItem=>invItem.id===item.id);if(itemIndex!==-1){const newInventory=[...prev];const currentItem=newInventory[itemIndex];if(currentItem.quantity&&currentItem.quantity>1){newInventory[itemIndex]={...currentItem,quantity:currentItem.quantity-1};}else{newInventory.splice(itemIndex,1);}return newInventory;}return prev;});// 이벤트 로깅\nonAction(\"consumable_used\",{item_name:item.name,item_type:item.type,character_level:character.level,heal_hp:effect.healHp||0,heal_mp:effect.healMp||0,buff_type:effect.buffType||\"none\",buff_amount:effect.buffAmount||0,character_hp_before:character.hp,character_mp_before:character.mp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스킬 사용 함수\nconst castSkill=skill=>{if(!skill.isLearned||skill.level===0){addToCombatLog(t(\"rpg.combat.skillLearnFirst\"));return;}if(skill.currentCooldown>0||character.mp<skill.manaCost)return;// 스킬 사용 로직\nif(skill.id===\"heal\"){const healAmount=30+skill.level*5;setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount),mp:prev.mp-skill.manaCost}));addToCombatLog(`${healAmount}만큼 회복했다!`);}else{// 공격 스킬\nif(currentMonster){const damage=calculateSkillDamage(skill,character);const newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name}로 ${damage} 데미지!`);// 몬스터가 죽지 않았으면 반격\nif(newMonsterHp>0){setTimeout(()=>{monsterAttack();},1000);}else{// 몬스터가 죽었으면 처치 처리\nsetTimeout(()=>{defeatMonster();},1500);}}}// 쿨다운 적용\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:s.cooldown}:s)}));// 이벤트 로깅\nonAction(\"skill_used\",{skill_name:skill.name,skill_level:skill.level,mana_cost:skill.manaCost,character_level:character.level,character_mp_before:character.mp,character_mp_after:character.mp-skill.manaCost,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스탯 포인트 할당\nconst allocateStat=statName=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[statName]:prev.stats[statName]+1,availablePoints:prev.stats.availablePoints-1}}));// 스탯에 따른 능력치 업데이트\nlet hpBonus=0,mpBonus=0,attackBonus=0,defenseBonus=0;if(statName===\"vitality\")hpBonus=5;if(statName===\"intelligence\")mpBonus=3;if(statName===\"strength\")attackBonus=2;if(statName===\"agility\"){attackBonus=1;defenseBonus=1;}setCharacter(prev=>({...prev,maxHp:prev.maxHp+hpBonus,hp:prev.hp+hpBonus,maxMp:prev.maxMp+mpBonus,mp:prev.mp+mpBonus,attack:prev.attack+attackBonus,defense:prev.defense+defenseBonus}));// 이벤트 로깅\nonAction(\"stat_allocated\",{stat_name:statName,stat_value:character.stats[statName]+1,character_level:character.level,available_points:character.stats.availablePoints-1});};// 공통 캐릭터 정보 헤더 컴포넌트\nconst renderCharacterHeader=()=>{const expPercentage=character.exp/character.maxExp*100;return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)\",borderRadius:\"15px\",padding:\"15px 20px\",marginBottom:\"20px\",color:gameColors.primaryText},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(auto-fit, minmax(120px, 1fr))\",gap:\"15px\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"20px\",fontWeight:\"bold\",color:\"#ffffff\"},children:[\"Lv.\",character.level]}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.level\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"20px\",fontWeight:\"bold\",color:\"#fbbf24\"},children:[character.gold,\"G\"]}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.gold\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"16px\",fontWeight:\"bold\",color:\"#f87171\"},children:character.attack}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.attack\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"16px\",fontWeight:\"bold\",color:\"#60a5fa\"},children:character.defense}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.defense\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"16px\",fontWeight:\"bold\",color:\"#34d399\"},children:[character.hp,\"/\",character.maxHp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.health\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"16px\",fontWeight:\"bold\",color:\"#a78bfa\"},children:[character.mp,\"/\",character.maxMp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:\"#e0e7ff\",fontSize:\"12px\"},children:t(\"rpg.ui.mana\")})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"15px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:\"14px\",color:\"#e0e7ff\"},children:t(\"rpg.ui.exp\")}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:\"14px\",color:\"#ffffff\",fontWeight:\"bold\"},children:[character.exp,\" / \",character.maxExp,\" (\",Math.floor(expPercentage),\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"8px\",backgroundColor:\"rgba(255, 255, 255, 0.2)\",borderRadius:\"10px\",overflow:\"hidden\"},children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${expPercentage}%`,height:\"100%\",background:\"linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)\",borderRadius:\"10px\",transition:\"width 0.3s ease\"}})})]})]});};// 로비 렌더링\nconst renderLobbyTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"20px\"},children:[\"\\uD83C\\uDFF0 \",t(\"rpg.ui.dungeonList\")]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gap:\"15px\"},children:availableDungeons.map(dungeon=>/*#__PURE__*/_jsx(\"div\",{style:{background:dungeon.isUnlocked?gameColors.panelBg:gameColors.darkPanelBg,borderRadius:\"10px\",padding:\"20px\",border:dungeon.isUnlocked?\"2px solid #10b981\":\"2px solid #4b5563\",opacity:dungeon.isUnlocked?1:0.6},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:gameColors.primaryText,margin:\"0 0 5px 0\",fontSize:\"18px\"},children:[dungeon.name,\" (Lv.\",dungeon.level,\")\"]}),/*#__PURE__*/_jsx(\"p\",{style:{color:gameColors.secondaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:dungeon.description}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"12px\",color:gameColors.secondaryText},children:[t(\"rpg.ui.requiredLevel\"),\": \",dungeon.requiredLevel,\" | \",t(\"rpg.ui.floors\"),\": \",dungeon.floors,t(\"rpg.floor\"),\" | \",t(\"rpg.ui.currentFloor\"),\": \",t(\"rpg.floorDisplay\").replace(\"{floor}\",dungeon.currentFloor.toString())]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>enterDungeon(dungeon),disabled:!dungeon.isUnlocked||character.level<dungeon.requiredLevel||dungeon.isComingSoon,style:{background:dungeon.isComingSoon?\"linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)\":dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?\"linear-gradient(135deg, #10b981 0%, #059669 100%)\":\"#4b5563\",color:gameColors.primaryText,border:\"none\",borderRadius:\"8px\",padding:\"12px 20px\",fontSize:\"14px\",fontWeight:\"bold\",cursor:dungeon.isUnlocked&&character.level>=dungeon.requiredLevel&&!dungeon.isComingSoon?\"pointer\":\"not-allowed\",transition:\"all 0.3s ease\"},children:dungeon.isComingSoon?t(\"rpg.ui.comingSoon\"):dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?t(\"rpg.ui.enter\"):t(\"rpg.ui.locked\")})]})},dungeon.id))})]})]});// 던전 탭 렌더링\nconst renderDungeonTab=()=>{if(!inDungeon||!currentDungeon){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"100px 20px\",textAlign:\"center\",background:\"#1f2937\",color:\"#9ca3af\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:t(\"rpg.dungeon.notEntered\")}),/*#__PURE__*/_jsx(\"p\",{children:t(\"rpg.dungeon.selectFromLobby\")})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:\"linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)\",borderRadius:\"15px\",padding:\"20px\",marginBottom:\"20px\",color:gameColors.primaryText},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{style:{margin:\"0 0 5px 0\",fontSize:\"24px\"},children:[\"\\uD83C\\uDFF0 \",currentDungeon.name]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:0,opacity:0.9,fontSize:\"14px\"},children:[t(\"rpg.floorDisplay\").replace(\"{floor}\",currentDungeon.currentFloor.toString()),\" / \",t(\"rpg.floorDisplay\").replace(\"{floor}\",currentDungeon.floors.toString())]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 던전 나가기 이벤트 로깅\nonAction(\"dungeon_exited\",{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:\"manual\",time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab(\"lobby\");setGameMode(\"lobby\");},style:{background:gameColors.panelBg,color:gameColors.primaryText,border:\"none\",borderRadius:\"8px\",padding:\"10px 15px\",cursor:\"pointer\"},children:t(\"rpg.ui.exitDungeon\")})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"10px\",alignItems:\"center\",justifyContent:\"center\",padding:\"15px\",background:\"rgba(0, 0, 0, 0.2)\",borderRadius:\"10px\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(currentDungeon.currentFloor>1){const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor-1};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(t(\"rpg.messages.movedToFloor\").replace(\"{floor}\",updatedDungeon.currentFloor.toString()));setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}},disabled:currentDungeon.currentFloor<=1,style:{background:currentDungeon.currentFloor<=1?\"#6b7280\":\"#3b82f6\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"8px 12px\",cursor:currentDungeon.currentFloor<=1?\"not-allowed\":\"pointer\",fontSize:\"14px\"},children:t(\"rpg.previousFloor\")}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",max:currentDungeon.floors,value:currentDungeon.currentFloor,placeholder:\"\\uCE35\",onChange:e=>{const targetFloor=parseInt(e.target.value);if(targetFloor>=1&&targetFloor<=currentDungeon.floors){// Check if all previous floors are cleared\nlet canMoveTo=true;for(let i=1;i<targetFloor;i++){if(!currentDungeon.clearedFloors.has(i)){canMoveTo=false;addToCombatLog(t(\"rpg.messages.clearRequiredForFloor\").replace(\"{requiredFloor}\",i.toString()).replace(\"{targetFloor}\",targetFloor.toString()));break;}}if(canMoveTo){const updatedDungeon={...currentDungeon,currentFloor:targetFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(t(\"rpg.messages.movedToFloor\").replace(\"{floor}\",targetFloor.toString()));setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}}},style:{background:\"rgba(255, 255, 255, 0.1)\",color:gameColors.primaryText,border:\"1px solid rgba(255, 255, 255, 0.3)\",borderRadius:\"6px\",padding:\"8px 12px\",fontSize:\"16px\",fontWeight:\"bold\",textAlign:\"center\",width:\"80px\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const nextFloor=currentDungeon.currentFloor+1;const currentFloorCleared=currentDungeon.clearedFloors.has(currentDungeon.currentFloor);if(currentDungeon.currentFloor<currentDungeon.floors&&currentFloorCleared){const updatedDungeon={...currentDungeon,currentFloor:nextFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(t(\"rpg.messages.movedToFloor\").replace(\"{floor}\",updatedDungeon.currentFloor.toString()));setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}else if(!currentFloorCleared){addToCombatLog(t(\"rpg.messages.killRequiredForNext\"));}},disabled:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor),style:{background:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?\"#6b7280\":\"#10b981\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"8px 12px\",cursor:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?\"not-allowed\":\"pointer\",fontSize:\"14px\"},children:t(\"rpg.nextFloor\")})]})]}),showDungeonChoice&&/*#__PURE__*/_jsxs(\"div\",{style:{background:\"linear-gradient(135deg, #f59e0b 0%, #d97706 100%)\",borderRadius:\"15px\",padding:\"20px\",marginBottom:\"20px\",color:gameColors.primaryText,textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"18px\",fontWeight:\"bold\",marginBottom:\"10px\"},children:t(\"rpg.messages.movingToNext\")}),/*#__PURE__*/_jsx(\"div\",{style:{background:\"rgba(255, 255, 255, 0.2)\",borderRadius:\"10px\",height:\"8px\",overflow:\"hidden\",marginBottom:\"10px\"},children:/*#__PURE__*/_jsx(\"div\",{style:{background:\"linear-gradient(90deg, #10b981, #059669)\",height:\"100%\",width:\"100%\",borderRadius:\"10px\",animation:\"progress 3s linear\"}})}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"14px\",opacity:0.9},children:\"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"})]}),currentMonster&&/*#__PURE__*/_jsxs(\"div\",{style:{background:gameColors.panelBg,borderRadius:\"15px\",padding:\"20px\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:\"20px\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"80px\",height:\"80px\",background:\"linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)\",borderRadius:\"50%\",margin:\"0 auto 10px\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",fontSize:\"30px\"},children:\"\\u2694\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,marginBottom:\"10px\"},children:[character.name,\" Lv.\",character.level]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:gameColors.darkPanelBg,borderRadius:\"10px\",padding:\"5px\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:\"linear-gradient(90deg, #ef4444 0%, #dc2626 100%)\",height:\"8px\",borderRadius:\"4px\",width:`${character.hp/character.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,fontSize:\"12px\",marginTop:\"5px\"},children:[\"HP: \",character.hp,\"/\",character.maxHp]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"80px\",height:\"80px\",background:\"linear-gradient(135deg, #dc2626 0%, #991b1b 100%)\",borderRadius:\"50%\",margin:\"0 auto 10px\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",fontSize:\"30px\"},children:\"\\uD83D\\uDC79\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,marginBottom:\"10px\"},children:[currentMonster.name,\" Lv.\",currentMonster.level,currentMonster.isBoss&&/*#__PURE__*/_jsx(\"span\",{style:{color:\"#fbbf24\"},children:\" \\uD83D\\uDC51\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:gameColors.darkPanelBg,borderRadius:\"10px\",padding:\"5px\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:\"linear-gradient(90deg, #ef4444 0%, #dc2626 100%)\",height:\"8px\",borderRadius:\"4px\",width:`${currentMonster.hp/currentMonster.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,fontSize:\"12px\",marginTop:\"5px\"},children:[\"HP: \",currentMonster.hp,\"/\",currentMonster.maxHp]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"10px\",justifyContent:\"center\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:attack,disabled:character.hp<=0,style:{background:\"linear-gradient(135deg, #ef4444 0%, #dc2626 100%)\",color:gameColors.primaryText,border:\"none\",borderRadius:\"10px\",padding:\"12px 24px\",fontSize:\"16px\",fontWeight:\"bold\",cursor:character.hp>0?\"pointer\":\"not-allowed\",opacity:character.hp>0?1:0.5},children:[\"\\u2694\\uFE0F \",t(\"rpg.ui.attackButton\")]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAutoFighting(!isAutoFighting),style:{background:isAutoFighting?\"linear-gradient(135deg, #dc2626 0%, #991b1b 100%)\":\"linear-gradient(135deg, #10b981 0%, #059669 100%)\",color:gameColors.primaryText,border:\"none\",borderRadius:\"10px\",padding:\"12px 24px\",fontSize:\"16px\",fontWeight:\"bold\",cursor:\"pointer\"},children:isAutoFighting?\"⏸️ 자동 중지\":`▶️ ${t(\"rpg.ui.autoFight\")}`})]}),character.skills.filter(skill=>skill.type===\"active\"&&skill.isLearned&&skill.level>0).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:gameColors.primaryText,marginBottom:\"10px\",textAlign:\"center\",fontSize:\"16px\"},children:[\"\\u2728 \\uC2A4\\uD0AC \\uC0AC\\uC6A9 (MP: \",character.mp,\"/\",character.maxMp,\")\"]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",gap:\"8px\",justifyContent:\"center\",flexWrap:\"wrap\"},children:character.skills.filter(skill=>skill.type===\"active\"&&skill.isLearned&&skill.level>0).map(skill=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>castSkill(skill),disabled:character.hp<=0||skill.currentCooldown>0||character.mp<skill.manaCost,style:{background:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?\"linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)\":\"#4b5563\",color:gameColors.primaryText,border:\"none\",borderRadius:\"8px\",padding:\"10px 16px\",fontSize:\"14px\",fontWeight:\"bold\",cursor:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?\"pointer\":\"not-allowed\",opacity:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?1:0.6,position:\"relative\"},title:`${skill.description}\\n대미지: ${calculateSkillDamage(skill,character)} | 마나: ${skill.manaCost}`,children:[/*#__PURE__*/_jsx(\"div\",{children:skill.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"10px\",opacity:0.8},children:[\"MP: \",skill.manaCost,skill.currentCooldown>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" | \",(skill.currentCooldown/1000).toFixed(1),\"s\"]})]})]},skill.id))})]}),inventory.filter(item=>item.type===\"consumable\").length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"20px\"},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:gameColors.primaryText,marginBottom:\"10px\",textAlign:\"center\",fontSize:\"16px\"},children:\"\\uD83E\\uDDEA \\uBB3C\\uC57D \\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",gap:\"8px\",justifyContent:\"center\",flexWrap:\"wrap\"},children:inventory.filter(item=>item.type===\"consumable\").map(item=>{var _item$consumableEffec,_item$consumableEffec2,_item$consumableEffec3,_item$consumableEffec4,_item$consumableEffec5;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>consumeItem(item),disabled:character.hp<=0,style:{background:character.hp>0?`linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`:\"#4b5563\",color:gameColors.primaryText,border:\"none\",borderRadius:\"8px\",padding:\"8px 12px\",fontSize:\"12px\",fontWeight:\"bold\",cursor:character.hp>0?\"pointer\":\"not-allowed\",opacity:character.hp>0?1:0.6,position:\"relative\"},title:`${item.name}\\n${(_item$consumableEffec=item.consumableEffect)!==null&&_item$consumableEffec!==void 0&&_item$consumableEffec.healHp?`HP +${item.consumableEffect.healHp}`:\"\"}${(_item$consumableEffec2=item.consumableEffect)!==null&&_item$consumableEffec2!==void 0&&_item$consumableEffec2.healMp?`MP +${item.consumableEffect.healMp}`:\"\"}${(_item$consumableEffec3=item.consumableEffect)!==null&&_item$consumableEffec3!==void 0&&_item$consumableEffec3.buffType?`${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}`:\"\"}`,children:[/*#__PURE__*/_jsx(\"div\",{children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"10px\",opacity:0.8},children:[item.quantity&&item.quantity>1?`x${item.quantity}`:\"\",((_item$consumableEffec4=item.consumableEffect)===null||_item$consumableEffec4===void 0?void 0:_item$consumableEffec4.healHp)&&` HP+${item.consumableEffect.healHp}`,((_item$consumableEffec5=item.consumableEffect)===null||_item$consumableEffec5===void 0?void 0:_item$consumableEffec5.healMp)&&` MP+${item.consumableEffect.healMp}`]})]},item.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:gameColors.darkPanelBg,borderRadius:\"10px\",padding:\"15px\",height:\"200px\",overflowY:\"auto\",fontSize:\"14px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.secondaryText,marginBottom:\"10px\",fontWeight:\"bold\"},children:[t(\"rpg.ui.combatLog\"),\":\"]}),combatLog.slice(-10).map((log,index)=>/*#__PURE__*/_jsx(\"div\",{style:{color:gameColors.primaryText,marginBottom:\"5px\",lineHeight:\"1.4\"},children:log},index))]})]})]});};// 캐릭터 탭 렌더링 (RPG 스타일 UI)\nconst renderCharacterTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:\"linear-gradient(135deg, #1e293b 0%, #334155 100%)\",border:\"2px solid #475569\",borderRadius:\"12px\",padding:\"20px\",display:\"flex\",gap:\"30px\",minHeight:\"500px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:\"0 0 300px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,margin:\"0 0 20px 0\",fontSize:\"18px\",fontWeight:\"bold\",textAlign:\"center\"},children:[\"\\u2694\\uFE0F \",t(\"rpg.stats.equipment\")]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(3, 1fr)\",gap:\"10px\",marginBottom:\"20px\"},children:[renderEquipmentSlot(\"helmet\",\"⛑️\"),/*#__PURE__*/_jsx(\"div\",{}),\" \",/*#__PURE__*/_jsx(\"div\",{}),\" \",renderEquipmentSlot(\"ring\",\"💍\"),renderEquipmentSlot(\"armor\",\"🛡️\"),renderEquipmentSlot(\"weapon\",\"⚔️\"),renderEquipmentSlot(\"boots\",\"👢\"),renderEquipmentSlot(\"amulet\",\"📿\"),/*#__PURE__*/_jsx(\"div\",{}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:\"1\"},children:[character.stats.availablePoints>0&&/*#__PURE__*/_jsx(\"div\",{style:{background:\"rgba(16, 185, 129, 0.2)\",border:\"1px solid #10b981\",borderRadius:\"8px\",padding:\"12px\",marginBottom:\"20px\",textAlign:\"center\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{color:\"#10b981\",fontSize:\"16px\",fontWeight:\"bold\"},children:[\"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uD3EC\\uC778\\uD2B8: \",character.stats.availablePoints]})}),/*#__PURE__*/_jsxs(\"div\",{style:{background:\"rgba(15, 23, 42, 0.8)\",border:\"1px solid #475569\",borderRadius:\"8px\",padding:\"15px\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:gameColors.primaryText,margin:\"0 0 15px 0\",fontSize:\"16px\",fontWeight:\"bold\"},children:[\"\\uD83D\\uDCCA \",t(\"rpg.stats.baseStats\")]}),[{key:\"strength\",name:t(\"rpg.stats.strength\"),icon:\"💪\",color:\"#dc2626\",bonus:character.stats.strength*2,bonusType:t(\"rpg.character.attack\")},{key:\"agility\",name:t(\"rpg.stats.agility\"),icon:\"⚡\",color:\"#10b981\",bonus:character.stats.agility,bonusType:t(\"rpg.speed\")},{key:\"vitality\",name:t(\"rpg.stats.vitality\"),icon:\"🛡️\",color:\"#3b82f6\",bonus:character.stats.vitality*10,bonusType:\"HP\"},{key:\"intelligence\",name:t(\"rpg.stats.intelligence\"),icon:\"🧠\",color:\"#7c3aed\",bonus:character.stats.intelligence*5,bonusType:\"MP\"}].map(stat=>/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"8px 0\",borderBottom:\"1px solid rgba(71, 85, 105, 0.3)\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:\"16px\"},children:stat.icon}),/*#__PURE__*/_jsx(\"span\",{style:{color:gameColors.primaryText,fontSize:\"14px\"},children:stat.name}),/*#__PURE__*/_jsx(\"span\",{style:{color:stat.color,fontSize:\"16px\",fontWeight:\"bold\"},children:character.stats[stat.key]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"},children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:stat.color,fontSize:\"12px\"},children:[\"+\",stat.bonus,\" \",stat.bonusType]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>allocateStat(stat.key),disabled:character.stats.availablePoints<=0,style:{background:character.stats.availablePoints>0?stat.color:\"#4b5563\",color:gameColors.primaryText,border:\"none\",borderRadius:\"4px\",padding:\"4px 8px\",fontSize:\"12px\",cursor:character.stats.availablePoints>0?\"pointer\":\"not-allowed\",minWidth:\"24px\"},children:\"+\"})]})]},stat.key))]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:\"rgba(15, 23, 42, 0.8)\",border:\"1px solid #475569\",borderRadius:\"8px\",padding:\"15px\"},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:gameColors.primaryText,margin:\"0 0 15px 0\",fontSize:\"16px\",fontWeight:\"bold\"},children:[\"\\u2694\\uFE0F \",t(\"rpg.stats.combatStats\")]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:\"15px\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"#dc2626\",fontSize:\"14px\",fontWeight:\"bold\"},children:t(\"rpg.character.attack\")}),/*#__PURE__*/_jsx(\"div\",{style:{color:gameColors.primaryText,fontSize:\"18px\",fontWeight:\"bold\"},children:character.attack})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"#3b82f6\",fontSize:\"14px\",fontWeight:\"bold\"},children:t(\"rpg.stats.defense\")}),/*#__PURE__*/_jsx(\"div\",{style:{color:gameColors.primaryText,fontSize:\"18px\",fontWeight:\"bold\"},children:character.defense})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"#ef4444\",fontSize:\"14px\",fontWeight:\"bold\"},children:t(\"rpg.stats.vitality\")}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,fontSize:\"16px\"},children:[character.hp,\" / \",character.maxHp]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"#8b5cf6\",fontSize:\"14px\",fontWeight:\"bold\"},children:t(\"rpg.ui.mana\")}),/*#__PURE__*/_jsxs(\"div\",{style:{color:gameColors.primaryText,fontSize:\"16px\"},children:[character.mp,\" / \",character.maxMp]})]})]})]})]})]})]});// 장비 슬롯 렌더링 함수\nconst renderEquipmentSlot=(slot,icon)=>{const item=character.equipment[slot];const rarityColor=(item===null||item===void 0?void 0:item.rarity)===\"legendary\"?\"#f59e0b\":(item===null||item===void 0?void 0:item.rarity)===\"epic\"?\"#a855f7\":(item===null||item===void 0?void 0:item.rarity)===\"rare\"?\"#3b82f6\":(item===null||item===void 0?void 0:item.rarity)===\"mythic\"?\"#ef4444\":\"#9ca3af\";return/*#__PURE__*/_jsx(\"div\",{style:{width:\"70px\",height:\"70px\",background:item?\"rgba(16, 185, 129, 0.2)\":\"rgba(71, 85, 105, 0.3)\",border:item?`2px solid ${rarityColor}`:\"2px solid #475569\",borderRadius:\"8px\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",position:\"relative\",cursor:item?\"pointer\":\"default\"},children:item?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\"},children:icon}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"8px\",color:rarityColor,fontWeight:\"bold\",textAlign:\"center\",lineHeight:\"1\"},children:item.name.length>6?item.name.substring(0,6)+\"...\":item.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>unequipItem(slot),style:{position:\"absolute\",top:\"-5px\",right:\"-5px\",background:\"#dc2626\",color:gameColors.primaryText,border:\"none\",borderRadius:\"50%\",width:\"16px\",height:\"16px\",fontSize:\"10px\",cursor:\"pointer\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},children:\"\\xD7\"})]}):/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\",opacity:0.3},children:icon})});};// 인벤토리 탭 렌더링\n// 아이템 아이콘 맵핑\nconst getItemIcon=item=>{const iconMap={// 무기들\n\"sword1\":\"⚔️\",\"steel_sword\":\"🗡️\",\"enchanted_sword\":\"✨\",\"dragon_sword\":\"🐉\",\"iron-sword\":\"⚔️\",\"steel-sword\":\"🗡️\",\"magic-sword\":\"⚡\",\"legendary-sword\":\"🔥\",\"dragon-slayer\":\"🐉\",// 방어구들\n\"armor1\":\"🦺\",\"plate_armor\":\"🛡️\",\"dragon_armor\":\"🐲\",\"leather-armor\":\"🛡️\",\"iron-armor\":\"⛨\",\"steel-armor\":\"🛡️\",\"magic-armor\":\"✨\",// 투구들\n\"helmet1\":\"⛑️\",\"steel_helmet\":\"🪖\",\"mystic_helmet\":\"👑\",\"iron-helmet\":\"⛑️\",\"steel-helmet\":\"👑\",\"magic-helmet\":\"💎\",// 부츠들\n\"boots1\":\"👢\",\"steel_boots\":\"🥾\",\"mystic_boots\":\"✨\",\"leather-boots\":\"👢\",\"iron-boots\":\"🥾\",\"magic-boots\":\"⚡\",// 반지들\n\"ring1\":\"💍\",\"power_ring\":\"💎\",\"mystic_ring\":\"🔮\",\"power-ring\":\"💍\",\"magic-ring\":\"💫\",\"health-ring\":\"❤️\",\"defense-ring\":\"🛡️\",// 소모품들\n\"health_potion\":\"❤️\",\"mana_potion\":\"💙\",\"greater_health_potion\":\"💖\",\"greater_mana_potion\":\"💎\",\"strength_potion\":\"💪\",\"defense_potion\":\"🛡️\",\"speed_potion\":\"💨\",\"health-potion\":\"🧪\",\"mana-potion\":\"💙\",\"strength-potion\":\"💪\",// 타입별 기본 아이콘\nweapon:\"⚔️\",armor:\"🛡️\",helmet:\"⛑️\",boots:\"👢\",ring:\"💍\",consumable:\"🧪\"};// ID로 먼저 찾고, 없으면 타입으로 찾기\nreturn iconMap[item.id]||iconMap[item.type]||\"📦\";};// 선택된 아이템 상세 정보\nconst[selectedItem,setSelectedItem]=useState(null);const renderInventoryTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\"},children:[\"\\uD83D\\uDCE6 \",t(\"rpg.inventory.items\"),\" (\",inventory.length,\"/50)\"]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(10, 1fr)\",gap:\"4px\",background:\"rgba(0, 0, 0, 0.3)\",padding:\"15px\",borderRadius:\"10px\",border:\"2px solid #4b5563\"},children:Array.from({length:50},(_,index)=>{const item=inventory[index];const isEmpty=!item;return/*#__PURE__*/_jsx(\"div\",{onClick:()=>item&&setSelectedItem(item),style:{width:\"50px\",height:\"50px\",background:isEmpty?\"rgba(255, 255, 255, 0.05)\":\"rgba(255, 255, 255, 0.1)\",border:isEmpty?\"1px solid #374151\":`2px solid ${getRarityColor(item.rarity)}`,borderRadius:\"8px\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",cursor:item?\"pointer\":\"default\",position:\"relative\",transition:\"all 0.2s ease\"},onMouseEnter:e=>{if(item){e.currentTarget.style.transform=\"scale(1.05)\";e.currentTarget.style.boxShadow=`0 0 15px ${getRarityColor(item.rarity)}50`;}},onMouseLeave:e=>{if(item){e.currentTarget.style.transform=\"scale(1)\";e.currentTarget.style.boxShadow=\"none\";}},children:item&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\"},children:getItemIcon(item)}),inventory.filter(inv=>inv.name===item.name).length>1&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",bottom:\"2px\",right:\"2px\",background:\"#000\",color:gameColors.primaryText,fontSize:\"10px\",padding:\"1px 3px\",borderRadius:\"3px\",lineHeight:\"1\"},children:inventory.filter(inv=>inv.name===item.name).length})]})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"300px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\"},children:[\"\\uD83D\\uDCCB \",t(\"rpg.inventory.itemInfo\")]}),selectedItem?/*#__PURE__*/_jsxs(\"div\",{style:{background:\"rgba(255, 255, 255, 0.1)\",border:`2px solid ${getRarityColor(selectedItem.rarity)}`,borderRadius:\"10px\",padding:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"48px\",marginBottom:\"10px\"},children:getItemIcon(selectedItem)}),/*#__PURE__*/_jsx(\"h4\",{style:{color:getRarityColor(selectedItem.rarity),margin:\"0 0 5px 0\",fontSize:\"18px\",fontWeight:\"bold\"},children:selectedItem.name}),/*#__PURE__*/_jsxs(\"p\",{style:{color:gameColors.secondaryText,margin:\"0 0 15px 0\",fontSize:\"14px\",textTransform:\"capitalize\"},children:[selectedItem.type,\" \\u2022 \",selectedItem.rarity]})]}),selectedItem.stats&&Object.keys(selectedItem.stats).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.item.stats\")}),Object.entries(selectedItem.stats).map(_ref4=>{let[stat,value]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",color:\"#10b981\",fontSize:\"12px\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:stat===\"attack\"?\"공격력\":stat===\"defense\"?\"방어력\":stat===\"hp\"?\"체력\":stat===\"mp\"?t(\"rpg.ui.mana\"):stat}),/*#__PURE__*/_jsxs(\"span\",{children:[\"+\",value]})]},stat);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.shop.price\")}),/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#f59e0b\",fontSize:\"12px\",margin:0},children:[selectedItem.price.toLocaleString(),\"G\"]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"10px\"},children:[selectedItem.type!==\"consumable\"&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{equipItem(selectedItem);setSelectedItem(null);},style:{background:\"linear-gradient(135deg, #10b981 0%, #059669 100%)\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"10px\",fontSize:\"14px\",cursor:\"pointer\",fontWeight:\"bold\"},children:\"\\uC7A5\\uCC29\"}),selectedItem.type===\"consumable\"&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 사용 로직 (임시)\nconsole.log(\"Use item:\",selectedItem.name);setSelectedItem(null);},style:{background:\"linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"10px\",fontSize:\"14px\",cursor:\"pointer\",fontWeight:\"bold\"},children:\"\\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const sellPrice=Math.floor(selectedItem.price*0.7);setCharacter(prev=>({...prev,gold:prev.gold+sellPrice}));setInventory(prev=>prev.filter(invItem=>invItem.id!==selectedItem.id));addToCombatLog(`${selectedItem.name}을 ${sellPrice} 골드에 판매했습니다!`);setSelectedItem(null);},style:{background:\"#dc2626\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"10px\",fontSize:\"14px\",cursor:\"pointer\"},children:[\"\\uD310\\uB9E4 (\",Math.floor(selectedItem.price*0.7),\"G)\"]})]})]}):/*#__PURE__*/_jsx(\"div\",{style:{background:\"rgba(255, 255, 255, 0.05)\",borderRadius:\"10px\",padding:\"40px\",textAlign:\"center\",color:gameColors.secondaryText},children:/*#__PURE__*/_jsx(\"p\",{children:t(\"rpg.inventory.clickForInfo\")})})]})]})]});// 상점 카테고리 상태\nconst[shopCategory,setShopCategory]=useState(\"equipment\");const[selectedShopItem,setSelectedShopItem]=useState(null);const renderShopTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",background:gameColors.mainBg,minHeight:\"600px\"},children:[renderCharacterHeader(),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",background:\"rgba(255, 255, 255, 0.1)\",borderRadius:\"10px\",marginBottom:\"20px\",overflow:\"hidden\"},children:[{id:\"equipment\",label:t(\"rpg.shop.equipment\"),icon:\"⚔️\",color:\"#10b981\"},{id:\"consumable\",label:t(\"rpg.shop.consumable\"),icon:\"🧪\",color:\"#f59e0b\"}].map(tab=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShopCategory(tab.id),style:{flex:1,padding:\"15px 20px\",background:shopCategory===tab.id?`linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)`:\"transparent\",color:shopCategory===tab.id?\"white\":gameColors.secondaryText,border:\"none\",cursor:\"pointer\",fontSize:\"14px\",fontWeight:shopCategory===tab.id?\"bold\":\"normal\",transition:\"all 0.3s ease\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"8px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:tab.icon}),/*#__PURE__*/_jsx(\"span\",{children:tab.label})]},tab.id))}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"16px\"},children:shopCategory===\"equipment\"?`⚔️ ${t(\"rpg.shop.equipment\")} ${t(\"rpg.shop\")}`:`🧪 ${t(\"rpg.shop.consumable\")} ${t(\"rpg.shop\")}`}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(8, 1fr)\",gap:\"6px\",background:\"rgba(0, 0, 0, 0.3)\",padding:\"15px\",borderRadius:\"10px\",border:\"2px solid #4b5563\",minHeight:\"400px\"},children:Array.from({length:32},(_,index)=>{let items=[];if(shopCategory===\"equipment\"){// 장비 아이템 (무기, 방어구, 투구, 부츠, 반지)\nitems=shop.filter(item=>item.type!==\"consumable\");}else{// 소모품 아이템\nitems=shop.filter(item=>item.type===\"consumable\");}const item=items[index];const isEmpty=!item;const canAfford=character.gold>=((item===null||item===void 0?void 0:item.price)||0);return/*#__PURE__*/_jsx(\"div\",{onClick:()=>item&&setSelectedShopItem(item),style:{width:\"50px\",height:\"50px\",background:isEmpty?\"rgba(255, 255, 255, 0.05)\":canAfford?\"rgba(16, 185, 129, 0.1)\":\"rgba(107, 114, 128, 0.1)\",border:isEmpty?\"1px solid #374151\":`2px solid ${getRarityColor(item.rarity)}`,borderRadius:\"8px\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",cursor:item?\"pointer\":\"default\",position:\"relative\",transition:\"all 0.2s ease\"},onMouseEnter:e=>{if(item){e.currentTarget.style.transform=\"scale(1.1)\";e.currentTarget.style.boxShadow=`0 0 15px ${getRarityColor(item.rarity)}50`;}},onMouseLeave:e=>{if(item){e.currentTarget.style.transform=\"scale(1)\";e.currentTarget.style.boxShadow=\"none\";}},children:item&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"20px\",opacity:canAfford?1:0.5},children:getItemIcon(item)}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",bottom:\"2px\",right:\"2px\",background:canAfford?\"#10b981\":\"#dc2626\",color:gameColors.primaryText,fontSize:\"8px\",padding:\"1px 3px\",borderRadius:\"3px\",lineHeight:\"1\"},children:[item.price>=1000?`${Math.floor(item.price/1000)}K`:item.price,\"G\"]})]})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"300px\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:gameColors.primaryText,marginBottom:\"15px\",fontSize:\"16px\"},children:[\"\\uD83D\\uDCCB \",t(\"rpg.shop.itemInfo\")]}),selectedShopItem?/*#__PURE__*/_jsxs(\"div\",{style:{background:\"rgba(255, 255, 255, 0.1)\",border:`2px solid ${getRarityColor(selectedShopItem.rarity)}`,borderRadius:\"10px\",padding:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"48px\",marginBottom:\"10px\"},children:getItemIcon(selectedShopItem)}),/*#__PURE__*/_jsx(\"h4\",{style:{color:getRarityColor(selectedShopItem.rarity),margin:\"0 0 5px 0\",fontSize:\"18px\",fontWeight:\"bold\"},children:selectedShopItem.name}),/*#__PURE__*/_jsxs(\"p\",{style:{color:gameColors.secondaryText,margin:\"0 0 15px 0\",fontSize:\"14px\",textTransform:\"capitalize\"},children:[selectedShopItem.type,\" \\u2022 Lv.\",selectedShopItem.level,\" \\u2022\",\" \",selectedShopItem.rarity]})]}),selectedShopItem.stats&&Object.keys(selectedShopItem.stats).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.item.stats\")}),Object.entries(selectedShopItem.stats).map(_ref5=>{let[stat,value]=_ref5;return value>0&&/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",color:\"#10b981\",fontSize:\"12px\",marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(\"span\",{children:stat===\"attack\"?t(\"rpg.attackWithIcon\"):stat===\"defense\"?t(\"rpg.defenseWithIcon\"):stat===\"hp\"?t(\"rpg.healthWithIcon\"):stat===\"mp\"?t(\"rpg.manaWithIcon\"):stat===\"speed\"?`💨 ${t(\"rpg.speed\")}`:stat===\"critRate\"?\"💥 크리티컬\":stat}),/*#__PURE__*/_jsxs(\"span\",{children:[\"+\",value]})]},stat);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:gameColors.primaryText,margin:\"0 0 10px 0\",fontSize:\"14px\"},children:t(\"rpg.shop.price\")}),/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#f59e0b\",fontSize:\"14px\",margin:0,fontWeight:\"bold\"},children:[selectedShopItem.price.toLocaleString(),t(\"rpg.item.gold\")]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"10px\"},children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{buyItem(selectedShopItem);setSelectedShopItem(null);},disabled:character.gold<selectedShopItem.price,style:{background:character.gold>=selectedShopItem.price?\"linear-gradient(135deg, #10b981 0%, #059669 100%)\":\"#6b7280\",color:gameColors.primaryText,border:\"none\",borderRadius:\"6px\",padding:\"12px\",fontSize:\"14px\",cursor:character.gold>=selectedShopItem.price?\"pointer\":\"not-allowed\",fontWeight:\"bold\"},children:[t(\"rpg.shop.buy\"),\" (\",selectedShopItem.price.toLocaleString(),\"G)\"]})})]}):/*#__PURE__*/_jsx(\"div\",{style:{background:\"rgba(255, 255, 255, 0.05)\",borderRadius:\"10px\",padding:\"40px\",textAlign:\"center\",color:gameColors.secondaryText},children:/*#__PURE__*/_jsx(\"p\",{children:t(\"rpg.item.clickForInfo\")})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"15px 20px\",background:\"rgba(255, 255, 255, 0.1)\",borderRadius:\"10px\",marginTop:\"20px\",border:\"2px solid #4b5563\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"14px\",opacity:0.9,color:\"white\"},children:t(\"rpg.item.ownedGold\")}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"20px\",fontWeight:\"bold\",color:\"#f59e0b\"},children:[character.gold.toLocaleString(),\"G\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"right\"},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"12px\",opacity:0.8,color:gameColors.secondaryText},children:shopCategory===\"equipment\"?t(\"rpg.shop.equipment.description\"):t(\"rpg.shop.consumables.description\")})})]})]});const renderTabs=()=>/*#__PURE__*/_jsx(\"div\",{style:{background:gameColors.panelBg,display:\"flex\",borderRadius:\"15px 15px 0 0\",overflow:\"hidden\"},children:[{id:\"lobby\",name:t(\"rpg.tabs.lobby\"),icon:\"🏠\"},{id:\"character\",name:t(\"rpg.tabs.character\"),icon:\"👤\"},{id:\"inventory\",name:t(\"rpg.tabs.inventory\"),icon:\"🎒\"},{id:\"skills\",name:t(\"rpg.tabs.skills\"),icon:\"✨\"},{id:\"dungeon\",name:t(\"rpg.tabs.dungeon\"),icon:\"🏰\"},{id:\"shop\",name:t(\"rpg.tabs.shop\"),icon:\"🛒\"}].map(tab=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab(tab.id),style:{background:currentTab===tab.id?colors.accent:\"transparent\",color:colors.text,border:\"none\",padding:\"15px 20px\",fontSize:\"14px\",cursor:\"pointer\",flex:1,transition:\"all 0.3s ease\"},children:[/*#__PURE__*/_jsx(\"div\",{children:tab.icon}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"12px\",marginTop:\"5px\"},children:tab.name})]},tab.id))});return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",maxWidth:\"1200px\",margin:\"0 auto\",background:colors.cardBg,borderRadius:\"20px\",overflow:\"hidden\",boxShadow:\"0 20px 60px rgba(0, 0, 0, 0.3)\",fontFamily:'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',border:`1px solid ${colors.cardBorder}`},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:colors.backgroundSecondary,padding:\"20px\",textAlign:\"center\",position:\"relative\",overflow:\"hidden\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",top:0,left:0,right:0,bottom:0,background:\"radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)\"}}),/*#__PURE__*/_jsx(\"h1\",{style:{margin:0,fontSize:\"32px\",fontWeight:\"bold\",color:colors.text,textShadow:\"0 4px 20px rgba(147, 51, 234, 0.5)\",position:\"relative\",zIndex:1},children:t(\"rpg.title\")}),/*#__PURE__*/_jsx(\"p\",{style:{margin:\"10px 0 0 0\",color:colors.textSecondary,fontSize:\"16px\",position:\"relative\",zIndex:1},children:t(\"rpg.subtitle\")})]}),renderTabs(),currentTab===\"lobby\"&&renderLobbyTab(),currentTab===\"dungeon\"&&renderDungeonTab(),currentTab===\"character\"&&renderCharacterTab(),currentTab===\"inventory\"&&renderInventoryTab(),currentTab===\"skills\"&&renderSkillsTab(),currentTab===\"shop\"&&renderShopTab()]});};","map":{"version":3,"names":["React","useState","useEffect","useRef","useTheme","useLanguage","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","AdvancedIdleRPG","_ref","onAction","isSimulating","currentAction","userStats","setUserStats","currentUser","colors","t","gameColors","mainBg","background","cardBg","cardBorder","primaryText","secondaryText","panelBg","darkPanelBg","health","mana","attack","defense","gold","exp","common","uncommon","rare","epic","legendary","mythic","buttonBg","buttonText","buttonHover","border","divider","calculateSkillDamage","skill","character","level","isLearned","damage","baseDamage","damageMultiplier","statMultiplier","hp","maxHp","mp","maxMp","Math","floor","style","document","createElement","textContent","head","appendChild","removeChild","setCharacter","id","name","maxExp","speed","class","skills","maxLevel","manaCost","cooldown","currentCooldown","type","category","description","requiredLevel","isUnlocked","equipment","stats","strength","agility","intelligence","vitality","luck","availablePoints","prestige","rebirth","buffs","amount","duration","currentTab","setCurrentTab","gameMode","setGameMode","isAutoFighting","setIsAutoFighting","currentMonster","setCurrentMonster","combatLog","setCombatLog","selectedDungeon","setSelectedDungeon","inventory","setInventory","availableDungeons","setAvailableDungeons","currentDungeon","setCurrentDungeon","inDungeon","setInDungeon","guild","setGuild","shop","setShop","achievements","setAchievements","monstersDefeated","setMonstersDefeated","totalGoldEarned","setTotalGoldEarned","showDungeonChoice","setShowDungeonChoice","logRef","initializeGame","monsters_defeated","character_class","total_gold_earned","inventory_items","map","item","rarity","quantity","current_buffs","Object","entries","filter","_ref2","_","buff","_ref3","ceil","texts","dungeon","forest","cave","tower","monsters","slime","goblin","orc","troll","dragon","combat","appeared","critical","levelUp","defeated","itemObtained","dungeonCleared","nextFloor","getAllSkills","currentLevel","existingSkills","_existingSkills$find","allSkills","find","s","initialSkills","initialDungeons","floors","currentFloor","clearedFloors","Set","rewards","goldRange","expRange","itemDropChance","isComingSoon","getShopItems","_availableDungeons$fi","baseItems","price","enhancement","consumableEffect","healHp","healMp","goblinCaveUnlocked","d","push","buffType","buffAmount","buffDuration","shopItems","prev","length","mergedSkills","newSkill","existingSkill","window","gameTexts","spawnMonster","updateShop","_availableDungeons$fi2","_availableDungeons$fi3","existingIds","newItems","includes","wizardTowerUnlocked","wizardItems","updateSkills","updatedSkills","executeSkill","addToCombatLog","healAmount","min","newMonsterHp","max","setTimeout","defeatMonster","learnSkill","cost","getSkillIcon","iconMap","heal","shield","haste","blessing","vampire","selectedSkill","setSelectedSkill","skillSubTab","setSkillSubTab","renderSkillsTab","padding","minHeight","children","renderCharacterHeader","display","gap","width","color","marginBottom","fontSize","flexDirection","label","count","tab","index","onClick","borderRadius","cursor","fontWeight","transition","textAlign","justifyContent","alignItems","minWidth","flex","gridTemplateColumns","Array","from","filteredSkills","isEmpty","height","position","onMouseEnter","e","currentTarget","transform","boxShadow","onMouseLeave","opacity","bottom","right","lineHeight","top","animation","margin","marginTop","toLocaleString","disabled","baseHp","baseAttack","baseDefense","minLevel","availableMonsters","monster","finalMonsters","abs","randomMonster","random","levelMultiplier","Date","now","dropItems","generateDropItems","isBoss","dropChance","rarities","itemTypes","itemType","generateItemName","generateItemStats","calculateItemPrice","prefixes","itemNames","weapon","armor","helmet","boots","ring","amulet","prefix","itemTypeNames","multipliers","base","critRate","critDamage","basePrice","buffedAttack","calculateDamage","isCritical","finalDamage","user_id","is_critical","monster_name","monster_level","character_level","character_attack","monster_hp_remaining","dungeon_name","dungeon_floor","monsterAttack","buffedDefense","newHp","defeat","dungeon_id","damage_taken","character_defense","current_floor","total_floors","exit_reason","time_spent","getTime","expGained","goldGained","newExp","newGold","newLevel","newMaxExp","newMp","newMaxHp","newMaxMp","new_level","stat_points_gained","prevDungeons","exp_gained","gold_gained","items_dropped","updatedDungeon","replace","toString","spawnDungeonMonster","proceedToNextFloor","exitDungeonAfterVictory","resetDungeon","autoAttackTimer","clearTimeout","interval","setInterval","clearInterval","message","newLog","shift","current","scrollTop","scrollHeight","allocateStatPoint","stat","equipItem","slot","currentEquippedItem","newEquipment","newAttack","newDefense","newSpeed","invItem","unequipItem","equippedItem","undefined","adjustedHp","adjustedMp","sellItem","sellPrice","buyItem","getRarityColor","enterDungeon","character_hp","character_mp","entry_time","forceSpawn","arguments","getDungeonMonsters","dungeonId","baseMonsters","floorBasedMonsterIndex","baseIndex","randomVariation","selectedIndex","selectedMonster","consumeItem","effect","itemIndex","findIndex","newInventory","currentItem","splice","item_name","item_type","heal_hp","heal_mp","buff_type","buff_amount","character_hp_before","character_mp_before","castSkill","skill_name","skill_level","mana_cost","character_mp_after","allocateStat","statName","hpBonus","mpBonus","attackBonus","defenseBonus","stat_name","stat_value","available_points","expPercentage","backgroundColor","overflow","renderLobbyTab","renderDungeonTab","value","placeholder","onChange","targetFloor","parseInt","target","canMoveTo","i","has","currentFloorCleared","flexWrap","title","toFixed","_item$consumableEffec","_item$consumableEffec2","_item$consumableEffec3","_item$consumableEffec4","_item$consumableEffec5","overflowY","slice","log","renderCharacterTab","renderEquipmentSlot","key","icon","bonus","bonusType","borderBottom","rarityColor","substring","getItemIcon","consumable","selectedItem","setSelectedItem","renderInventoryTab","inv","textTransform","keys","_ref4","console","shopCategory","setShopCategory","selectedShopItem","setSelectedShopItem","renderShopTab","items","canAfford","_ref5","renderTabs","accent","text","maxWidth","fontFamily","backgroundSecondary","left","textShadow","zIndex","textSecondary"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedIdleRPG.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { useLanguage } from \"../contexts/LanguageContext\";\n\ninterface Dungeon {\n  id: string;\n  name: string;\n  level: number;\n  description: string;\n  floors: number;\n  currentFloor: number;\n  clearedFloors: Set<number>; // Track which floors have been cleared\n  monsters: Monster[];\n  rewards: {\n    goldRange: [number, number];\n    expRange: [number, number];\n    itemDropChance: number;\n  };\n  requiredLevel: number;\n  isUnlocked: boolean;\n  isComingSoon?: boolean; // 업데이트 예정 던전인지\n}\n\ninterface Monster {\n  id: string;\n  name: string;\n  level: number;\n  hp: number;\n  maxHp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  exp: number;\n  gold: number;\n  dropItems: Item[];\n  isBoss?: boolean;\n}\n\ninterface Character {\n  id: string;\n  name: string;\n  level: number;\n  exp: number;\n  maxExp: number;\n  hp: number;\n  maxHp: number;\n  mp: number;\n  maxMp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  gold: number;\n  class: string;\n  skills: Skill[];\n  equipment: Equipment;\n  stats: CharacterStats;\n  prestige: number;\n  rebirth: number;\n  buffs: {\n    attack: { amount: number; duration: number };\n    defense: { amount: number; duration: number };\n    speed: { amount: number; duration: number };\n  };\n}\n\ninterface CharacterStats {\n  strength: number;\n  agility: number;\n  intelligence: number;\n  vitality: number;\n  luck: number;\n  availablePoints: number;\n}\n\ninterface Skill {\n  id: string;\n  name: string;\n  level: number;\n  maxLevel: number;\n  baseDamage: number;\n  damageMultiplier: number; // 레벨당 증가율\n  statMultiplier: {\n    attack?: number;\n    defense?: number;\n    hp?: number;\n    mp?: number;\n  }; // 스탯 기반 데미지 배율\n  manaCost: number;\n  cooldown: number;\n  currentCooldown: number;\n  type: \"active\" | \"passive\";\n  category: \"combat\" | \"magic\" | \"support\" | \"passive\"; // 스킬 분류\n  description: string;\n  requiredLevel?: number;\n  isUnlocked?: boolean;\n  isLearned?: boolean; // 배운 스킬인지 (0레벨에서 1레벨로 업그레이드했는지)\n}\n\ninterface Equipment {\n  weapon?: Item;\n  armor?: Item;\n  helmet?: Item;\n  boots?: Item;\n  ring?: Item;\n  amulet?: Item;\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  type:\n    | \"weapon\"\n    | \"armor\"\n    | \"helmet\"\n    | \"boots\"\n    | \"ring\"\n    | \"amulet\"\n    | \"consumable\";\n  rarity: \"common\" | \"rare\" | \"epic\" | \"legendary\" | \"mythic\";\n  level: number;\n  stats: {\n    attack?: number;\n    defense?: number;\n    hp?: number;\n    mp?: number;\n    speed?: number;\n    critRate?: number;\n    critDamage?: number;\n  };\n  price: number;\n  enhancement: number;\n  // 물약용 속성들\n  consumableEffect?: {\n    healHp?: number;\n    healMp?: number;\n    buffDuration?: number; // 버프 지속시간 (밀리초)\n    buffType?: \"attack\" | \"defense\" | \"speed\"; // 버프 타입\n    buffAmount?: number; // 버프 수치\n  };\n  quantity?: number; // 소비 아이템 수량\n}\n\ninterface Guild {\n  id: string;\n  name: string;\n  level: number;\n  members: number;\n  maxMembers: number;\n  benefits: {\n    expBonus: number;\n    goldBonus: number;\n    dropBonus: number;\n  };\n}\n\ninterface AppProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  userStats: any;\n  setUserStats: (stats: any) => void;\n  currentUser: any;\n}\n\nexport const AdvancedIdleRPG: React.FC<AppProps> = ({\n  onAction,\n  isSimulating,\n  currentAction,\n  userStats,\n  setUserStats,\n  currentUser,\n}) => {\n  const { colors } = useTheme();\n  const { t } = useLanguage();\n\n  // Theme-based color scheme for RPG UI\n  const gameColors = {\n    // Main containers and backgrounds\n    mainBg: colors.background,\n    cardBg: colors.cardBg,\n    cardBorder: colors.cardBorder,\n    \n    // Text colors - ensure high contrast\n    primaryText: colors.cardBg === \"#ffffff\" ? \"#1f2937\" : \"#f8fafc\",\n    secondaryText: colors.cardBg === \"#ffffff\" ? \"#6b7280\" : \"#9ca3af\",\n    \n    // Game-specific colors that adapt to theme\n    panelBg: colors.cardBg === \"#ffffff\" ? \"#f8fafc\" : \"#374151\",\n    darkPanelBg: colors.cardBg === \"#ffffff\" ? \"#e2e8f0\" : \"#1f2937\",\n    \n    // Status colors (these remain consistent for game logic)\n    health: \"#34d399\",\n    mana: \"#a78bfa\",\n    attack: \"#f87171\",\n    defense: \"#60a5fa\",\n    gold: \"#fbbf24\",\n    exp: \"#f59e0b\",\n    \n    // Rarity colors (consistent across themes)\n    common: \"#9ca3af\",\n    uncommon: \"#10b981\",\n    rare: \"#3b82f6\",\n    epic: \"#8b5cf6\",\n    legendary: \"#f59e0b\",\n    mythic: \"#ef4444\",\n    \n    // Interactive elements\n    buttonBg: colors.cardBg === \"#ffffff\" ? \"#3b82f6\" : \"#4f46e5\",\n    buttonText: \"#ffffff\",\n    buttonHover: colors.cardBg === \"#ffffff\" ? \"#2563eb\" : \"#6366f1\",\n    \n    // Borders and dividers\n    border: colors.cardBorder,\n    divider: colors.cardBg === \"#ffffff\" ? \"#e5e7eb\" : \"#4b5563\"\n  };\n\n  // 스킬 데미지 계산 함수\n  const calculateSkillDamage = (skill: Skill, character: Character): number => {\n    if (skill.level === 0 || !skill.isLearned) return 0;\n\n    let damage = skill.baseDamage;\n\n    // 레벨에 따른 데미지 증가\n    damage += skill.baseDamage * skill.damageMultiplier * (skill.level - 1);\n\n    // 스탯에 따른 데미지 증가\n    if (skill.statMultiplier.attack) {\n      damage += character.attack * skill.statMultiplier.attack * skill.level;\n    }\n    if (skill.statMultiplier.defense) {\n      damage += character.defense * skill.statMultiplier.defense * skill.level;\n    }\n    if (skill.statMultiplier.hp) {\n      damage += character.maxHp * skill.statMultiplier.hp * skill.level;\n    }\n    if (skill.statMultiplier.mp) {\n      damage += character.maxMp * skill.statMultiplier.mp * skill.level;\n    }\n\n    return Math.floor(damage);\n  };\n\n  // CSS 애니메이션 추가\n  React.useEffect(() => {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const [character, setCharacter] = useState<Character>({\n    id: \"1\",\n    name: \"용사\",\n    level: 1,\n    exp: 0,\n    maxExp: 100,\n    hp: 100,\n    maxHp: 100,\n    mp: 50,\n    maxMp: 50,\n    attack: 20,\n    defense: 10,\n    speed: 15,\n    gold: 100,\n    class: t(\"rpg.class.warrior\"),\n    skills: [\n      // 기본 스킬들을 미리 정의하여 초기화 문제 방지\n      {\n        id: \"basic-attack\",\n        name: \"기본 공격\",\n        level: 1,\n        maxLevel: 10,\n        baseDamage: 15,\n        damageMultiplier: 0.2,\n        statMultiplier: { attack: 1.0 },\n        manaCost: 0,\n        cooldown: 1000,\n        currentCooldown: 0,\n        type: \"active\",\n        category: \"combat\",\n        description: \"기본적인 물리 공격입니다.\",\n        requiredLevel: 1,\n        isUnlocked: true,\n        isLearned: true,\n      },\n      {\n        id: \"power-strike\",\n        name: \"강력한 베기\",\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 25,\n        damageMultiplier: 0.3,\n        statMultiplier: { attack: 1.5 },\n        manaCost: 15,\n        cooldown: 3000,\n        currentCooldown: 0,\n        type: \"active\",\n        category: \"combat\",\n        description: \"강력한 일격을 가합니다.\",\n        requiredLevel: 3,\n        isUnlocked: true,\n        isLearned: false,\n      },\n      {\n        id: \"heal\",\n        name: \"치유\",\n        level: 0,\n        maxLevel: 10,\n        baseDamage: 30,\n        damageMultiplier: 0.25,\n        statMultiplier: { mp: 0.5 },\n        manaCost: 20,\n        cooldown: 5000,\n        currentCooldown: 0,\n        type: \"active\",\n        category: \"support\",\n        description: \"HP를 회복합니다.\",\n        requiredLevel: 2,\n        isUnlocked: true,\n        isLearned: false,\n      },\n      {\n        id: \"strength-boost\",\n        name: t(\"rpg.skills.strengthBoost.name\"),\n        level: 0,\n        maxLevel: 5,\n        baseDamage: 0,\n        damageMultiplier: 0,\n        statMultiplier: { attack: 0.1 },\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: \"passive\",\n        category: \"passive\",\n        description: t(\"rpg.skills.strengthBoost.description\"),\n        requiredLevel: 5,\n        isUnlocked: true,\n        isLearned: false,\n      },\n    ],\n    equipment: {},\n    stats: {\n      strength: 10,\n      agility: 8,\n      intelligence: 5,\n      vitality: 12,\n      luck: 7,\n      availablePoints: 0,\n    },\n    prestige: 0,\n    rebirth: 0,\n    buffs: {\n      attack: { amount: 0, duration: 0 },\n      defense: { amount: 0, duration: 0 },\n      speed: { amount: 0, duration: 0 },\n    },\n  });\n\n  const [currentTab, setCurrentTab] = useState<\n    \"lobby\" | \"dungeon\" | \"character\" | \"inventory\" | \"skills\" | \"shop\"\n  >(\"lobby\");\n  const [gameMode, setGameMode] = useState<\"lobby\" | \"dungeon\" | \"combat\">(\n    \"lobby\"\n  );\n  const [isAutoFighting, setIsAutoFighting] = useState(false);\n  const [currentMonster, setCurrentMonster] = useState<Monster | null>(null);\n  const [combatLog, setCombatLog] = useState<string[]>([]);\n  const [selectedDungeon, setSelectedDungeon] = useState<Dungeon | null>(null);\n  const [inventory, setInventory] = useState<Item[]>([]);\n  const [availableDungeons, setAvailableDungeons] = useState<Dungeon[]>([]);\n  const [currentDungeon, setCurrentDungeon] = useState<Dungeon | null>(null);\n  const [inDungeon, setInDungeon] = useState(false);\n  const [guild, setGuild] = useState<Guild | null>(null);\n  const [shop, setShop] = useState<Item[]>([]);\n  const [achievements, setAchievements] = useState<string[]>([]);\n  const [monstersDefeated, setMonstersDefeated] = useState(0);\n  const [totalGoldEarned, setTotalGoldEarned] = useState(0);\n  const [showDungeonChoice, setShowDungeonChoice] = useState(false);\n\n  const logRef = useRef<HTMLDivElement>(null);\n\n  // 게임 초기화 - 언어 변경 시에도 다시 초기화\n  useEffect(() => {\n    initializeGame();\n  }, [t]);\n\n  // 캐릭터 상태가 변경될 때마다 userStats 업데이트\n  useEffect(() => {\n    setUserStats({\n      level: character.level,\n      gold: character.gold,\n      attack: character.attack,\n      defense: character.defense,\n      hp: character.hp,\n      maxHp: character.maxHp,\n      exp: character.exp,\n      maxExp: character.maxExp,\n      monsters_defeated: monstersDefeated,\n      character_class: character.class,\n      total_gold_earned: totalGoldEarned,\n      inventory_items: inventory.map((item) => ({\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: item.rarity,\n        quantity: item.quantity || 1,\n        stats: item.stats,\n      })),\n      skills: character.skills.map((skill) => ({\n        id: skill.id,\n        name: skill.name,\n        level: skill.level,\n        type: skill.type,\n      })),\n      current_buffs: Object.entries(character.buffs)\n        .filter(([_, buff]) => buff.duration > 0)\n        .map(([type, buff]) => ({\n          type,\n          amount: buff.amount,\n          duration: Math.ceil(buff.duration / 1000),\n        })),\n    });\n  }, [character, inventory, monstersDefeated, totalGoldEarned, setUserStats]);\n\n  const initializeGame = () => {\n    // LanguageContext에서 번역 함수 사용\n    const texts = {\n      character: {\n        name: t(\"rpg.character.name\"),\n        class: t(\"rpg.character.class\"),\n      },\n      dungeon: {\n        forest: {\n          name: t(\"rpg.dungeon.forest.name\"),\n          description: t(\"rpg.dungeon.forest.description\"),\n        },\n        cave: {\n          name: t(\"rpg.dungeon.cave.name\"),\n          description: t(\"rpg.dungeon.cave.description\"),\n        },\n        tower: {\n          name: t(\"rpg.dungeon.tower.name\"),\n          description: t(\"rpg.dungeon.tower.description\"),\n        },\n      },\n      monsters: {\n        slime: t(\"rpg.monsters.slime\"),\n        goblin: t(\"rpg.monsters.goblin\"),\n        orc: t(\"rpg.monsters.orc\"),\n        troll: t(\"rpg.monsters.troll\"),\n        dragon: t(\"rpg.monsters.dragon\"),\n      },\n      combat: {\n        appeared: t(\"rpg.combat.appeared\"),\n        attack: t(\"rpg.combat.attack\"),\n        damage: t(\"rpg.combat.damage\"),\n        critical: t(\"rpg.combat.critical\"),\n        levelUp: t(\"rpg.combat.levelUp\"),\n        defeated: t(\"rpg.combat.defeated\"),\n        gold: t(\"rpg.combat.gold\"),\n        itemObtained: t(\"rpg.combat.itemObtained\"),\n        dungeonCleared: t(\"rpg.combat.dungeonCleared\"),\n        nextFloor: t(\"rpg.combat.nextFloor\"),\n      },\n    };\n    // 모든 스킬 정의 함수 (공통 사용)\n    const getAllSkills = (\n      currentLevel: number,\n      existingSkills?: Skill[]\n    ): Skill[] => {\n      const allSkills = [\n        // 전투 스킬 (레벨 1)\n        {\n          id: \"slash\",\n          name: t(\"rpg.skills.slash.name\"),\n          level: existingSkills?.find((s) => s.id === \"slash\")?.level || 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.5,\n          statMultiplier: { attack: 2.0 },\n          manaCost: 10,\n          cooldown: 3000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"combat\" as const,\n          description: t(\"rpg.skills.slash.description\"),\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false,\n        },\n        {\n          id: \"heal\",\n          name: t(\"rpg.skills.heal.name\"),\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 30,\n          damageMultiplier: 0.3,\n          statMultiplier: { mp: 1.5 },\n          manaCost: 15,\n          cooldown: 5000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"support\" as const,\n          description: t(\"rpg.skills.heal.description\"),\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false,\n        },\n        {\n          id: \"critical\",\n          name: t(\"rpg.skills.critical.name\"),\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: \"passive\" as const,\n          category: \"passive\" as const,\n          description: t(\"rpg.skills.critical.description\"),\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false,\n        },\n        // 레벨 5 스킬\n        {\n          id: \"double_strike\",\n          name: \"이중 공격\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 25,\n          damageMultiplier: 0.4,\n          statMultiplier: { attack: 1.5 },\n          manaCost: 20,\n          cooldown: 4000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"combat\" as const,\n          description:\n            \"연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)\",\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false,\n        },\n        {\n          id: \"mana_shield\",\n          name: \"마나 방패\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.2,\n          statMultiplier: { mp: 1.0, defense: 0.5 },\n          manaCost: 25,\n          cooldown: 8000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"magic\" as const,\n          description: \"마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)\",\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false,\n        },\n        {\n          id: \"defense_mastery\",\n          name: \"방어 숙련\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: \"passive\" as const,\n          category: \"passive\" as const,\n          description: \"방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)\",\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false,\n        },\n        // 레벨 10 스킬\n        {\n          id: \"whirlwind\",\n          name: \"회오리 공격\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 40,\n          damageMultiplier: 0.6,\n          statMultiplier: { attack: 1.8 },\n          manaCost: 35,\n          cooldown: 6000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"combat\" as const,\n          description:\n            \"주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)\",\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false,\n        },\n        {\n          id: \"regeneration\",\n          name: \"재생\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 50,\n          damageMultiplier: 0.4,\n          statMultiplier: { hp: 0.1, mp: 2.0 },\n          manaCost: 40,\n          cooldown: 12000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"support\" as const,\n          description:\n            \"지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)\",\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false,\n        },\n        {\n          id: \"mp_efficiency\",\n          name: \"마나 효율\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: \"passive\" as const,\n          category: \"passive\" as const,\n          description: \"모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)\",\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false,\n        },\n        // 레벨 15 스킬\n        {\n          id: \"meteor\",\n          name: \"메테오\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 80,\n          damageMultiplier: 1.0,\n          statMultiplier: { mp: 3.0, attack: 1.0 },\n          manaCost: 60,\n          cooldown: 10000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"magic\" as const,\n          description:\n            \"강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)\",\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false,\n        },\n        {\n          id: \"time_stop\",\n          name: \"시간 정지\",\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: { mp: 1.0 },\n          manaCost: 80,\n          cooldown: 15000,\n          currentCooldown: 0,\n          type: \"active\" as const,\n          category: \"magic\" as const,\n          description:\n            \"모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)\",\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false,\n        },\n        {\n          id: \"exp_boost\",\n          name: t(\"rpg.skills.expAmplify.name\"),\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: \"passive\" as const,\n          category: \"passive\" as const,\n          description: t(\"rpg.skills.expAmplify.description\"),\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false,\n        },\n      ];\n\n      // 해금된 스킬만 반환\n      return allSkills.filter((skill) => skill.isUnlocked);\n    };\n\n    const initialSkills = getAllSkills(1);\n\n    // 던전 초기화\n    const initialDungeons: Dungeon[] = [\n      {\n        id: \"forest\",\n        name: texts.dungeon.forest.name,\n        level: 1,\n        description: texts.dungeon.forest.description,\n        floors: 10,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [10, 25],\n          expRange: [15, 30],\n          itemDropChance: 0.1,\n        },\n        requiredLevel: 1,\n        isUnlocked: true,\n      },\n      {\n        id: \"cave\",\n        name: texts.dungeon.cave.name,\n        level: 5,\n        description: texts.dungeon.cave.description,\n        floors: 15,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [25, 50],\n          expRange: [40, 75],\n          itemDropChance: 0.15,\n        },\n        requiredLevel: 5,\n        isUnlocked: false,\n      },\n      {\n        id: \"tower\",\n        name: texts.dungeon.tower.name,\n        level: 10,\n        description: texts.dungeon.tower.description,\n        floors: 20,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [50, 100],\n          expRange: [80, 150],\n          itemDropChance: 0.2,\n        },\n        requiredLevel: 10,\n        isUnlocked: false,\n      },\n      {\n        id: \"abyss\",\n        name: t(\"rpg.dungeon.abyss.name\"),\n        level: 20,\n        description: t(\"rpg.dungeon.abyss.description\"),\n        floors: 50,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [100, 200],\n          expRange: [200, 300],\n          itemDropChance: 0.3,\n        },\n        requiredLevel: 20,\n        isUnlocked: false,\n        isComingSoon: true, // 업데이트 예정 플래그\n      },\n    ];\n\n    // 상점 아이템 초기화 (기본 아이템들)\n    const getShopItems = () => {\n      const baseItems: Item[] = [\n        {\n          id: \"sword1\",\n          name: t(\"rpg.items.sword1\"),\n          type: \"weapon\",\n          rarity: \"common\",\n          level: 1,\n          stats: { attack: 15 },\n          price: 200,\n          enhancement: 0,\n        },\n        {\n          id: \"armor1\",\n          name: t(\"rpg.items.armor1\"),\n          type: \"armor\",\n          rarity: \"common\",\n          level: 1,\n          stats: { defense: 10, hp: 20 },\n          price: 150,\n          enhancement: 0,\n        },\n        {\n          id: \"helmet1\",\n          name: t(\"rpg.items.helmet1\"),\n          type: \"helmet\",\n          rarity: \"common\",\n          level: 1,\n          stats: { defense: 5, hp: 15 },\n          price: 100,\n          enhancement: 0,\n        },\n        // 기본 물약들\n        {\n          id: \"health_potion\",\n          name: t(\"rpg.items.health_potion\"),\n          type: \"consumable\",\n          rarity: \"common\",\n          level: 1,\n          stats: {},\n          price: 50,\n          enhancement: 0,\n          consumableEffect: {\n            healHp: 50,\n          },\n          quantity: 1,\n        },\n        {\n          id: \"mana_potion\",\n          name: t(\"rpg.items.mana_potion\"),\n          type: \"consumable\",\n          rarity: \"common\",\n          level: 1,\n          stats: {},\n          price: 40,\n          enhancement: 0,\n          consumableEffect: {\n            healMp: 30,\n          },\n          quantity: 1,\n        },\n      ];\n\n      // 고블린 동굴이 해금되면 고급 아이템 추가\n      const goblinCaveUnlocked = availableDungeons.find(\n        (d) => d.id === \"cave\"\n      )?.isUnlocked;\n      if (goblinCaveUnlocked) {\n        baseItems.push(\n          // 고급 장비\n          {\n            id: \"steel_sword\",\n            name: t(\"rpg.items.enhanced_steel_sword\"),\n            type: \"weapon\",\n            rarity: \"rare\",\n            level: 3,\n            stats: { attack: 25 },\n            price: 500,\n            enhancement: 0,\n          },\n          {\n            id: \"plate_armor\",\n            name: \"판금 갑옷\",\n            type: \"armor\",\n            rarity: \"rare\",\n            level: 3,\n            stats: { defense: 20, hp: 40 },\n            price: 400,\n            enhancement: 0,\n          },\n          {\n            id: \"steel_helmet\",\n            name: t(\"rpg.items.steel_helmet\"),\n            type: \"helmet\",\n            rarity: \"rare\",\n            level: 3,\n            stats: { defense: 12, hp: 25 },\n            price: 300,\n            enhancement: 0,\n          },\n          // 고급 물약들\n          {\n            id: \"greater_health_potion\",\n            name: t(\"rpg.items.greater_health_potion\"),\n            type: \"consumable\",\n            rarity: \"rare\",\n            level: 2,\n            stats: {},\n            price: 120,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 120,\n            },\n            quantity: 1,\n          },\n          {\n            id: \"greater_mana_potion\",\n            name: \"고급 마나 물약\",\n            type: \"consumable\",\n            rarity: \"rare\",\n            level: 2,\n            stats: {},\n            price: 100,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 80,\n            },\n            quantity: 1,\n          },\n          {\n            id: \"strength_potion\",\n            name: t(\"rpg.items.strength_potion\"),\n            type: \"consumable\",\n            rarity: \"rare\",\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: \"attack\",\n              buffAmount: 10,\n              buffDuration: 30000,\n            },\n            quantity: 1,\n          },\n          {\n            id: \"defense_potion\",\n            name: t(\"rpg.items.defense_potion\"),\n            type: \"consumable\",\n            rarity: \"rare\",\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: \"defense\",\n              buffAmount: 8,\n              buffDuration: 30000,\n            },\n            quantity: 1,\n          }\n        );\n      }\n\n      return baseItems;\n    };\n\n    const shopItems = getShopItems();\n\n    setCharacter((prev) => {\n      // 기존 스킬이 있으면 보존하고, 없으면 새로 생성\n      const existingSkills =\n        prev.skills && prev.skills.length > 0 ? prev.skills : initialSkills;\n\n      // 새로운 스킬이 있으면 추가하되, 기존 스킬의 진행도는 보존\n      const mergedSkills = initialSkills.map((newSkill) => {\n        const existingSkill = existingSkills.find((s) => s.id === newSkill.id);\n        if (existingSkill) {\n          // 기존 스킬이 있으면 레벨과 학습 상태 보존\n          return {\n            ...newSkill,\n            level: existingSkill.level,\n            isLearned: existingSkill.isLearned,\n            isUnlocked: prev.level >= (newSkill.requiredLevel || 1),\n          };\n        }\n        return newSkill;\n      });\n\n      return {\n        ...prev,\n        name: texts.character.name,\n        class: texts.character.class,\n        skills: mergedSkills,\n      };\n    });\n    setAvailableDungeons(initialDungeons);\n    setShop(shopItems);\n    // Store texts globally for other functions to use\n    (window as any).gameTexts = texts;\n\n    // 던전에 있지 않을 때만 일반 몬스터 생성\n    if (!inDungeon) {\n      spawnMonster();\n    }\n  };\n\n  // 던전 해금 상태에 따른 상점 업데이트\n  useEffect(() => {\n    const updateShop = () => {\n      const getShopItems = () => {\n        const baseItems: Item[] = [\n          {\n            id: \"sword1\",\n            name: t(\"rpg.items.steel_sword\"),\n            type: \"weapon\",\n            rarity: \"common\",\n            level: 1,\n            stats: { attack: 15 },\n            price: 200,\n            enhancement: 0,\n          },\n          {\n            id: \"armor1\",\n            name: t(\"rpg.items.leather_armor\"),\n            type: \"armor\",\n            rarity: \"common\",\n            level: 1,\n            stats: { defense: 10, hp: 20 },\n            price: 150,\n            enhancement: 0,\n          },\n          {\n            id: \"helmet1\",\n            name: t(\"rpg.items.iron_helmet\"),\n            type: \"helmet\",\n            rarity: \"common\",\n            level: 1,\n            stats: { defense: 5, hp: 15 },\n            price: 100,\n            enhancement: 0,\n          },\n          // 기본 물약들\n          {\n            id: \"health_potion\",\n            name: t(\"rpg.items.health_potion\"),\n            type: \"consumable\",\n            rarity: \"common\",\n            level: 1,\n            stats: {},\n            price: 50,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 50,\n            },\n            quantity: 1,\n          },\n          {\n            id: \"mana_potion\",\n            name: t(\"rpg.items.mana_potion\"),\n            type: \"consumable\",\n            rarity: \"common\",\n            level: 1,\n            stats: {},\n            price: 40,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 30,\n            },\n            quantity: 1,\n          },\n        ];\n\n        // 고블린 동굴이 해금되면 고급 아이템 추가\n        const goblinCaveUnlocked = availableDungeons.find(\n          (d) => d.id === \"cave\"\n        )?.isUnlocked;\n        if (goblinCaveUnlocked) {\n          // 중복 방지: 이미 있는 아이템은 추가하지 않음\n          const existingIds = baseItems.map((item) => item.id);\n          const newItems = [\n            {\n              id: \"steel_sword\",\n              name: t(\"rpg.items.enhanced_steel_sword\"),\n              type: \"weapon\" as const,\n              rarity: \"rare\" as const,\n              level: 3,\n              stats: { attack: 25 },\n              price: 500,\n              enhancement: 0,\n            },\n            {\n              id: \"plate_armor\",\n              name: t(\"rpg.items.plate_armor\"),\n              type: \"armor\" as const,\n              rarity: \"rare\" as const,\n              level: 3,\n              stats: { defense: 20, hp: 40 },\n              price: 400,\n              enhancement: 0,\n            },\n            {\n              id: \"steel_helmet\",\n              name: t(\"rpg.items.steel_helmet\"),\n              type: \"helmet\" as const,\n              rarity: \"rare\" as const,\n              level: 3,\n              stats: { defense: 12, hp: 25 },\n              price: 300,\n              enhancement: 0,\n            },\n            {\n              id: \"greater_health_potion\",\n              name: t(\"rpg.items.greater_health_potion\"),\n              type: \"consumable\" as const,\n              rarity: \"rare\" as const,\n              level: 2,\n              stats: {},\n              price: 120,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 120,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"greater_mana_potion\",\n              name: \"고급 마나 물약\",\n              type: \"consumable\" as const,\n              rarity: \"rare\" as const,\n              level: 2,\n              stats: {},\n              price: 100,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 80,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"strength_potion\",\n              name: t(\"rpg.items.strength_potion\"),\n              type: \"consumable\" as const,\n              rarity: \"rare\" as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: \"attack\" as const,\n                buffAmount: 10,\n                buffDuration: 30000,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"defense_potion\",\n              name: t(\"rpg.items.defense_potion\"),\n              type: \"consumable\" as const,\n              rarity: \"rare\" as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: \"defense\" as const,\n                buffAmount: 8,\n                buffDuration: 30000,\n              },\n              quantity: 1,\n            },\n          ].filter((item) => !existingIds.includes(item.id));\n\n          baseItems.push(...newItems);\n        }\n\n        // 마법사의 탑이 해금되면 최고급 아이템 추가\n        const wizardTowerUnlocked = availableDungeons.find(\n          (d) => d.id === \"tower\"\n        )?.isUnlocked;\n        if (wizardTowerUnlocked) {\n          const existingIds = baseItems.map((item) => item.id);\n          const wizardItems = [\n            {\n              id: \"enchanted_sword\",\n              name: \"마법 부여 검\",\n              type: \"weapon\" as const,\n              rarity: \"epic\" as const,\n              level: 5,\n              stats: { attack: 40, mp: 20 },\n              price: 1200,\n              enhancement: 0,\n            },\n            {\n              id: \"dragon_armor\",\n              name: \"드래곤 갑옷\",\n              type: \"armor\" as const,\n              rarity: \"epic\" as const,\n              level: 5,\n              stats: { defense: 35, hp: 80 },\n              price: 1000,\n              enhancement: 0,\n            },\n            {\n              id: \"mystic_helmet\",\n              name: \"신비의 투구\",\n              type: \"helmet\" as const,\n              rarity: \"epic\" as const,\n              level: 5,\n              stats: { defense: 20, hp: 40, mp: 30 },\n              price: 800,\n              enhancement: 0,\n            },\n            {\n              id: \"supreme_health_potion\",\n              name: \"최고급 체력 물약\",\n              type: \"consumable\" as const,\n              rarity: \"epic\" as const,\n              level: 3,\n              stats: {},\n              price: 300,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 250,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"supreme_mana_potion\",\n              name: \"최고급 마나 물약\",\n              type: \"consumable\" as const,\n              rarity: \"epic\" as const,\n              level: 3,\n              stats: {},\n              price: 250,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 200,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"berserker_potion\",\n              name: t(\"rpg.items.berserker_potion\"),\n              type: \"consumable\" as const,\n              rarity: \"epic\" as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: \"attack\" as const,\n                buffAmount: 25,\n                buffDuration: 60000,\n              },\n              quantity: 1,\n            },\n            {\n              id: \"guardian_potion\",\n              name: \"수호자의 물약\",\n              type: \"consumable\" as const,\n              rarity: \"epic\" as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: \"defense\" as const,\n                buffAmount: 20,\n                buffDuration: 60000,\n              },\n              quantity: 1,\n            },\n          ].filter((item) => !existingIds.includes(item.id));\n\n          baseItems.push(...wizardItems);\n        }\n\n        return baseItems;\n      };\n\n      setShop(getShopItems());\n    };\n\n    updateShop();\n  }, [availableDungeons]);\n\n  // 레벨업 시 스킬 업데이트\n  useEffect(() => {\n    const updateSkills = () => {\n      setCharacter((prev) => {\n        // 기존 스킬들의 해금 상태만 업데이트\n        const updatedSkills = prev.skills.map((skill) => ({\n          ...skill,\n          isUnlocked: prev.level >= (skill.requiredLevel || 1),\n        }));\n        return { ...prev, skills: updatedSkills };\n      });\n    };\n\n    updateSkills();\n  }, [character.level]);\n\n  // 스킬 사용 함수 (수정된 데미지 계산 포함)\n  const executeSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog(t(\"rpg.combat.skillLearnFirst\"));\n      return;\n    }\n\n    if (character.mp < skill.manaCost) {\n      addToCombatLog(t(\"rpg.combat.notEnoughMana\"));\n      return;\n    }\n\n    if (skill.currentCooldown > 0) {\n      addToCombatLog(t(\"rpg.combat.skillCooldown\"));\n      return;\n    }\n\n    const damage = calculateSkillDamage(skill, character);\n\n    // 스킬 사용 로직\n    if (skill.id === \"heal\" || skill.id === \"regeneration\") {\n      // 힐링 스킬\n      const healAmount = damage;\n      setCharacter((prev) => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost,\n      }));\n      addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);\n    } else if (currentMonster) {\n      // 공격 스킬\n      const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n      setCurrentMonster((prev) =>\n        prev ? { ...prev, hp: newMonsterHp } : null\n      );\n      setCharacter((prev) => ({ ...prev, mp: prev.mp - skill.manaCost }));\n      addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);\n\n      if (newMonsterHp === 0) {\n        setTimeout(defeatMonster, 500);\n      }\n    }\n\n    // 쿨다운 설정\n    setCharacter((prev) => ({\n      ...prev,\n      skills: prev.skills.map((s) =>\n        s.id === skill.id ? { ...s, currentCooldown: skill.cooldown } : s\n      ),\n    }));\n  };\n\n  // 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\n  const learnSkill = (skill: Skill) => {\n    if (skill.level > 0) {\n      addToCombatLog(t(\"rpg.combat.alreadyLearned\"));\n      return;\n    }\n\n    const cost = 100; // 스킬 배우기 비용\n    if (character.gold < cost) {\n      addToCombatLog(t(\"rpg.combat.notEnoughGold\"));\n      return;\n    }\n\n    setCharacter((prev) => ({\n      ...prev,\n      gold: prev.gold - cost,\n      skills: prev.skills.map((s) =>\n        s.id === skill.id ? { ...s, level: 1, isLearned: true } : s\n      ),\n    }));\n    addToCombatLog(`${skill.name}을(를) 배웠습니다!`);\n  };\n\n  // 스킬 렌더링 함수 (분류별)\n  // 스킬 아이콘 맵핑\n  const getSkillIcon = (skill: Skill) => {\n    const iconMap: { [key: string]: string } = {\n      // 전투 스킬\n      \"basic-attack\": \"⚔️\",\n      \"power-strike\": \"💥\",\n      \"fire-slash\": \"🔥\",\n      \"lightning-bolt\": \"⚡\",\n      \"ice-shard\": \"❄️\",\n      \"double-attack\": \"⚔️⚔️\",\n      // 지원 스킬\n      heal: \"💚\",\n      \"mana-recovery\": \"💙\",\n      shield: \"🛡️\",\n      haste: \"💨\",\n      blessing: \"✨\",\n      // 패시브 스킬\n      \"strength-boost\": \"💪\",\n      \"defense-boost\": \"🛡️\",\n      \"agility-boost\": \"🏃\",\n      \"mana-boost\": \"🔮\",\n      \"critical-chance\": \"💎\",\n      vampire: \"🩸\",\n    };\n    return iconMap[skill.id] || \"📜\";\n  };\n\n  // 선택된 스킬 상태\n  const [selectedSkill, setSelectedSkill] = useState<Skill | null>(null);\n\n  // 스킬 탭 내부의 서브 탭 상태\n  const [skillSubTab, setSkillSubTab] = React.useState<\n    \"combat\" | \"support\" | \"passive\"\n  >(\"combat\");\n\n  // 스킬 탭 컨텐츠 렌더링 (게임 스타일 UI)\n  const renderSkillsTab = () => (\n    <div style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{ display: \"flex\", gap: \"20px\" }}>\n        {/* 왼쪽 카테고리 사이드바 */}\n        <div style={{ width: \"200px\" }}>\n          <h3\n            style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"16px\" }}\n          >\n            📚 {t(\"rpg.ui.skillInfo\")}\n          </h3>\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"5px\" }}>\n            {[\n              {\n                id: \"combat\",\n                label: t(\"rpg.skills.category.all\"),\n                count: character.skills.filter((s) => s.isUnlocked).length,\n                color: \"#8b5cf6\",\n              },\n              {\n                id: \"combat\",\n                label: t(\"rpg.skills.category.combat\"),\n                count: character.skills.filter(\n                  (s) =>\n                    s.isUnlocked &&\n                    (s.category === \"combat\" || s.category === \"magic\")\n                ).length,\n                color: \"#dc2626\",\n              },\n              {\n                id: \"support\",\n                label: t(\"rpg.skills.category.support\"),\n                count: character.skills.filter(\n                  (s) => s.isUnlocked && s.category === \"support\"\n                ).length,\n                color: \"#10b981\",\n              },\n              {\n                id: \"passive\",\n                label: t(\"rpg.skills.category.passive\"),\n                count: character.skills.filter(\n                  (s) => s.isUnlocked && s.category === \"passive\"\n                ).length,\n                color: \"#f59e0b\",\n              },\n            ].map((tab, index) => (\n              <button\n                key={index}\n                onClick={() =>\n                  setSkillSubTab(index === 0 ? \"combat\" : (tab.id as any))\n                }\n                style={{\n                  padding: \"12px 15px\",\n                  background:\n                    (index === 0 && skillSubTab) || skillSubTab === tab.id\n                      ? `linear-gradient(135deg, ${tab.color} 0%, ${tab.color}CC 100%)`\n                      : \"rgba(255, 255, 255, 0.1)\",\n                  color:\n                    (index === 0 && skillSubTab) || skillSubTab === tab.id\n                      ? \"white\"\n                      : \"#9ca3af\",\n                  border: \"1px solid #4b5563\",\n                  borderRadius: \"8px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                  fontWeight: \"normal\",\n                  transition: \"all 0.2s ease\",\n                  textAlign: \"left\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <span>{tab.label}</span>\n                <span\n                  style={{\n                    background: \"rgba(0, 0, 0, 0.3)\",\n                    color: gameColors.primaryText,\n                    fontSize: \"11px\",\n                    padding: \"2px 6px\",\n                    borderRadius: \"10px\",\n                    minWidth: \"20px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {index === 0\n                    ? character.skills.filter((s) => s.isUnlocked).length\n                    : tab.count}\n                </span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* 중앙 스킬 그리드 */}\n        <div style={{ flex: 1 }}>\n          <h3\n            style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"16px\" }}\n          >\n            🎯{\" \"}\n            {skillSubTab === \"combat\"\n              ? t(\"rpg.ui.combatSkills\")\n              : skillSubTab === \"support\"\n              ? t(\"rpg.skills.supportSkills\")\n              : t(\"rpg.skills.category.passive\")}\n          </h3>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(8, 1fr)\",\n              gap: \"6px\",\n              background: \"rgba(0, 0, 0, 0.3)\",\n              padding: \"15px\",\n              borderRadius: \"10px\",\n              border: \"2px solid #4b5563\",\n              minHeight: \"400px\",\n            }}\n          >\n            {/* 스킬 슬롯 렌더링 */}\n            {Array.from({ length: 32 }, (_, index) => {\n              const filteredSkills = character.skills.filter((skill) => {\n                if (skillSubTab === \"combat\") {\n                  return (\n                    skill.isUnlocked &&\n                    (skill.category === \"combat\" || skill.category === \"magic\")\n                  );\n                }\n                return skill.isUnlocked && skill.category === skillSubTab;\n              });\n\n              const skill = filteredSkills[index];\n              const isEmpty = !skill;\n\n              return (\n                <div\n                  key={index}\n                  onClick={() => skill && setSelectedSkill(skill)}\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    background: isEmpty\n                      ? \"rgba(255, 255, 255, 0.05)\"\n                      : skill.isLearned\n                      ? \"rgba(16, 185, 129, 0.2)\"\n                      : \"rgba(107, 114, 128, 0.2)\",\n                    border: isEmpty\n                      ? \"1px solid #374151\"\n                      : skill.isLearned\n                      ? \"2px solid #10b981\"\n                      : \"2px solid #6b7280\",\n                    borderRadius: \"8px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    cursor: skill ? \"pointer\" : \"default\",\n                    position: \"relative\",\n                    transition: \"all 0.2s ease\",\n                  }}\n                  onMouseEnter={(e) => {\n                    if (skill) {\n                      e.currentTarget.style.transform = \"scale(1.1)\";\n                      e.currentTarget.style.boxShadow = skill.isLearned\n                        ? \"0 0 15px #10b98150\"\n                        : \"0 0 15px #6b728050\";\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (skill) {\n                      e.currentTarget.style.transform = \"scale(1)\";\n                      e.currentTarget.style.boxShadow = \"none\";\n                    }\n                  }}\n                >\n                  {skill && (\n                    <>\n                      <div\n                        style={{\n                          fontSize: \"20px\",\n                          filter: skill.isLearned ? \"none\" : \"grayscale(1)\",\n                          opacity: skill.isLearned ? 1 : 0.5,\n                        }}\n                      >\n                        {getSkillIcon(skill)}\n                      </div>\n                      {/* 레벨 표시 */}\n                      {skill.level > 0 && (\n                        <div\n                          style={{\n                            position: \"absolute\",\n                            bottom: \"2px\",\n                            right: \"2px\",\n                            background: \"#10b981\",\n                            color: gameColors.primaryText,\n                            fontSize: \"10px\",\n                            padding: \"1px 4px\",\n                            borderRadius: \"3px\",\n                            lineHeight: \"1\",\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          {skill.level}\n                        </div>\n                      )}\n                      {/* 배울 수 있음 표시 */}\n                      {skill.level === 0 && character.gold >= 100 && (\n                        <div\n                          style={{\n                            position: \"absolute\",\n                            top: \"2px\",\n                            right: \"2px\",\n                            background: \"#fbbf24\",\n                            width: \"8px\",\n                            height: \"8px\",\n                            borderRadius: \"50%\",\n                            animation: \"pulse 2s infinite\",\n                          }}\n                        />\n                      )}\n                    </>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* 오른쪽 스킬 상세 정보 */}\n        <div style={{ width: \"300px\" }}>\n          <h3\n            style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"16px\" }}\n          >\n            📋 {t(\"rpg.ui.skillInfoPanel\")}\n          </h3>\n          {selectedSkill ? (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.1)\",\n                border: selectedSkill.isLearned\n                  ? \"2px solid #10b981\"\n                  : \"2px solid #6b7280\",\n                borderRadius: \"10px\",\n                padding: \"20px\",\n              }}\n            >\n              <div style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                <div\n                  style={{\n                    fontSize: \"48px\",\n                    marginBottom: \"10px\",\n                    filter: selectedSkill.isLearned ? \"none\" : \"grayscale(1)\",\n                    opacity: selectedSkill.isLearned ? 1 : 0.7,\n                  }}\n                >\n                  {getSkillIcon(selectedSkill)}\n                </div>\n                <h4\n                  style={{\n                    color: selectedSkill.isLearned ? \"#10b981\" : \"#9ca3af\",\n                    margin: \"0 0 5px 0\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {selectedSkill.name}\n                </h4>\n                <p\n                  style={{\n                    color: gameColors.secondaryText,\n                    margin: \"0 0 15px 0\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  Lv.{selectedSkill.level}/{selectedSkill.maxLevel} •{\" \"}\n                  {selectedSkill.type === \"active\" ? t(\"rpg.skills.active\") : t(\"rpg.skills.passive\")}\n                </p>\n              </div>\n\n              {/* 스킬 효과 */}\n              <div style={{ marginBottom: \"15px\" }}>\n                <h5\n                  style={{\n                    color: gameColors.primaryText,\n                    margin: \"0 0 10px 0\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"rpg.skills.effect\")}\n                </h5>\n                <p\n                  style={{\n                    color: gameColors.primaryText,\n                    fontSize: \"12px\",\n                    lineHeight: \"1.4\",\n                    margin: 0,\n                  }}\n                >\n                  {selectedSkill.description}\n                </p>\n                {selectedSkill.level > 0 && selectedSkill.type === \"active\" && (\n                  <p\n                    style={{\n                      color: \"#fbbf24\",\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      marginTop: \"8px\",\n                    }}\n                  >\n                    데미지: {calculateSkillDamage(selectedSkill, character)}\n                  </p>\n                )}\n              </div>\n\n              {/* 스킬 정보 */}\n              {selectedSkill.type === \"active\" && (\n                <div style={{ marginBottom: \"15px\" }}>\n                  <h5\n                    style={{\n                      color: gameColors.primaryText,\n                      margin: \"0 0 10px 0\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    {t(\"rpg.skills.usageInfo\")}\n                  </h5>\n                  <div style={{ fontSize: \"12px\", color: \"#9ca3af\" }}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginBottom: \"5px\",\n                      }}\n                    >\n                      <span>{t(\"rpg.skills.manaCost\")}</span>\n                      <span style={{ color: \"#60a5fa\" }}>\n                        {selectedSkill.manaCost}\n                      </span>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginBottom: \"5px\",\n                      }}\n                    >\n                      <span>{t(\"rpg.skills.cooldown\")}</span>\n                      <span style={{ color: \"#f472b6\" }}>\n                        {selectedSkill.cooldown / 1000}초\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* 업그레이드 비용 */}\n              <div style={{ marginBottom: \"15px\" }}>\n                <h5\n                  style={{\n                    color: gameColors.primaryText,\n                    margin: \"0 0 10px 0\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {selectedSkill.level === 0 ? t(\"rpg.skills.learnCost\") : t(\"rpg.skills.upgradeCost\")}\n                </h5>\n                <p style={{ color: \"#f59e0b\", fontSize: \"12px\", margin: 0 }}>\n                  {selectedSkill.level === 0\n                    ? \"100\"\n                    : (selectedSkill.level * 100).toLocaleString()}\n{t(\"rpg.item.gold\")}\n                </p>\n              </div>\n\n              {/* 액션 버튼 */}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                {selectedSkill.level === 0 ? (\n                  <button\n                    onClick={() => {\n                      learnSkill(selectedSkill);\n                      setSelectedSkill(null);\n                    }}\n                    disabled={character.gold < 100}\n                    style={{\n                      background:\n                        character.gold >= 100\n                          ? \"linear-gradient(135deg, #10b981 0%, #059669 100%)\"\n                          : \"#6b7280\",\n                      color: gameColors.primaryText,\n                      border: \"none\",\n                      borderRadius: \"6px\",\n                      padding: \"12px\",\n                      fontSize: \"14px\",\n                      cursor: character.gold >= 100 ? \"pointer\" : \"not-allowed\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {t(\"rpg.skills.learn\")} (100G)\n                  </button>\n                ) : selectedSkill.level < selectedSkill.maxLevel ? (\n                  <button\n                    onClick={() => {\n                      const cost = selectedSkill.level * 100;\n                      if (character.gold >= cost) {\n                        setCharacter((prev) => ({\n                          ...prev,\n                          gold: prev.gold - cost,\n                          skills: prev.skills.map((s) =>\n                            s.id === selectedSkill.id\n                              ? { ...s, level: s.level + 1 }\n                              : s\n                          ),\n                        }));\n                        addToCombatLog(\n                          `${selectedSkill.name}을(를) 레벨업했다! (Lv.${\n                            selectedSkill.level + 1\n                          })`\n                        );\n                        setSelectedSkill((prev) =>\n                          prev ? { ...prev, level: prev.level + 1 } : null\n                        );\n                      }\n                    }}\n                    disabled={character.gold < selectedSkill.level * 100}\n                    style={{\n                      background:\n                        character.gold >= selectedSkill.level * 100\n                          ? \"linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)\"\n                          : \"#6b7280\",\n                      color: gameColors.primaryText,\n                      border: \"none\",\n                      borderRadius: \"6px\",\n                      padding: \"12px\",\n                      fontSize: \"14px\",\n                      cursor:\n                        character.gold >= selectedSkill.level * 100\n                          ? \"pointer\"\n                          : \"not-allowed\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    레벨업 ({(selectedSkill.level * 100).toLocaleString()}G)\n                  </button>\n                ) : (\n                  <div\n                    style={{\n                      background: gameColors.panelBg,\n                      color: gameColors.secondaryText,\n                      border: \"none\",\n                      borderRadius: \"6px\",\n                      padding: \"12px\",\n                      fontSize: \"14px\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    최대 레벨 달성\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.05)\",\n                borderRadius: \"10px\",\n                padding: \"40px\",\n                textAlign: \"center\",\n                color: gameColors.secondaryText,\n              }}\n            >\n              <p>{t(\"rpg.skills.info.description\")}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 몬스터 생성\n  const spawnMonster = () => {\n    // 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\n    if (currentMonster || inDungeon) {\n      return;\n    }\n\n    const gameTexts = (window as any).gameTexts || {\n      monsters: {\n        slime: t(\"rpg.monsters.slime\"),\n        goblin: t(\"rpg.monsters.goblin\"),\n        orc: t(\"rpg.monsters.orc\"),\n        troll: t(\"rpg.monsters.troll\"),\n        dragon: t(\"rpg.monsters.dragon\"),\n      },\n      combat: { appeared: t(\"rpg.combat.appeared\") },\n    };\n    const monsters = [\n      {\n        name: gameTexts.monsters.slime,\n        baseHp: 40,\n        baseAttack: 8,\n        baseDefense: 2,\n        exp: 15,\n        gold: 10,\n        minLevel: 1,\n        maxLevel: 3,\n      },\n      {\n        name: gameTexts.monsters.goblin,\n        baseHp: 60,\n        baseAttack: 12,\n        baseDefense: 4,\n        exp: 25,\n        gold: 18,\n        minLevel: 3,\n        maxLevel: 6,\n      },\n      {\n        name: gameTexts.monsters.orc,\n        baseHp: 100,\n        baseAttack: 18,\n        baseDefense: 8,\n        exp: 40,\n        gold: 30,\n        minLevel: 6,\n        maxLevel: 10,\n      },\n      {\n        name: gameTexts.monsters.troll,\n        baseHp: 150,\n        baseAttack: 25,\n        baseDefense: 12,\n        exp: 60,\n        gold: 45,\n        minLevel: 10,\n        maxLevel: 15,\n      },\n      {\n        name: gameTexts.monsters.dragon,\n        baseHp: 300,\n        baseAttack: 40,\n        baseDefense: 20,\n        exp: 120,\n        gold: 100,\n        minLevel: 15,\n        maxLevel: 999,\n      },\n    ];\n\n    // 캐릭터 레벨에 적합한 몬스터만 필터링\n    const availableMonsters = monsters.filter(\n      (monster) =>\n        character.level >= monster.minLevel &&\n        character.level <= monster.maxLevel\n    );\n\n    // 적합한 몬스터가 없으면 레벨 범위를 확장\n    const finalMonsters =\n      availableMonsters.length > 0\n        ? availableMonsters\n        : monsters.filter(\n            (monster) => Math.abs(character.level - monster.minLevel) <= 2\n          );\n\n    const randomMonster =\n      finalMonsters[Math.floor(Math.random() * finalMonsters.length)];\n    const levelMultiplier = 1 + (character.level - 1) * 0.3;\n\n    const monster: Monster = {\n      id: `monster_${Date.now()}`,\n      name: randomMonster.name,\n      level: Math.max(1, character.level + Math.floor(Math.random() * 3 - 1)),\n      hp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      attack: Math.floor(randomMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(randomMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(randomMonster.exp * levelMultiplier),\n      gold: Math.floor(randomMonster.gold * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: Math.random() < 0.1, // 10% 보스 확률\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 3;\n      monster.maxHp *= 3;\n      monster.attack *= 2;\n      monster.defense *= 2;\n      monster.exp *= 5;\n      monster.gold *= 3;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(\n      `${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`\n    );\n  };\n\n  // 드롭 아이템 생성\n  const generateDropItems = (): Item[] => {\n    const dropChance = Math.random();\n    if (dropChance < 0.1) {\n      // 10% 확률로 아이템 드롭\n      const rarities: Array<\n        \"common\" | \"rare\" | \"epic\" | \"legendary\" | \"mythic\"\n      > = [\"common\", \"rare\", \"epic\", \"legendary\", \"mythic\"];\n      const rarity = rarities[Math.floor(Math.random() * rarities.length)];\n      const itemTypes = [\n        \"weapon\",\n        \"armor\",\n        \"helmet\",\n        \"boots\",\n        \"ring\",\n        \"amulet\",\n      ] as const;\n      const itemType = itemTypes[Math.floor(Math.random() * itemTypes.length)];\n\n      return [\n        {\n          id: `drop_${Date.now()}`,\n          name: generateItemName(rarity, itemType),\n          type: itemType,\n          rarity,\n          level: character.level,\n          stats: generateItemStats(rarity),\n          price: calculateItemPrice(rarity, character.level),\n          enhancement: 0,\n        },\n      ];\n    }\n    return [];\n  };\n\n  const generateItemName = (rarity: string, itemType: string): string => {\n    const prefixes = {\n      common: [\"낡은\", \"일반적인\", \"기본\"],\n      rare: [\"날카로운\", \"튼튼한\", \"마법의\"],\n      epic: [\"전설적인\", \"고대의\", \"신성한\"],\n      legendary: [\"전설의\", \"영웅의\", \"불멸의\"],\n      mythic: [\"신화의\", \"창조의\", \"절대의\"],\n    };\n\n    const itemNames = {\n      weapon: [\"검\", \"도끼\", \"창\", \"활\", \"지팡이\"],\n      armor: [\"갑옷\", \"로브\", \"사슬갑옷\", \"가죽갑옷\"],\n      helmet: [\"투구\", \"모자\", \"관\", \"헬름\"],\n      boots: [\"신발\", \"부츠\", \"장화\", \"샌들\"],\n      ring: [\"반지\", \"링\", \"밴드\"],\n      amulet: [\"목걸이\", \"부적\", \"펜던트\"],\n    };\n\n    const prefix =\n      prefixes[rarity as keyof typeof prefixes][Math.floor(Math.random() * 3)];\n    const itemTypeNames = itemNames[itemType as keyof typeof itemNames] || [\n      \"아이템\",\n    ];\n    const item =\n      itemTypeNames[Math.floor(Math.random() * itemTypeNames.length)];\n\n    return `${prefix} ${item}`;\n  };\n\n  const generateItemStats = (rarity: string) => {\n    const multipliers = {\n      common: 1,\n      rare: 1.5,\n      epic: 2.5,\n      legendary: 4,\n      mythic: 7,\n    };\n\n    const base = multipliers[rarity as keyof typeof multipliers];\n    return {\n      attack: Math.floor(Math.random() * 20 * base),\n      defense: Math.floor(Math.random() * 15 * base),\n      hp: Math.floor(Math.random() * 50 * base),\n      mp: Math.floor(Math.random() * 30 * base),\n      speed: Math.floor(Math.random() * 10 * base),\n      critRate: Math.floor(Math.random() * 10 * base),\n      critDamage: Math.floor(Math.random() * 20 * base),\n    };\n  };\n\n  const calculateItemPrice = (rarity: string, level: number): number => {\n    const basePrice = {\n      common: 50,\n      rare: 150,\n      epic: 500,\n      legendary: 2000,\n      mythic: 10000,\n    };\n\n    return Math.floor(\n      basePrice[rarity as keyof typeof basePrice] * (1 + level * 0.2)\n    );\n  };\n\n  // 전투 시스템\n  const attack = () => {\n    if (!currentMonster) return;\n\n    const buffedAttack = character.attack + character.buffs.attack.amount;\n    const damage = calculateDamage(buffedAttack, currentMonster.defense);\n    const isCritical = Math.random() < 0.1 + character.stats.luck * 0.01;\n    const finalDamage = isCritical ? Math.floor(damage * 1.5) : damage;\n\n    const newMonsterHp = Math.max(0, currentMonster.hp - finalDamage);\n    setCurrentMonster((prev) => (prev ? { ...prev, hp: newMonsterHp } : null));\n\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: \"의 공격!\", damage: \"데미지!\", critical: \"치명타!\" },\n    };\n    addToCombatLog(\n      `${character.name}${gameTexts.combat.attack} ${finalDamage}${\n        isCritical ? ` (${gameTexts.combat.critical})` : \"\"\n      } ${gameTexts.combat.damage}`\n    );\n\n    onAction(\"combat_attack\", {\n      user_id: currentUser.user_id,\n      damage: finalDamage,\n      is_critical: isCritical,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      character_attack: character.attack,\n      monster_hp_remaining: newMonsterHp,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null,\n    });\n\n    if (newMonsterHp <= 0) {\n      defeatMonster();\n    } else {\n      // 몬스터 반격\n      setTimeout(() => monsterAttack(), 1000);\n    }\n  };\n\n  const monsterAttack = () => {\n    if (!currentMonster || currentMonster.hp <= 0) return;\n\n    const buffedDefense = character.defense + character.buffs.defense.amount;\n    const damage = calculateDamage(currentMonster.attack, buffedDefense);\n    const newHp = Math.max(0, character.hp - damage);\n\n    setCharacter((prev) => ({ ...prev, hp: newHp }));\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: \"의 공격!\", damage: \"데미지!\" },\n    };\n    addToCombatLog(\n      `${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`\n    );\n\n    if (newHp <= 0) {\n      const gameTexts = (window as any).gameTexts || {\n        combat: { defeat: \"전투에서 패배했습니다...\" },\n      };\n      addToCombatLog(gameTexts.combat.defeat);\n      setIsAutoFighting(false);\n\n      // 전투 실패 이벤트 로깅\n      onAction(\"combat_defeat\", {\n        monster_name: currentMonster.name,\n        monster_level: currentMonster.level,\n        character_level: character.level,\n        dungeon_id: currentDungeon?.id || \"field\",\n        dungeon_name: currentDungeon?.name || \"field\",\n        damage_taken: currentMonster.attack,\n        character_defense: character.defense,\n      });\n\n      // 던전에서 나가고 체력/마나 완전 회복\n      setTimeout(() => {\n        setCharacter((prev) => ({\n          ...prev,\n          hp: prev.maxHp,\n          mp: prev.maxMp,\n        }));\n\n        if (inDungeon && currentDungeon) {\n          // 던전에서 나가기 (죽음으로 인한 자동 퇴장)\n          onAction(\"dungeon_exited\", {\n            dungeon_id: currentDungeon.id,\n            dungeon_name: currentDungeon.name,\n            current_floor: currentDungeon.currentFloor,\n            total_floors: currentDungeon.floors,\n            character_level: character.level,\n            exit_reason: \"death\",\n            time_spent: new Date().getTime(),\n          });\n          setInDungeon(false);\n          setCurrentDungeon(null);\n          setCurrentTab(\"lobby\");\n          setGameMode(\"lobby\");\n          addToCombatLog(\n            \"던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!\"\n          );\n        } else {\n          // 일반 필드에서는 새 몬스터 스폰\n          addToCombatLog(\"체력과 마나가 완전히 회복되었습니다!\");\n          spawnMonster();\n        }\n      }, 2000);\n    }\n  };\n\n  const calculateDamage = (attack: number, defense: number): number => {\n    const baseDamage = Math.max(1, attack - Math.floor(defense * 0.5));\n    return Math.floor(baseDamage * (0.8 + Math.random() * 0.4));\n  };\n\n  const defeatMonster = () => {\n    if (!currentMonster) return;\n\n    const expGained = currentMonster.exp;\n    const goldGained = currentMonster.gold;\n\n    setCharacter((prev) => {\n      let newExp = prev.exp + expGained;\n      const newGold = prev.gold + goldGained;\n      let newLevel = prev.level;\n      let newMaxExp = prev.maxExp;\n      let newHp = prev.hp;\n      let newMp = prev.mp;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let availablePoints = prev.stats.availablePoints;\n\n      // 레벨업 체크\n      while (newExp >= newMaxExp) {\n        newLevel += 1;\n        newExp -= newMaxExp;\n        newMaxExp = Math.floor(newMaxExp * 1.5);\n        newMaxHp += 20;\n        newMaxMp += 10;\n        newHp = newMaxHp; // 레벨업 시 체력 완전 회복\n        newMp = newMaxMp; // 레벨업 시 마나 완전 회복\n        availablePoints += 5;\n\n        addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);\n\n        onAction(\"level_up\", {\n          user_id: currentUser.user_id,\n          new_level: newLevel,\n          character_class: prev.class,\n          stat_points_gained: 5,\n        });\n\n        // 던전 해금 체크\n        setAvailableDungeons((prevDungeons) =>\n          prevDungeons.map((dungeon) => ({\n            ...dungeon,\n            isUnlocked: dungeon.isUnlocked || newLevel >= dungeon.requiredLevel,\n          }))\n        );\n      }\n\n      return {\n        ...prev,\n        exp: newExp,\n        gold: newGold,\n        level: newLevel,\n        maxExp: newMaxExp,\n        hp: newHp,\n        mp: newMp,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        stats: { ...prev.stats, availablePoints },\n      };\n    });\n\n    // 아이템 드롭 처리\n    if (currentMonster.dropItems.length > 0) {\n      setInventory((prev) => [...prev, ...currentMonster.dropItems]);\n      addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);\n    }\n\n    addToCombatLog(\n      `${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`\n    );\n\n    // 추적 카운터 업데이트\n    setMonstersDefeated((prev) => prev + 1);\n    setTotalGoldEarned((prev) => prev + goldGained);\n\n    onAction(\"monster_defeated\", {\n      user_id: currentUser.user_id,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      exp_gained: expGained,\n      gold_gained: goldGained,\n      items_dropped: currentMonster.dropItems.length,\n      character_attack: character.attack,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null,\n    });\n\n    // 현재 몬스터 제거\n    setCurrentMonster(null);\n\n    // 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\n    if (inDungeon && currentDungeon) {\n      // 현재 층을 클리어한 것으로 마킹\n      const updatedDungeon = {\n        ...currentDungeon,\n        clearedFloors: new Set([\n          ...Array.from(currentDungeon.clearedFloors),\n          currentDungeon.currentFloor,\n        ]),\n      };\n      setCurrentDungeon(updatedDungeon);\n\n      // 던전 리스트에서도 업데이트\n      setAvailableDungeons((prev) =>\n        prev.map((d) => (d.id === updatedDungeon.id ? updatedDungeon : d))\n      );\n\n      // 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\n      addToCombatLog(\n        t(\"rpg.messages.monsterDefeatedFloorCleared\").replace(\"{floor}\", currentDungeon.currentFloor.toString())\n      );\n      setTimeout(() => {\n        spawnDungeonMonster(updatedDungeon, true);\n      }, 2000);\n    } else {\n      // 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\n      if (!inDungeon) {\n        setTimeout(() => {\n          spawnMonster();\n        }, 2000);\n      }\n    }\n  };\n\n  // 다음 층으로 진행\n  const proceedToNextFloor = () => {\n    if (!currentDungeon) return;\n\n    const updatedDungeon = {\n      ...currentDungeon,\n      currentFloor: currentDungeon.currentFloor + 1,\n    };\n    setCurrentDungeon(updatedDungeon);\n    setShowDungeonChoice(false);\n    setTimeout(() => {\n      spawnDungeonMonster(updatedDungeon, true); // 강제 스폰\n      addToCombatLog(t(\"rpg.messages.proceedToFloor\").replace(\"{floor}\", updatedDungeon.currentFloor.toString()));\n    }, 500);\n  };\n\n  // 던전 나가기\n  const exitDungeonAfterVictory = () => {\n    if (!currentDungeon) return;\n\n    // 던전 나가기 이벤트 로깅\n    onAction(\"dungeon_exited\", {\n      dungeon_id: currentDungeon.id,\n      dungeon_name: currentDungeon.name,\n      current_floor: currentDungeon.currentFloor,\n      total_floors: currentDungeon.floors,\n      character_level: character.level,\n      exit_reason: \"victory_choice\",\n      time_spent: new Date().getTime(),\n    });\n\n    // 던전 리셋 (현재 층을 1층으로 되돌림)\n    const resetDungeon = { ...currentDungeon, currentFloor: 1 };\n    setAvailableDungeons((prev) =>\n      prev.map((d) => (d.id === resetDungeon.id ? resetDungeon : d))\n    );\n\n    setInDungeon(false);\n    setCurrentDungeon(null);\n    setCurrentTab(\"lobby\");\n    setGameMode(\"lobby\");\n    setShowDungeonChoice(false);\n\n    // 체력과 마나 완전 회복\n    setCharacter((prev) => ({ ...prev, hp: prev.maxHp, mp: prev.maxMp }));\n    addToCombatLog(\"던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!\");\n\n    // 새로운 일반 몬스터 생성\n    setTimeout(() => {\n      spawnMonster();\n    }, 1000);\n  };\n\n  // 자동 전투\n  useEffect(() => {\n    if (\n      isAutoFighting &&\n      currentMonster &&\n      currentMonster.hp > 0 &&\n      character.hp > 0\n    ) {\n      const autoAttackTimer = setTimeout(() => {\n        attack();\n      }, 2000);\n\n      return () => clearTimeout(autoAttackTimer);\n    }\n  }, [isAutoFighting, currentMonster, character.hp]);\n\n  // 스킬 쿨다운 및 MP 회복\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCharacter((prev) => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + 1),\n        skills: prev.skills.map((skill) => ({\n          ...skill,\n          currentCooldown: Math.max(0, skill.currentCooldown - 100),\n        })),\n        buffs: {\n          attack: {\n            amount:\n              prev.buffs.attack.duration > 0 ? prev.buffs.attack.amount : 0,\n            duration: Math.max(0, prev.buffs.attack.duration - 100),\n          },\n          defense: {\n            amount:\n              prev.buffs.defense.duration > 0 ? prev.buffs.defense.amount : 0,\n            duration: Math.max(0, prev.buffs.defense.duration - 100),\n          },\n          speed: {\n            amount: prev.buffs.speed.duration > 0 ? prev.buffs.speed.amount : 0,\n            duration: Math.max(0, prev.buffs.speed.duration - 100),\n          },\n        },\n      }));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToCombatLog = (message: string) => {\n    setCombatLog((prev) => {\n      const newLog = [...prev, message];\n      if (newLog.length > 50) newLog.shift();\n      return newLog;\n    });\n\n    // Auto-scroll to bottom immediately and with backup timing\n    if (logRef.current) {\n      logRef.current.scrollTop = logRef.current.scrollHeight;\n    }\n\n    // Additional scroll with slight delay to ensure content is rendered\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 10);\n\n    // Final backup scroll\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  // 스탯 분배\n  const allocateStatPoint = (\n    stat: keyof Omit<CharacterStats, \"availablePoints\">\n  ) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter((prev) => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [stat]: prev.stats[stat] + 1,\n        availablePoints: prev.stats.availablePoints - 1,\n      },\n      // 스탯에 따른 능력치 업데이트\n      attack: stat === \"strength\" ? prev.attack + 2 : prev.attack,\n      defense: stat === \"vitality\" ? prev.defense + 1 : prev.defense,\n      maxHp: stat === \"vitality\" ? prev.maxHp + 10 : prev.maxHp,\n      maxMp: stat === \"intelligence\" ? prev.maxMp + 5 : prev.maxMp,\n      speed: stat === \"agility\" ? prev.speed + 1 : prev.speed,\n    }));\n  };\n\n  // 아이템 장착\n  const equipItem = (item: Item) => {\n    // 소비 아이템은 장착할 수 없음\n    if (item.type === \"consumable\") {\n      return;\n    }\n\n    // 기존에 장착된 아이템이 있는지 확인\n    const slot = item.type as keyof Equipment;\n    const currentEquippedItem = character.equipment[slot];\n\n    setCharacter((prev) => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = item;\n\n      // 기존 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (currentEquippedItem) {\n        if (currentEquippedItem.stats.attack)\n          newAttack -= currentEquippedItem.stats.attack;\n        if (currentEquippedItem.stats.defense)\n          newDefense -= currentEquippedItem.stats.defense;\n        if (currentEquippedItem.stats.hp)\n          newMaxHp -= currentEquippedItem.stats.hp;\n        if (currentEquippedItem.stats.mp)\n          newMaxMp -= currentEquippedItem.stats.mp;\n        if (currentEquippedItem.stats.speed)\n          newSpeed -= currentEquippedItem.stats.speed;\n      }\n\n      // 새 아이템의 스탯 적용\n      if (item.stats.attack) newAttack += item.stats.attack;\n      if (item.stats.defense) newDefense += item.stats.defense;\n      if (item.stats.hp) newMaxHp += item.stats.hp;\n      if (item.stats.mp) newMaxMp += item.stats.mp;\n      if (item.stats.speed) newSpeed += item.stats.speed;\n\n      // 스탯이 최소값 이하로 내려가지 않도록 보정\n      newAttack = Math.max(1, newAttack);\n      newDefense = Math.max(0, newDefense);\n      newMaxHp = Math.max(100, newMaxHp);\n      newMaxMp = Math.max(50, newMaxMp);\n      newSpeed = Math.max(1, newSpeed);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: newAttack,\n        defense: newDefense,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        speed: newSpeed,\n        hp: Math.min(prev.hp, newMaxHp), // 최대 체력이 줄어들 경우 현재 체력도 조정\n        mp: Math.min(prev.mp, newMaxMp), // 최대 마나가 줄어들 경우 현재 마나도 조정\n      };\n    });\n\n    // 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\n    if (currentEquippedItem) {\n      setInventory((prev) => [...prev, currentEquippedItem]);\n      addToCombatLog(\n        `기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`\n      );\n    } else {\n      addToCombatLog(`${item.name}을 장착했습니다!`);\n    }\n\n    // 인벤토리에서 새 아이템 제거\n    setInventory((prev) => prev.filter((invItem) => invItem.id !== item.id));\n  };\n\n  // 장비 해제\n  const unequipItem = (slot: keyof Equipment) => {\n    const equippedItem = character.equipment[slot];\n    if (!equippedItem) return;\n\n    setCharacter((prev) => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = undefined;\n\n      // 장착 해제한 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (equippedItem.stats.attack) newAttack -= equippedItem.stats.attack;\n      if (equippedItem.stats.defense) newDefense -= equippedItem.stats.defense;\n      if (equippedItem.stats.hp) newMaxHp -= equippedItem.stats.hp;\n      if (equippedItem.stats.mp) newMaxMp -= equippedItem.stats.mp;\n      if (equippedItem.stats.speed) newSpeed -= equippedItem.stats.speed;\n\n      // HP가 maxHp를 초과하지 않도록 조정\n      const adjustedHp = Math.min(prev.hp, newMaxHp);\n      const adjustedMp = Math.min(prev.mp, newMaxMp);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: Math.max(1, newAttack), // 최소 공격력 1\n        defense: Math.max(0, newDefense),\n        maxHp: Math.max(100, newMaxHp), // 최소 체력 100\n        maxMp: Math.max(50, newMaxMp), // 최소 마나 50\n        speed: Math.max(1, newSpeed), // 최소 속도 1\n        hp: adjustedHp,\n        mp: adjustedMp,\n      };\n    });\n\n    // 인벤토리에 아이템 추가\n    setInventory((prev) => [...prev, equippedItem]);\n    addToCombatLog(`${equippedItem.name}을 해제했습니다!`);\n  };\n\n  // 아이템 판매\n  const sellItem = (item: Item) => {\n    const sellPrice = Math.floor(item.price * 0.7);\n    setCharacter((prev) => ({ ...prev, gold: prev.gold + sellPrice }));\n    setInventory((prev) => prev.filter((invItem) => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);\n  };\n\n  // 아이템 구매\n  const buyItem = (item: Item) => {\n    if (character.gold < item.price) return;\n\n    setCharacter((prev) => ({ ...prev, gold: prev.gold - item.price }));\n    setInventory((prev) => [\n      ...prev,\n      { ...item, id: `${item.id}_${Date.now()}` },\n    ]);\n    addToCombatLog(`${item.name}${t(\"rpg.combat.itemPurchased\")}`);\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: \"#9ca3af\",\n      rare: \"#3b82f6\",\n      epic: \"#8b5cf6\",\n      legendary: \"#f59e0b\",\n      mythic: \"#ef4444\",\n    };\n    return colors[rarity as keyof typeof colors] || \"#9ca3af\";\n  };\n\n  // 던전 입장 함수\n  const enterDungeon = (dungeon: Dungeon) => {\n    if (dungeon.isComingSoon) {\n      addToCombatLog(t(\"rpg.combat.comingSoonDungeon\"));\n      return;\n    }\n    if (character.level < dungeon.requiredLevel) {\n      addToCombatLog(\n        `레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`\n      );\n      return;\n    }\n    setCurrentDungeon(dungeon);\n    setInDungeon(true);\n    setGameMode(\"dungeon\");\n    setCurrentTab(\"dungeon\");\n    spawnDungeonMonster(dungeon);\n\n    // 이벤트 로깅\n    onAction(\"dungeon_entered\", {\n      dungeon_id: dungeon.id,\n      dungeon_name: dungeon.name,\n      character_level: character.level,\n      floor: dungeon.currentFloor,\n      character_attack: character.attack,\n      character_defense: character.defense,\n      character_hp: character.hp,\n      character_mp: character.mp,\n      entry_time: new Date().getTime(),\n    });\n  };\n\n  // 던전 몬스터 스폰\n  const spawnDungeonMonster = (dungeon: Dungeon, forceSpawn = false) => {\n    // 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\n    if (currentMonster && !forceSpawn) return;\n\n    // 강제 생성인 경우 기존 몬스터를 먼저 제거\n    if (forceSpawn && currentMonster) {\n      setCurrentMonster(null);\n    }\n    // 던전별 고유 몬스터 타입 정의\n    const getDungeonMonsters = (dungeonId: string) => {\n      switch (dungeonId) {\n        case \"forest\": // 어둠의 숲\n          return [\n            { name: t(\"rpg.monsters.wolf\"), baseHp: 40, baseAttack: 10, baseDefense: 3 },\n            { name: t(\"rpg.monsters.bear\"), baseHp: 80, baseAttack: 16, baseDefense: 6 },\n            { name: t(\"rpg.monsters.giantSpider\"), baseHp: 120, baseAttack: 22, baseDefense: 10 },\n            {\n              name: \"숲의 수호자\",\n              baseHp: 200,\n              baseAttack: 35,\n              baseDefense: 18,\n            },\n            { name: \"고대 엔트\", baseHp: 350, baseAttack: 45, baseDefense: 25 },\n          ];\n        case \"cave\": // 고블린 동굴\n          return [\n            { name: t(\"rpg.monsters.goblinWarrior\"), baseHp: 60, baseAttack: 14, baseDefense: 5 },\n            { name: t(\"rpg.monsters.goblinArcher\"), baseHp: 45, baseAttack: 18, baseDefense: 3 },\n            {\n              name: t(\"rpg.monsters.goblinMage\"),\n              baseHp: 50,\n              baseAttack: 20,\n              baseDefense: 4,\n            },\n            {\n              name: t(\"rpg.monsters.goblinChief\"),\n              baseHp: 180,\n              baseAttack: 30,\n              baseDefense: 15,\n            },\n            { name: t(\"rpg.monsters.goblinKing\"), baseHp: 400, baseAttack: 50, baseDefense: 28 },\n          ];\n        case \"tower\": // 마법사의 탑\n          return [\n            { name: t(\"rpg.monsters.magicGolem\"), baseHp: 100, baseAttack: 20, baseDefense: 12 },\n            {\n              name: t(\"rpg.monsters.skeletonMage\"),\n              baseHp: 70,\n              baseAttack: 25,\n              baseDefense: 8,\n            },\n            {\n              name: t(\"rpg.monsters.flameElemental\"),\n              baseHp: 110,\n              baseAttack: 28,\n              baseDefense: 10,\n            },\n            { name: t(\"rpg.monsters.lich\"), baseHp: 250, baseAttack: 40, baseDefense: 20 },\n            {\n              name: t(\"rpg.monsters.ancientMage\"),\n              baseHp: 500,\n              baseAttack: 60,\n              baseDefense: 35,\n            },\n          ];\n        default:\n          return [\n            { name: t(\"rpg.monsters.slime\"), baseHp: 30, baseAttack: 8, baseDefense: 2 },\n            { name: t(\"rpg.monsters.goblin\"), baseHp: 50, baseAttack: 12, baseDefense: 4 },\n            { name: t(\"rpg.monsters.orc\"), baseHp: 100, baseAttack: 18, baseDefense: 8 },\n            { name: t(\"rpg.monsters.troll\"), baseHp: 150, baseAttack: 25, baseDefense: 12 },\n            { name: t(\"rpg.monsters.dragon\"), baseHp: 300, baseAttack: 40, baseDefense: 20 },\n          ];\n      }\n    };\n\n    const baseMonsters = getDungeonMonsters(dungeon.id);\n\n    // 층수에 따른 점진적 몬스터 선택 로직\n    const floorBasedMonsterIndex = () => {\n      const currentFloor = dungeon.currentFloor;\n      if (currentFloor <= 3) return 0; // 첫 번째 몬스터 (1~3층)\n      if (currentFloor <= 7) return 1; // 두 번째 몬스터 (4~7층)\n      if (currentFloor <= 12) return 2; // 세 번째 몬스터 (8~12층)\n      if (currentFloor <= 18) return 3; // 네 번째 몬스터 (13~18층)\n      return 4; // 다섯 번째 몬스터 (19층 이상)\n    };\n\n    // 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\n    const baseIndex = floorBasedMonsterIndex();\n    const randomVariation = Math.random() < 0.3 && baseIndex > 0 ? -1 : 0; // 30% 확률로 한 단계 낮은 몬스터\n    const selectedIndex = Math.max(0, baseIndex + randomVariation);\n\n    const selectedMonster = baseMonsters[selectedIndex];\n    const levelMultiplier =\n      1 + (dungeon.level + dungeon.currentFloor - 1) * 0.2;\n\n    const monster: Monster = {\n      id: `dungeon_${dungeon.id}_${Date.now()}`,\n      name: selectedMonster.name,\n      level: dungeon.level + dungeon.currentFloor,\n      hp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      attack: Math.floor(selectedMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(selectedMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(\n        (20 + dungeon.level * 8 + dungeon.currentFloor * 3) * levelMultiplier\n      ),\n      gold: Math.floor((10 + dungeon.level * 3) * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: dungeon.currentFloor % 5 === 0,\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 2;\n      monster.maxHp *= 2;\n      monster.attack *= 1.5;\n      monster.exp *= 3;\n      monster.gold *= 2;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);\n  };\n\n  // 물약 사용 함수\n  const consumeItem = (item: Item) => {\n    if (item.type !== \"consumable\" || !item.consumableEffect) return;\n\n    const effect = item.consumableEffect;\n\n    // 체력 회복\n    if (effect.healHp) {\n      setCharacter((prev) => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + effect.healHp!),\n      }));\n      addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);\n    }\n\n    // 마나 회복\n    if (effect.healMp) {\n      setCharacter((prev) => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + effect.healMp!),\n      }));\n      addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);\n    }\n\n    // 버프 효과\n    if (effect.buffType && effect.buffAmount && effect.buffDuration) {\n      setCharacter((prev) => ({\n        ...prev,\n        buffs: {\n          ...prev.buffs,\n          [effect.buffType!]: {\n            amount: effect.buffAmount!,\n            duration: effect.buffDuration!,\n          },\n        },\n      }));\n      addToCombatLog(\n        `${item.name}을 사용하여 ${\n          effect.buffType === \"attack\"\n            ? \"공격력\"\n            : effect.buffType === \"defense\"\n            ? \"방어력\"\n            : t(\"rpg.speed\")\n        } ${effect.buffAmount} 증가! (${effect.buffDuration / 1000}초)`\n      );\n    }\n\n    // 인벤토리에서 물약 제거 또는 수량 감소\n    setInventory((prev) => {\n      const itemIndex = prev.findIndex((invItem) => invItem.id === item.id);\n      if (itemIndex !== -1) {\n        const newInventory = [...prev];\n        const currentItem = newInventory[itemIndex];\n        if (currentItem.quantity && currentItem.quantity > 1) {\n          newInventory[itemIndex] = {\n            ...currentItem,\n            quantity: currentItem.quantity - 1,\n          };\n        } else {\n          newInventory.splice(itemIndex, 1);\n        }\n        return newInventory;\n      }\n      return prev;\n    });\n\n    // 이벤트 로깅\n    onAction(\"consumable_used\", {\n      item_name: item.name,\n      item_type: item.type,\n      character_level: character.level,\n      heal_hp: effect.healHp || 0,\n      heal_mp: effect.healMp || 0,\n      buff_type: effect.buffType || \"none\",\n      buff_amount: effect.buffAmount || 0,\n      character_hp_before: character.hp,\n      character_mp_before: character.mp,\n      dungeon_name: currentDungeon?.name || null,\n    });\n  };\n\n  // 스킬 사용 함수\n  const castSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog(t(\"rpg.combat.skillLearnFirst\"));\n      return;\n    }\n    if (skill.currentCooldown > 0 || character.mp < skill.manaCost) return;\n\n    // 스킬 사용 로직\n    if (skill.id === \"heal\") {\n      const healAmount = 30 + skill.level * 5;\n      setCharacter((prev) => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost,\n      }));\n      addToCombatLog(`${healAmount}만큼 회복했다!`);\n    } else {\n      // 공격 스킬\n      if (currentMonster) {\n        const damage = calculateSkillDamage(skill, character);\n        const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n        setCurrentMonster((prev) =>\n          prev ? { ...prev, hp: newMonsterHp } : null\n        );\n        setCharacter((prev) => ({ ...prev, mp: prev.mp - skill.manaCost }));\n        addToCombatLog(`${skill.name}로 ${damage} 데미지!`);\n\n        // 몬스터가 죽지 않았으면 반격\n        if (newMonsterHp > 0) {\n          setTimeout(() => {\n            monsterAttack();\n          }, 1000);\n        } else {\n          // 몬스터가 죽었으면 처치 처리\n          setTimeout(() => {\n            defeatMonster();\n          }, 1500);\n        }\n      }\n    }\n\n    // 쿨다운 적용\n    setCharacter((prev) => ({\n      ...prev,\n      skills: prev.skills.map((s) =>\n        s.id === skill.id ? { ...s, currentCooldown: s.cooldown } : s\n      ),\n    }));\n\n    // 이벤트 로깅\n    onAction(\"skill_used\", {\n      skill_name: skill.name,\n      skill_level: skill.level,\n      mana_cost: skill.manaCost,\n      character_level: character.level,\n      character_mp_before: character.mp,\n      character_mp_after: character.mp - skill.manaCost,\n      dungeon_name: currentDungeon?.name || null,\n    });\n  };\n\n  // 스탯 포인트 할당\n  const allocateStat = (statName: keyof CharacterStats) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter((prev) => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [statName]: prev.stats[statName] + 1,\n        availablePoints: prev.stats.availablePoints - 1,\n      },\n    }));\n\n    // 스탯에 따른 능력치 업데이트\n    let hpBonus = 0,\n      mpBonus = 0,\n      attackBonus = 0,\n      defenseBonus = 0;\n    if (statName === \"vitality\") hpBonus = 5;\n    if (statName === \"intelligence\") mpBonus = 3;\n    if (statName === \"strength\") attackBonus = 2;\n    if (statName === \"agility\") {\n      attackBonus = 1;\n      defenseBonus = 1;\n    }\n\n    setCharacter((prev) => ({\n      ...prev,\n      maxHp: prev.maxHp + hpBonus,\n      hp: prev.hp + hpBonus,\n      maxMp: prev.maxMp + mpBonus,\n      mp: prev.mp + mpBonus,\n      attack: prev.attack + attackBonus,\n      defense: prev.defense + defenseBonus,\n    }));\n\n    // 이벤트 로깅\n    onAction(\"stat_allocated\", {\n      stat_name: statName,\n      stat_value: character.stats[statName] + 1,\n      character_level: character.level,\n      available_points: character.stats.availablePoints - 1,\n    });\n  };\n\n  // 공통 캐릭터 정보 헤더 컴포넌트\n  const renderCharacterHeader = () => {\n    const expPercentage = (character.exp / character.maxExp) * 100;\n\n    return (\n      <div\n        style={{\n          background: \"linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)\",\n          borderRadius: \"15px\",\n          padding: \"15px 20px\",\n          marginBottom: \"20px\",\n          color: gameColors.primaryText,\n        }}\n      >\n        {/* 기본 스탯 정보 */}\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n            gap: \"15px\",\n            marginBottom: \"15px\",\n          }}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"#ffffff\" }}\n            >\n              Lv.{character.level}\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.level\")}</div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"#fbbf24\" }}\n            >\n              {character.gold}G\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.gold\")}</div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#f87171\" }}\n            >\n              {character.attack}\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.attack\")}</div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#60a5fa\" }}\n            >\n              {character.defense}\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.defense\")}</div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#34d399\" }}\n            >\n              {character.hp}/{character.maxHp}\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.health\")}</div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#a78bfa\" }}\n            >\n              {character.mp}/{character.maxMp}\n            </div>\n            <div style={{ color: \"#e0e7ff\", fontSize: \"12px\" }}>{t(\"rpg.ui.mana\")}</div>\n          </div>\n        </div>\n\n        {/* 경험치 바 */}\n        <div style={{ marginTop: \"15px\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"5px\",\n            }}\n          >\n            <span style={{ fontSize: \"14px\", color: \"#e0e7ff\" }}>{t(\"rpg.ui.exp\")}</span>\n            <span\n              style={{ fontSize: \"14px\", color: \"#ffffff\", fontWeight: \"bold\" }}\n            >\n              {character.exp} / {character.maxExp} ({Math.floor(expPercentage)}\n              %)\n            </span>\n          </div>\n          <div\n            style={{\n              width: \"100%\",\n              height: \"8px\",\n              backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n              borderRadius: \"10px\",\n              overflow: \"hidden\",\n            }}\n          >\n            <div\n              style={{\n                width: `${expPercentage}%`,\n                height: \"100%\",\n                background: \"linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)\",\n                borderRadius: \"10px\",\n                transition: \"width 0.3s ease\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // 로비 렌더링\n  const renderLobbyTab = () => (\n    <div style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      {/* 던전 목록 */}\n      <div style={{ marginBottom: \"20px\" }}>\n        <h3 style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"20px\" }}>\n          🏰 {t(\"rpg.ui.dungeonList\")}\n        </h3>\n        <div style={{ display: \"grid\", gap: \"15px\" }}>\n          {availableDungeons.map((dungeon) => (\n            <div\n              key={dungeon.id}\n              style={{\n                background: dungeon.isUnlocked ? gameColors.panelBg : gameColors.darkPanelBg,\n                borderRadius: \"10px\",\n                padding: \"20px\",\n                border: dungeon.isUnlocked\n                  ? \"2px solid #10b981\"\n                  : \"2px solid #4b5563\",\n                opacity: dungeon.isUnlocked ? 1 : 0.6,\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div>\n                  <h4\n                    style={{\n                      color: gameColors.primaryText,\n                      margin: \"0 0 5px 0\",\n                      fontSize: \"18px\",\n                    }}\n                  >\n                    {dungeon.name} (Lv.{dungeon.level})\n                  </h4>\n                  <p\n                    style={{\n                      color: gameColors.secondaryText,\n                      margin: \"0 0 10px 0\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    {dungeon.description}\n                  </p>\n                  <div style={{ fontSize: \"12px\", color: gameColors.secondaryText }}>\n                    {t(\"rpg.ui.requiredLevel\")}: {dungeon.requiredLevel} | {t(\"rpg.ui.floors\")}: {dungeon.floors}\n                    {t(\"rpg.floor\")} | {t(\"rpg.ui.currentFloor\")}: {t(\"rpg.floorDisplay\").replace(\"{floor}\", dungeon.currentFloor.toString())}\n                  </div>\n                </div>\n                <button\n                  onClick={() => enterDungeon(dungeon)}\n                  disabled={\n                    !dungeon.isUnlocked ||\n                    character.level < dungeon.requiredLevel ||\n                    dungeon.isComingSoon\n                  }\n                  style={{\n                    background: dungeon.isComingSoon\n                      ? \"linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)\"\n                      : dungeon.isUnlocked &&\n                        character.level >= dungeon.requiredLevel\n                      ? \"linear-gradient(135deg, #10b981 0%, #059669 100%)\"\n                      : \"#4b5563\",\n                    color: gameColors.primaryText,\n                    border: \"none\",\n                    borderRadius: \"8px\",\n                    padding: \"12px 20px\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                    cursor:\n                      dungeon.isUnlocked &&\n                      character.level >= dungeon.requiredLevel &&\n                      !dungeon.isComingSoon\n                        ? \"pointer\"\n                        : \"not-allowed\",\n                    transition: \"all 0.3s ease\",\n                  }}\n                >\n                  {dungeon.isComingSoon\n                    ? t(\"rpg.ui.comingSoon\")\n                    : dungeon.isUnlocked &&\n                      character.level >= dungeon.requiredLevel\n                    ? t(\"rpg.ui.enter\")\n                    : t(\"rpg.ui.locked\")}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 던전 탭 렌더링\n  const renderDungeonTab = () => {\n    if (!inDungeon || !currentDungeon) {\n      return (\n        <div\n          style={{\n            padding: \"100px 20px\",\n            textAlign: \"center\",\n            background: \"#1f2937\",\n            color: \"#9ca3af\",\n          }}\n        >\n          <h3>{t(\"rpg.dungeon.notEntered\")}</h3>\n          <p>{t(\"rpg.dungeon.selectFromLobby\")}</p>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}\n      >\n        {/* 공통 캐릭터 헤더 */}\n        {renderCharacterHeader()}\n\n        {/* 던전 정보 */}\n        <div\n          style={{\n            background: \"linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)\",\n            borderRadius: \"15px\",\n            padding: \"20px\",\n            marginBottom: \"20px\",\n            color: gameColors.primaryText,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <div>\n              <h2 style={{ margin: \"0 0 5px 0\", fontSize: \"24px\" }}>\n                🏰 {currentDungeon.name}\n              </h2>\n              <p style={{ margin: 0, opacity: 0.9, fontSize: \"14px\" }}>\n                {t(\"rpg.floorDisplay\").replace(\"{floor}\", currentDungeon.currentFloor.toString())} / {t(\"rpg.floorDisplay\").replace(\"{floor}\", currentDungeon.floors.toString())}\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                // 던전 나가기 이벤트 로깅\n                onAction(\"dungeon_exited\", {\n                  dungeon_id: currentDungeon.id,\n                  dungeon_name: currentDungeon.name,\n                  current_floor: currentDungeon.currentFloor,\n                  total_floors: currentDungeon.floors,\n                  character_level: character.level,\n                  exit_reason: \"manual\",\n                  time_spent: new Date().getTime(),\n                });\n                setInDungeon(false);\n                setCurrentDungeon(null);\n                setCurrentTab(\"lobby\");\n                setGameMode(\"lobby\");\n              }}\n              style={{\n                background: gameColors.panelBg,\n                color: gameColors.primaryText,\n                border: \"none\",\n                borderRadius: \"8px\",\n                padding: \"10px 15px\",\n                cursor: \"pointer\",\n              }}\n            >\n              {t(\"rpg.ui.exitDungeon\")}\n            </button>\n          </div>\n\n          {/* 층 진행 컨트롤 */}\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: \"15px\",\n              background: \"rgba(0, 0, 0, 0.2)\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <button\n              onClick={() => {\n                if (currentDungeon.currentFloor > 1) {\n                  const updatedDungeon = {\n                    ...currentDungeon,\n                    currentFloor: currentDungeon.currentFloor - 1,\n                  };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(\n                    t(\"rpg.messages.movedToFloor\").replace(\"{floor}\", updatedDungeon.currentFloor.toString())\n                  );\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                }\n              }}\n              disabled={currentDungeon.currentFloor <= 1}\n              style={{\n                background:\n                  currentDungeon.currentFloor <= 1 ? \"#6b7280\" : \"#3b82f6\",\n                color: gameColors.primaryText,\n                border: \"none\",\n                borderRadius: \"6px\",\n                padding: \"8px 12px\",\n                cursor:\n                  currentDungeon.currentFloor <= 1 ? \"not-allowed\" : \"pointer\",\n                fontSize: \"14px\",\n              }}\n            >\n              {t(\"rpg.previousFloor\")}\n            </button>\n\n            <input\n              type=\"number\"\n              min=\"1\"\n              max={currentDungeon.floors}\n              value={currentDungeon.currentFloor}\n              placeholder=\"층\"\n              onChange={(e) => {\n                const targetFloor = parseInt(e.target.value);\n                if (targetFloor >= 1 && targetFloor <= currentDungeon.floors) {\n                  // Check if all previous floors are cleared\n                  let canMoveTo = true;\n                  for (let i = 1; i < targetFloor; i++) {\n                    if (!currentDungeon.clearedFloors.has(i)) {\n                      canMoveTo = false;\n                      addToCombatLog(\n                        t(\"rpg.messages.clearRequiredForFloor\").replace(\"{requiredFloor}\", i.toString()).replace(\"{targetFloor}\", targetFloor.toString())\n                      );\n                      break;\n                    }\n                  }\n\n                  if (canMoveTo) {\n                    const updatedDungeon = {\n                      ...currentDungeon,\n                      currentFloor: targetFloor,\n                    };\n                    setCurrentDungeon(updatedDungeon);\n                    setCurrentMonster(null);\n                    addToCombatLog(t(\"rpg.messages.movedToFloor\").replace(\"{floor}\", targetFloor.toString()));\n                    setTimeout(() => {\n                      spawnDungeonMonster(updatedDungeon, true);\n                    }, 1000);\n                  }\n                }\n              }}\n              style={{\n                background: \"rgba(255, 255, 255, 0.1)\",\n                color: gameColors.primaryText,\n                border: \"1px solid rgba(255, 255, 255, 0.3)\",\n                borderRadius: \"6px\",\n                padding: \"8px 12px\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n                width: \"80px\",\n              }}\n            />\n\n            <button\n              onClick={() => {\n                const nextFloor = currentDungeon.currentFloor + 1;\n                const currentFloorCleared = currentDungeon.clearedFloors.has(\n                  currentDungeon.currentFloor\n                );\n\n                if (\n                  currentDungeon.currentFloor < currentDungeon.floors &&\n                  currentFloorCleared\n                ) {\n                  const updatedDungeon = {\n                    ...currentDungeon,\n                    currentFloor: nextFloor,\n                  };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(\n                    t(\"rpg.messages.movedToFloor\").replace(\"{floor}\", updatedDungeon.currentFloor.toString())\n                  );\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                } else if (!currentFloorCleared) {\n                  addToCombatLog(\n                    t(\"rpg.messages.killRequiredForNext\")\n                  );\n                }\n              }}\n              disabled={\n                currentDungeon.currentFloor >= currentDungeon.floors ||\n                !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)\n              }\n              style={{\n                background:\n                  currentDungeon.currentFloor >= currentDungeon.floors ||\n                  !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)\n                    ? \"#6b7280\"\n                    : \"#10b981\",\n                color: gameColors.primaryText,\n                border: \"none\",\n                borderRadius: \"6px\",\n                padding: \"8px 12px\",\n                cursor:\n                  currentDungeon.currentFloor >= currentDungeon.floors ||\n                  !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)\n                    ? \"not-allowed\"\n                    : \"pointer\",\n                fontSize: \"14px\",\n              }}\n            >\n              {t(\"rpg.nextFloor\")}\n            </button>\n          </div>\n        </div>\n\n        {/* 층 진행 상태 표시 */}\n        {showDungeonChoice && (\n          <div\n            style={{\n              background: \"linear-gradient(135deg, #f59e0b 0%, #d97706 100%)\",\n              borderRadius: \"15px\",\n              padding: \"20px\",\n              marginBottom: \"20px\",\n              color: gameColors.primaryText,\n              textAlign: \"center\",\n            }}\n          >\n            <div\n              style={{\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n                marginBottom: \"10px\",\n              }}\n            >\n              {t(\"rpg.messages.movingToNext\")}\n            </div>\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.2)\",\n                borderRadius: \"10px\",\n                height: \"8px\",\n                overflow: \"hidden\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  background: \"linear-gradient(90deg, #10b981, #059669)\",\n                  height: \"100%\",\n                  width: \"100%\",\n                  borderRadius: \"10px\",\n                  animation: \"progress 3s linear\",\n                }}\n              />\n            </div>\n            <div style={{ fontSize: \"14px\", opacity: 0.9 }}>\n              잠시만 기다려주세요...\n            </div>\n          </div>\n        )}\n\n        {/* 전투 영역 - 기존 renderCombatTab과 동일한 전투 시스템 */}\n        {currentMonster && (\n          <div\n            style={{\n              background: gameColors.panelBg,\n              borderRadius: \"15px\",\n              padding: \"20px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1fr 1fr\",\n                gap: \"20px\",\n                marginBottom: \"20px\",\n              }}\n            >\n              {/* 캐릭터 */}\n              <div style={{ textAlign: \"center\" }}>\n                <div\n                  style={{\n                    width: \"80px\",\n                    height: \"80px\",\n                    background:\n                      \"linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)\",\n                    borderRadius: \"50%\",\n                    margin: \"0 auto 10px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    fontSize: \"30px\",\n                  }}\n                >\n                  ⚔️\n                </div>\n                <div style={{ color: gameColors.primaryText, marginBottom: \"10px\" }}>\n                  {character.name} Lv.{character.level}\n                </div>\n                <div\n                  style={{\n                    background: gameColors.darkPanelBg,\n                    borderRadius: \"10px\",\n                    padding: \"5px\",\n                    marginBottom: \"5px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      background:\n                        \"linear-gradient(90deg, #ef4444 0%, #dc2626 100%)\",\n                      height: \"8px\",\n                      borderRadius: \"4px\",\n                      width: `${(character.hp / character.maxHp) * 100}%`,\n                    }}\n                  />\n                  <div\n                    style={{\n                      color: gameColors.primaryText,\n                      fontSize: \"12px\",\n                      marginTop: \"5px\",\n                    }}\n                  >\n                    HP: {character.hp}/{character.maxHp}\n                  </div>\n                </div>\n              </div>\n\n              {/* 몬스터 */}\n              <div style={{ textAlign: \"center\" }}>\n                <div\n                  style={{\n                    width: \"80px\",\n                    height: \"80px\",\n                    background:\n                      \"linear-gradient(135deg, #dc2626 0%, #991b1b 100%)\",\n                    borderRadius: \"50%\",\n                    margin: \"0 auto 10px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    fontSize: \"30px\",\n                  }}\n                >\n                  👹\n                </div>\n                <div style={{ color: gameColors.primaryText, marginBottom: \"10px\" }}>\n                  {currentMonster.name} Lv.{currentMonster.level}\n                  {currentMonster.isBoss && (\n                    <span style={{ color: \"#fbbf24\" }}> 👑</span>\n                  )}\n                </div>\n                <div\n                  style={{\n                    background: gameColors.darkPanelBg,\n                    borderRadius: \"10px\",\n                    padding: \"5px\",\n                    marginBottom: \"5px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      background:\n                        \"linear-gradient(90deg, #ef4444 0%, #dc2626 100%)\",\n                      height: \"8px\",\n                      borderRadius: \"4px\",\n                      width: `${\n                        (currentMonster.hp / currentMonster.maxHp) * 100\n                      }%`,\n                    }}\n                  />\n                  <div\n                    style={{\n                      color: gameColors.primaryText,\n                      fontSize: \"12px\",\n                      marginTop: \"5px\",\n                    }}\n                  >\n                    HP: {currentMonster.hp}/{currentMonster.maxHp}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 전투 버튼들 */}\n            <div\n              style={{\n                display: \"flex\",\n                gap: \"10px\",\n                justifyContent: \"center\",\n                marginBottom: \"20px\",\n              }}\n            >\n              <button\n                onClick={attack}\n                disabled={character.hp <= 0}\n                style={{\n                  background:\n                    \"linear-gradient(135deg, #ef4444 0%, #dc2626 100%)\",\n                  color: gameColors.primaryText,\n                  border: \"none\",\n                  borderRadius: \"10px\",\n                  padding: \"12px 24px\",\n                  fontSize: \"16px\",\n                  fontWeight: \"bold\",\n                  cursor: character.hp > 0 ? \"pointer\" : \"not-allowed\",\n                  opacity: character.hp > 0 ? 1 : 0.5,\n                }}\n              >\n                ⚔️ {t(\"rpg.ui.attackButton\")}\n              </button>\n              <button\n                onClick={() => setIsAutoFighting(!isAutoFighting)}\n                style={{\n                  background: isAutoFighting\n                    ? \"linear-gradient(135deg, #dc2626 0%, #991b1b 100%)\"\n                    : \"linear-gradient(135deg, #10b981 0%, #059669 100%)\",\n                  color: gameColors.primaryText,\n                  border: \"none\",\n                  borderRadius: \"10px\",\n                  padding: \"12px 24px\",\n                  fontSize: \"16px\",\n                  fontWeight: \"bold\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {isAutoFighting ? \"⏸️ 자동 중지\" : `▶️ ${t(\"rpg.ui.autoFight\")}`}\n              </button>\n            </div>\n\n            {/* 스킬 버튼들 */}\n            {character.skills.filter(\n              (skill) =>\n                skill.type === \"active\" && skill.isLearned && skill.level > 0\n            ).length > 0 && (\n              <div style={{ marginBottom: \"20px\" }}>\n                <h4\n                  style={{\n                    color: gameColors.primaryText,\n                    marginBottom: \"10px\",\n                    textAlign: \"center\",\n                    fontSize: \"16px\",\n                  }}\n                >\n                  ✨ 스킬 사용 (MP: {character.mp}/{character.maxMp})\n                </h4>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"8px\",\n                    justifyContent: \"center\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  {character.skills\n                    .filter(\n                      (skill) =>\n                        skill.type === \"active\" &&\n                        skill.isLearned &&\n                        skill.level > 0\n                    )\n                    .map((skill) => (\n                      <button\n                        key={skill.id}\n                        onClick={() => castSkill(skill)}\n                        disabled={\n                          character.hp <= 0 ||\n                          skill.currentCooldown > 0 ||\n                          character.mp < skill.manaCost\n                        }\n                        style={{\n                          background:\n                            character.hp > 0 &&\n                            skill.currentCooldown === 0 &&\n                            character.mp >= skill.manaCost\n                              ? \"linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)\"\n                              : \"#4b5563\",\n                          color: gameColors.primaryText,\n                          border: \"none\",\n                          borderRadius: \"8px\",\n                          padding: \"10px 16px\",\n                          fontSize: \"14px\",\n                          fontWeight: \"bold\",\n                          cursor:\n                            character.hp > 0 &&\n                            skill.currentCooldown === 0 &&\n                            character.mp >= skill.manaCost\n                              ? \"pointer\"\n                              : \"not-allowed\",\n                          opacity:\n                            character.hp > 0 &&\n                            skill.currentCooldown === 0 &&\n                            character.mp >= skill.manaCost\n                              ? 1\n                              : 0.6,\n                          position: \"relative\",\n                        }}\n                        title={`${\n                          skill.description\n                        }\\n대미지: ${calculateSkillDamage(\n                          skill,\n                          character\n                        )} | 마나: ${skill.manaCost}`}\n                      >\n                        <div>{skill.name}</div>\n                        <div style={{ fontSize: \"10px\", opacity: 0.8 }}>\n                          MP: {skill.manaCost}\n                          {skill.currentCooldown > 0 && (\n                            <> | {(skill.currentCooldown / 1000).toFixed(1)}s</>\n                          )}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 물약 버튼들 */}\n            {inventory.filter((item) => item.type === \"consumable\").length >\n              0 && (\n              <div style={{ marginBottom: \"20px\" }}>\n                <h4\n                  style={{\n                    color: gameColors.primaryText,\n                    marginBottom: \"10px\",\n                    textAlign: \"center\",\n                    fontSize: \"16px\",\n                  }}\n                >\n                  🧪 물약 사용\n                </h4>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"8px\",\n                    justifyContent: \"center\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  {inventory\n                    .filter((item) => item.type === \"consumable\")\n                    .map((item) => (\n                      <button\n                        key={item.id}\n                        onClick={() => consumeItem(item)}\n                        disabled={character.hp <= 0}\n                        style={{\n                          background:\n                            character.hp > 0\n                              ? `linear-gradient(135deg, ${getRarityColor(\n                                  item.rarity\n                                )} 0%, #374151 100%)`\n                              : \"#4b5563\",\n                          color: gameColors.primaryText,\n                          border: \"none\",\n                          borderRadius: \"8px\",\n                          padding: \"8px 12px\",\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          cursor: character.hp > 0 ? \"pointer\" : \"not-allowed\",\n                          opacity: character.hp > 0 ? 1 : 0.6,\n                          position: \"relative\",\n                        }}\n                        title={`${item.name}\\n${\n                          item.consumableEffect?.healHp\n                            ? `HP +${item.consumableEffect.healHp}`\n                            : \"\"\n                        }${\n                          item.consumableEffect?.healMp\n                            ? `MP +${item.consumableEffect.healMp}`\n                            : \"\"\n                        }${\n                          item.consumableEffect?.buffType\n                            ? `${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}`\n                            : \"\"\n                        }`}\n                      >\n                        <div>{item.name}</div>\n                        <div style={{ fontSize: \"10px\", opacity: 0.8 }}>\n                          {item.quantity && item.quantity > 1\n                            ? `x${item.quantity}`\n                            : \"\"}\n                          {item.consumableEffect?.healHp &&\n                            ` HP+${item.consumableEffect.healHp}`}\n                          {item.consumableEffect?.healMp &&\n                            ` MP+${item.consumableEffect.healMp}`}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 전투 로그 */}\n            <div\n              style={{\n                background: gameColors.darkPanelBg,\n                borderRadius: \"10px\",\n                padding: \"15px\",\n                height: \"200px\",\n                overflowY: \"auto\",\n                fontSize: \"14px\",\n              }}\n            >\n              <div\n                style={{\n                  color: gameColors.secondaryText,\n                  marginBottom: \"10px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n{t(\"rpg.ui.combatLog\")}:\n              </div>\n              {combatLog.slice(-10).map((log, index) => (\n                <div\n                  key={index}\n                  style={{\n                    color: gameColors.primaryText,\n                    marginBottom: \"5px\",\n                    lineHeight: \"1.4\",\n                  }}\n                >\n                  {log}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // 캐릭터 탭 렌더링 (RPG 스타일 UI)\n  const renderCharacterTab = () => (\n    <div style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      {/* 메인 캐릭터 창 - RPG 스타일 */}\n      <div\n        style={{\n          background: \"linear-gradient(135deg, #1e293b 0%, #334155 100%)\",\n          border: \"2px solid #475569\",\n          borderRadius: \"12px\",\n          padding: \"20px\",\n          display: \"flex\",\n          gap: \"30px\",\n          minHeight: \"500px\",\n        }}\n      >\n        {/* 좌측: 장비 슬롯 영역 */}\n        <div style={{ flex: \"0 0 300px\" }}>\n          <h3\n            style={{\n              color: gameColors.primaryText,\n              margin: \"0 0 20px 0\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n            }}\n          >\n            ⚔️ {t(\"rpg.stats.equipment\")}\n          </h3>\n\n          {/* 장비 슬롯 그리드 */}\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3, 1fr)\",\n              gap: \"10px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            {/* 투구 */}\n            {renderEquipmentSlot(\"helmet\", \"⛑️\")}\n            <div></div> {/* 빈 공간 */}\n            <div></div> {/* 빈 공간 */}\n            {/* 반지 */}\n            {renderEquipmentSlot(\"ring\", \"💍\")}\n            {/* 갑옷 */}\n            {renderEquipmentSlot(\"armor\", \"🛡️\")}\n            {/* 무기 */}\n            {renderEquipmentSlot(\"weapon\", \"⚔️\")}\n            {/* 신발 */}\n            {renderEquipmentSlot(\"boots\", \"👢\")}\n            {/* 목걸이 */}\n            {renderEquipmentSlot(\"amulet\", \"📿\")}\n            <div></div> {/* 빈 공간 */}\n          </div>\n        </div>\n\n        {/* 우측: 능력치 정보 영역 */}\n        <div style={{ flex: \"1\" }}>\n          {/* 사용 가능한 포인트 */}\n          {character.stats.availablePoints > 0 && (\n            <div\n              style={{\n                background: \"rgba(16, 185, 129, 0.2)\",\n                border: \"1px solid #10b981\",\n                borderRadius: \"8px\",\n                padding: \"12px\",\n                marginBottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  color: \"#10b981\",\n                  fontSize: \"16px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                사용 가능한 포인트: {character.stats.availablePoints}\n              </div>\n            </div>\n          )}\n\n          {/* 기본 능력치 */}\n          <div\n            style={{\n              background: \"rgba(15, 23, 42, 0.8)\",\n              border: \"1px solid #475569\",\n              borderRadius: \"8px\",\n              padding: \"15px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <h4\n              style={{\n                color: gameColors.primaryText,\n                margin: \"0 0 15px 0\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              📊 {t(\"rpg.stats.baseStats\")}\n            </h4>\n\n            {/* 능력치 리스트 */}\n            {[\n              {\n                key: \"strength\",\n                name: t(\"rpg.stats.strength\"),\n                icon: \"💪\",\n                color: \"#dc2626\",\n                bonus: character.stats.strength * 2,\n                bonusType: t(\"rpg.character.attack\"),\n              },\n              {\n                key: \"agility\",\n                name: t(\"rpg.stats.agility\"),\n                icon: \"⚡\",\n                color: \"#10b981\",\n                bonus: character.stats.agility,\n                bonusType: t(\"rpg.speed\"),\n              },\n              {\n                key: \"vitality\",\n                name: t(\"rpg.stats.vitality\"),\n                icon: \"🛡️\",\n                color: \"#3b82f6\",\n                bonus: character.stats.vitality * 10,\n                bonusType: \"HP\",\n              },\n              {\n                key: \"intelligence\",\n                name: t(\"rpg.stats.intelligence\"),\n                icon: \"🧠\",\n                color: \"#7c3aed\",\n                bonus: character.stats.intelligence * 5,\n                bonusType: \"MP\",\n              },\n            ].map((stat) => (\n              <div\n                key={stat.key}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  padding: \"8px 0\",\n                  borderBottom: \"1px solid rgba(71, 85, 105, 0.3)\",\n                }}\n              >\n                <div\n                  style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\n                >\n                  <span style={{ fontSize: \"16px\" }}>{stat.icon}</span>\n                  <span style={{ color: gameColors.primaryText, fontSize: \"14px\" }}>\n                    {stat.name}\n                  </span>\n                  <span\n                    style={{\n                      color: stat.color,\n                      fontSize: \"16px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {character.stats[stat.key as keyof typeof character.stats]}\n                  </span>\n                </div>\n                <div\n                  style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\n                >\n                  <span style={{ color: stat.color, fontSize: \"12px\" }}>\n                    +{stat.bonus} {stat.bonusType}\n                  </span>\n                  <button\n                    onClick={() =>\n                      allocateStat(stat.key as keyof CharacterStats)\n                    }\n                    disabled={character.stats.availablePoints <= 0}\n                    style={{\n                      background:\n                        character.stats.availablePoints > 0\n                          ? stat.color\n                          : \"#4b5563\",\n                      color: gameColors.primaryText,\n                      border: \"none\",\n                      borderRadius: \"4px\",\n                      padding: \"4px 8px\",\n                      fontSize: \"12px\",\n                      cursor:\n                        character.stats.availablePoints > 0\n                          ? \"pointer\"\n                          : \"not-allowed\",\n                      minWidth: \"24px\",\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* 전투 능력치 */}\n          <div\n            style={{\n              background: \"rgba(15, 23, 42, 0.8)\",\n              border: \"1px solid #475569\",\n              borderRadius: \"8px\",\n              padding: \"15px\",\n            }}\n          >\n            <h4\n              style={{\n                color: gameColors.primaryText,\n                margin: \"0 0 15px 0\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              ⚔️ {t(\"rpg.stats.combatStats\")}\n            </h4>\n\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1fr 1fr\",\n                gap: \"15px\",\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    color: \"#dc2626\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"rpg.character.attack\")}\n                </div>\n                <div\n                  style={{\n                    color: gameColors.primaryText,\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {character.attack}\n                </div>\n              </div>\n              <div>\n                <div\n                  style={{\n                    color: \"#3b82f6\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"rpg.stats.defense\")}\n                </div>\n                <div\n                  style={{\n                    color: gameColors.primaryText,\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {character.defense}\n                </div>\n              </div>\n              <div>\n                <div\n                  style={{\n                    color: \"#ef4444\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"rpg.stats.vitality\")}\n                </div>\n                <div style={{ color: gameColors.primaryText, fontSize: \"16px\" }}>\n                  {character.hp} / {character.maxHp}\n                </div>\n              </div>\n              <div>\n                <div\n                  style={{\n                    color: \"#8b5cf6\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"rpg.ui.mana\")}\n                </div>\n                <div style={{ color: gameColors.primaryText, fontSize: \"16px\" }}>\n                  {character.mp} / {character.maxMp}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // 장비 슬롯 렌더링 함수\n  const renderEquipmentSlot = (slot: keyof Equipment, icon: string) => {\n    const item = character.equipment[slot];\n    const rarityColor =\n      item?.rarity === \"legendary\"\n        ? \"#f59e0b\"\n        : item?.rarity === \"epic\"\n        ? \"#a855f7\"\n        : item?.rarity === \"rare\"\n        ? \"#3b82f6\"\n        : item?.rarity === \"mythic\"\n        ? \"#ef4444\"\n        : \"#9ca3af\";\n\n    return (\n      <div\n        style={{\n          width: \"70px\",\n          height: \"70px\",\n          background: item\n            ? \"rgba(16, 185, 129, 0.2)\"\n            : \"rgba(71, 85, 105, 0.3)\",\n          border: item ? `2px solid ${rarityColor}` : \"2px solid #475569\",\n          borderRadius: \"8px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          position: \"relative\",\n          cursor: item ? \"pointer\" : \"default\",\n        }}\n      >\n        {item ? (\n          <>\n            <div style={{ fontSize: \"24px\" }}>{icon}</div>\n            <div\n              style={{\n                fontSize: \"8px\",\n                color: rarityColor,\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n                lineHeight: \"1\",\n              }}\n            >\n              {item.name.length > 6\n                ? item.name.substring(0, 6) + \"...\"\n                : item.name}\n            </div>\n            <button\n              onClick={() => unequipItem(slot)}\n              style={{\n                position: \"absolute\",\n                top: \"-5px\",\n                right: \"-5px\",\n                background: \"#dc2626\",\n                color: gameColors.primaryText,\n                border: \"none\",\n                borderRadius: \"50%\",\n                width: \"16px\",\n                height: \"16px\",\n                fontSize: \"10px\",\n                cursor: \"pointer\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              ×\n            </button>\n          </>\n        ) : (\n          <div style={{ fontSize: \"24px\", opacity: 0.3 }}>{icon}</div>\n        )}\n      </div>\n    );\n  };\n\n  // 인벤토리 탭 렌더링\n  // 아이템 아이콘 맵핑\n  const getItemIcon = (item: Item) => {\n    const iconMap: { [key: string]: string } = {\n      // 무기들\n      \"sword1\": \"⚔️\",\n      \"steel_sword\": \"🗡️\",\n      \"enchanted_sword\": \"✨\",\n      \"dragon_sword\": \"🐉\",\n      \"iron-sword\": \"⚔️\",\n      \"steel-sword\": \"🗡️\",\n      \"magic-sword\": \"⚡\",\n      \"legendary-sword\": \"🔥\",\n      \"dragon-slayer\": \"🐉\",\n      \n      // 방어구들\n      \"armor1\": \"🦺\",\n      \"plate_armor\": \"🛡️\",\n      \"dragon_armor\": \"🐲\",\n      \"leather-armor\": \"🛡️\",\n      \"iron-armor\": \"⛨\",\n      \"steel-armor\": \"🛡️\",\n      \"magic-armor\": \"✨\",\n      \n      // 투구들\n      \"helmet1\": \"⛑️\",\n      \"steel_helmet\": \"🪖\",\n      \"mystic_helmet\": \"👑\",\n      \"iron-helmet\": \"⛑️\",\n      \"steel-helmet\": \"👑\",\n      \"magic-helmet\": \"💎\",\n      \n      // 부츠들\n      \"boots1\": \"👢\",\n      \"steel_boots\": \"🥾\",\n      \"mystic_boots\": \"✨\",\n      \"leather-boots\": \"👢\",\n      \"iron-boots\": \"🥾\",\n      \"magic-boots\": \"⚡\",\n      \n      // 반지들\n      \"ring1\": \"💍\",\n      \"power_ring\": \"💎\",\n      \"mystic_ring\": \"🔮\",\n      \"power-ring\": \"💍\",\n      \"magic-ring\": \"💫\",\n      \"health-ring\": \"❤️\",\n      \"defense-ring\": \"🛡️\",\n      \n      // 소모품들\n      \"health_potion\": \"❤️\",\n      \"mana_potion\": \"💙\",\n      \"greater_health_potion\": \"💖\",\n      \"greater_mana_potion\": \"💎\",\n      \"strength_potion\": \"💪\",\n      \"defense_potion\": \"🛡️\",\n      \"speed_potion\": \"💨\",\n      \"health-potion\": \"🧪\",\n      \"mana-potion\": \"💙\",\n      \"strength-potion\": \"💪\",\n      \n      // 타입별 기본 아이콘\n      weapon: \"⚔️\",\n      armor: \"🛡️\",\n      helmet: \"⛑️\",\n      boots: \"👢\",\n      ring: \"💍\",\n      consumable: \"🧪\",\n    };\n    \n    // ID로 먼저 찾고, 없으면 타입으로 찾기\n    return iconMap[item.id] || iconMap[item.type] || \"📦\";\n  };\n\n  // 선택된 아이템 상세 정보\n  const [selectedItem, setSelectedItem] = useState<Item | null>(null);\n\n  const renderInventoryTab = () => (\n    <div style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{ display: \"flex\", gap: \"20px\" }}>\n        {/* 인벤토리 그리드 */}\n        <div style={{ flex: 1 }}>\n          <h3 style={{ color: gameColors.primaryText, marginBottom: \"15px\" }}>\n            📦 {t(\"rpg.inventory.items\")} ({inventory.length}/50)\n          </h3>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(10, 1fr)\",\n              gap: \"4px\",\n              background: \"rgba(0, 0, 0, 0.3)\",\n              padding: \"15px\",\n              borderRadius: \"10px\",\n              border: \"2px solid #4b5563\",\n            }}\n          >\n            {/* 인벤토리 슬롯 50개 */}\n            {Array.from({ length: 50 }, (_, index) => {\n              const item = inventory[index];\n              const isEmpty = !item;\n\n              return (\n                <div\n                  key={index}\n                  onClick={() => item && setSelectedItem(item)}\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    background: isEmpty\n                      ? \"rgba(255, 255, 255, 0.05)\"\n                      : \"rgba(255, 255, 255, 0.1)\",\n                    border: isEmpty\n                      ? \"1px solid #374151\"\n                      : `2px solid ${getRarityColor(item.rarity)}`,\n                    borderRadius: \"8px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    cursor: item ? \"pointer\" : \"default\",\n                    position: \"relative\",\n                    transition: \"all 0.2s ease\",\n                  }}\n                  onMouseEnter={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = \"scale(1.05)\";\n                      e.currentTarget.style.boxShadow = `0 0 15px ${getRarityColor(\n                        item.rarity\n                      )}50`;\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = \"scale(1)\";\n                      e.currentTarget.style.boxShadow = \"none\";\n                    }\n                  }}\n                >\n                  {item && (\n                    <>\n                      <div style={{ fontSize: \"24px\" }}>\n                        {getItemIcon(item)}\n                      </div>\n                      {/* 수량 표시 (같은 아이템이 여러 개일 때) */}\n                      {inventory.filter((inv) => inv.name === item.name)\n                        .length > 1 && (\n                        <div\n                          style={{\n                            position: \"absolute\",\n                            bottom: \"2px\",\n                            right: \"2px\",\n                            background: \"#000\",\n                            color: gameColors.primaryText,\n                            fontSize: \"10px\",\n                            padding: \"1px 3px\",\n                            borderRadius: \"3px\",\n                            lineHeight: \"1\",\n                          }}\n                        >\n                          {\n                            inventory.filter((inv) => inv.name === item.name)\n                              .length\n                          }\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* 아이템 상세 정보 */}\n        <div style={{ width: \"300px\" }}>\n          <h3 style={{ color: gameColors.primaryText, marginBottom: \"15px\" }}>\n            📋 {t(\"rpg.inventory.itemInfo\")}\n          </h3>\n          {selectedItem ? (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.1)\",\n                border: `2px solid ${getRarityColor(selectedItem.rarity)}`,\n                borderRadius: \"10px\",\n                padding: \"20px\",\n              }}\n            >\n              <div style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                <div style={{ fontSize: \"48px\", marginBottom: \"10px\" }}>\n                  {getItemIcon(selectedItem)}\n                </div>\n                <h4\n                  style={{\n                    color: getRarityColor(selectedItem.rarity),\n                    margin: \"0 0 5px 0\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {selectedItem.name}\n                </h4>\n                <p\n                  style={{\n                    color: gameColors.secondaryText,\n                    margin: \"0 0 15px 0\",\n                    fontSize: \"14px\",\n                    textTransform: \"capitalize\",\n                  }}\n                >\n                  {selectedItem.type} • {selectedItem.rarity}\n                </p>\n              </div>\n\n              {/* 능력치 */}\n              {selectedItem.stats &&\n                Object.keys(selectedItem.stats).length > 0 && (\n                  <div style={{ marginBottom: \"15px\" }}>\n                    <h5\n                      style={{\n                        color: gameColors.primaryText,\n                        margin: \"0 0 10px 0\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      {t(\"rpg.item.stats\")}\n                    </h5>\n                    {Object.entries(selectedItem.stats).map(([stat, value]) => (\n                      <div\n                        key={stat}\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          color: \"#10b981\",\n                          fontSize: \"12px\",\n                          marginBottom: \"5px\",\n                        }}\n                      >\n                        <span>\n                          {stat === \"attack\"\n                            ? \"공격력\"\n                            : stat === \"defense\"\n                            ? \"방어력\"\n                            : stat === \"hp\"\n                            ? \"체력\"\n                            : stat === \"mp\"\n                            ? t(\"rpg.ui.mana\")\n                            : stat}\n                        </span>\n                        <span>+{value}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n              {/* 가격 */}\n              <div style={{ marginBottom: \"15px\" }}>\n                <h5\n                  style={{\n                    color: gameColors.primaryText,\n                    margin: \"0 0 10px 0\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"rpg.shop.price\")}\n                </h5>\n                <p style={{ color: \"#f59e0b\", fontSize: \"12px\", margin: 0 }}>\n                  {selectedItem.price.toLocaleString()}G\n                </p>\n              </div>\n\n              {/* 액션 버튼 */}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                {selectedItem.type !== \"consumable\" && (\n                  <button\n                    onClick={() => {\n                      equipItem(selectedItem);\n                      setSelectedItem(null);\n                    }}\n                    style={{\n                      background:\n                        \"linear-gradient(135deg, #10b981 0%, #059669 100%)\",\n                      color: gameColors.primaryText,\n                      border: \"none\",\n                      borderRadius: \"6px\",\n                      padding: \"10px\",\n                      fontSize: \"14px\",\n                      cursor: \"pointer\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    장착\n                  </button>\n                )}\n                {selectedItem.type === \"consumable\" && (\n                  <button\n                    onClick={() => {\n                      // 사용 로직 (임시)\n                      console.log(\"Use item:\", selectedItem.name);\n                      setSelectedItem(null);\n                    }}\n                    style={{\n                      background:\n                        \"linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)\",\n                      color: gameColors.primaryText,\n                      border: \"none\",\n                      borderRadius: \"6px\",\n                      padding: \"10px\",\n                      fontSize: \"14px\",\n                      cursor: \"pointer\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    사용\n                  </button>\n                )}\n                <button\n                  onClick={() => {\n                    const sellPrice = Math.floor(selectedItem.price * 0.7);\n                    setCharacter((prev) => ({\n                      ...prev,\n                      gold: prev.gold + sellPrice,\n                    }));\n                    setInventory((prev) =>\n                      prev.filter((invItem) => invItem.id !== selectedItem.id)\n                    );\n                    addToCombatLog(\n                      `${selectedItem.name}을 ${sellPrice} 골드에 판매했습니다!`\n                    );\n                    setSelectedItem(null);\n                  }}\n                  style={{\n                    background: \"#dc2626\",\n                    color: gameColors.primaryText,\n                    border: \"none\",\n                    borderRadius: \"6px\",\n                    padding: \"10px\",\n                    fontSize: \"14px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  판매 ({Math.floor(selectedItem.price * 0.7)}G)\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.05)\",\n                borderRadius: \"10px\",\n                padding: \"40px\",\n                textAlign: \"center\",\n                color: gameColors.secondaryText,\n              }}\n            >\n              <p>{t(\"rpg.inventory.clickForInfo\")}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 상점 카테고리 상태\n  const [shopCategory, setShopCategory] = useState<\"equipment\" | \"consumable\">(\n    \"equipment\"\n  );\n  const [selectedShopItem, setSelectedShopItem] = useState<Item | null>(null);\n\n  const renderShopTab = () => (\n    <div style={{ padding: \"20px\", background: gameColors.mainBg, minHeight: \"600px\" }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      {/* 상점 카테고리 탭 */}\n      <div\n        style={{\n          display: \"flex\",\n          background: \"rgba(255, 255, 255, 0.1)\",\n          borderRadius: \"10px\",\n          marginBottom: \"20px\",\n          overflow: \"hidden\",\n        }}\n      >\n        {[\n          { id: \"equipment\", label: t(\"rpg.shop.equipment\"), icon: \"⚔️\", color: \"#10b981\" },\n          { id: \"consumable\", label: t(\"rpg.shop.consumable\"), icon: \"🧪\", color: \"#f59e0b\" },\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setShopCategory(tab.id as any)}\n            style={{\n              flex: 1,\n              padding: \"15px 20px\",\n              background:\n                shopCategory === tab.id\n                  ? `linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)`\n                  : \"transparent\",\n              color: shopCategory === tab.id ? \"white\" : gameColors.secondaryText,\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"14px\",\n              fontWeight: shopCategory === tab.id ? \"bold\" : \"normal\",\n              transition: \"all 0.3s ease\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              gap: \"8px\",\n            }}\n          >\n            <span>{tab.icon}</span>\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      <div style={{ display: \"flex\", gap: \"20px\" }}>\n        {/* 좌측 아이템 그리드 */}\n        <div style={{ flex: 1 }}>\n          <h3\n            style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"16px\" }}\n          >\n            {shopCategory === \"equipment\"\n              ? `⚔️ ${t(\"rpg.shop.equipment\")} ${t(\"rpg.shop\")}`\n              : `🧪 ${t(\"rpg.shop.consumable\")} ${t(\"rpg.shop\")}`}\n          </h3>\n\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(8, 1fr)\",\n              gap: \"6px\",\n              background: \"rgba(0, 0, 0, 0.3)\",\n              padding: \"15px\",\n              borderRadius: \"10px\",\n              border: \"2px solid #4b5563\",\n              minHeight: \"400px\",\n            }}\n          >\n            {/* 상점 아이템 그리드 */}\n            {Array.from({ length: 32 }, (_, index) => {\n              let items: Item[] = [];\n\n              if (shopCategory === \"equipment\") {\n                // 장비 아이템 (무기, 방어구, 투구, 부츠, 반지)\n                items = shop.filter(\n                  (item) => item.type !== \"consumable\"\n                );\n              } else {\n                // 소모품 아이템\n                items = shop.filter(\n                  (item) => item.type === \"consumable\"\n                );\n              }\n\n              const item = items[index];\n              const isEmpty = !item;\n              const canAfford = character.gold >= (item?.price || 0);\n\n              return (\n                <div\n                  key={index}\n                  onClick={() => item && setSelectedShopItem(item)}\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    background: isEmpty\n                      ? \"rgba(255, 255, 255, 0.05)\"\n                      : canAfford\n                      ? \"rgba(16, 185, 129, 0.1)\"\n                      : \"rgba(107, 114, 128, 0.1)\",\n                    border: isEmpty\n                      ? \"1px solid #374151\"\n                      : `2px solid ${getRarityColor(item.rarity)}`,\n                    borderRadius: \"8px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    cursor: item ? \"pointer\" : \"default\",\n                    position: \"relative\",\n                    transition: \"all 0.2s ease\",\n                  }}\n                  onMouseEnter={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = \"scale(1.1)\";\n                      e.currentTarget.style.boxShadow = `0 0 15px ${getRarityColor(\n                        item.rarity\n                      )}50`;\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = \"scale(1)\";\n                      e.currentTarget.style.boxShadow = \"none\";\n                    }\n                  }}\n                >\n                  {item && (\n                    <>\n                      <div\n                        style={{\n                          fontSize: \"20px\",\n                          opacity: canAfford ? 1 : 0.5,\n                        }}\n                      >\n                        {getItemIcon(item)}\n                      </div>\n                      {/* 가격 표시 */}\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          bottom: \"2px\",\n                          right: \"2px\",\n                          background: canAfford ? \"#10b981\" : \"#dc2626\",\n                          color: gameColors.primaryText,\n                          fontSize: \"8px\",\n                          padding: \"1px 3px\",\n                          borderRadius: \"3px\",\n                          lineHeight: \"1\",\n                        }}\n                      >\n                        {item.price >= 1000\n                          ? `${Math.floor(item.price / 1000)}K`\n                          : item.price}G\n                      </div>\n                    </>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* 우측 아이템 상세 정보 */}\n        <div style={{ width: \"300px\" }}>\n          <h3\n            style={{ color: gameColors.primaryText, marginBottom: \"15px\", fontSize: \"16px\" }}\n          >\n            📋 {t(\"rpg.shop.itemInfo\")}\n          </h3>\n          {selectedShopItem ? (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.1)\",\n                border: `2px solid ${getRarityColor(selectedShopItem.rarity)}`,\n                borderRadius: \"10px\",\n                padding: \"20px\",\n              }}\n            >\n              <div style={{ textAlign: \"center\", marginBottom: \"15px\" }}>\n                <div style={{ fontSize: \"48px\", marginBottom: \"10px\" }}>\n                  {getItemIcon(selectedShopItem)}\n                </div>\n                <h4\n                  style={{\n                    color: getRarityColor(selectedShopItem.rarity),\n                    margin: \"0 0 5px 0\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {selectedShopItem.name}\n                </h4>\n                <p\n                  style={{\n                    color: gameColors.secondaryText,\n                    margin: \"0 0 15px 0\",\n                    fontSize: \"14px\",\n                    textTransform: \"capitalize\",\n                  }}\n                >\n                  {selectedShopItem.type} • Lv.{selectedShopItem.level} •{\" \"}\n                  {selectedShopItem.rarity}\n                </p>\n              </div>\n\n              {/* 아이템 능력치 */}\n              {selectedShopItem.stats &&\n                Object.keys(selectedShopItem.stats).length > 0 && (\n                  <div style={{ marginBottom: \"15px\" }}>\n                    <h5\n                      style={{\n                        color: gameColors.primaryText,\n                        margin: \"0 0 10px 0\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      {t(\"rpg.item.stats\")}\n                    </h5>\n                    {Object.entries(selectedShopItem.stats).map(\n                      ([stat, value]) =>\n                        value > 0 && (\n                          <div\n                            key={stat}\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-between\",\n                              color: \"#10b981\",\n                              fontSize: \"12px\",\n                              marginBottom: \"5px\",\n                            }}\n                          >\n                            <span>\n                              {stat === \"attack\"\n                                ? t(\"rpg.attackWithIcon\")\n                                : stat === \"defense\"\n                                ? t(\"rpg.defenseWithIcon\")\n                                : stat === \"hp\"\n                                ? t(\"rpg.healthWithIcon\")\n                                : stat === \"mp\"\n                                ? t(\"rpg.manaWithIcon\")\n                                : stat === \"speed\"\n                                ? `💨 ${t(\"rpg.speed\")}`\n                                : stat === \"critRate\"\n                                ? \"💥 크리티컬\"\n                                : stat}\n                            </span>\n                            <span>+{value}</span>\n                          </div>\n                        )\n                    )}\n                  </div>\n                )}\n\n              {/* 가격 정보 */}\n              <div style={{ marginBottom: \"15px\" }}>\n                <h5\n                  style={{\n                    color: gameColors.primaryText,\n                    margin: \"0 0 10px 0\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {t(\"rpg.shop.price\")}\n                </h5>\n                <p\n                  style={{\n                    color: \"#f59e0b\",\n                    fontSize: \"14px\",\n                    margin: 0,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {selectedShopItem.price.toLocaleString()}{t(\"rpg.item.gold\")}\n                </p>\n              </div>\n\n              {/* 액션 버튼 */}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <button\n                  onClick={() => {\n                    buyItem(selectedShopItem);\n                    setSelectedShopItem(null);\n                  }}\n                  disabled={character.gold < selectedShopItem.price}\n                  style={{\n                    background:\n                      character.gold >= selectedShopItem.price\n                        ? \"linear-gradient(135deg, #10b981 0%, #059669 100%)\"\n                        : \"#6b7280\",\n                    color: gameColors.primaryText,\n                    border: \"none\",\n                    borderRadius: \"6px\",\n                    padding: \"12px\",\n                    fontSize: \"14px\",\n                    cursor:\n                      character.gold >= selectedShopItem.price\n                        ? \"pointer\"\n                        : \"not-allowed\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {t(\"rpg.shop.buy\")} ({selectedShopItem.price.toLocaleString()}G)\n                </button>\n\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                background: \"rgba(255, 255, 255, 0.05)\",\n                borderRadius: \"10px\",\n                padding: \"40px\",\n                textAlign: \"center\",\n                color: gameColors.secondaryText,\n              }}\n            >\n              <p>{t(\"rpg.item.clickForInfo\")}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* 하단 골드 정보 */}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: \"15px 20px\",\n          background: \"rgba(255, 255, 255, 0.1)\",\n          borderRadius: \"10px\",\n          marginTop: \"20px\",\n          border: \"2px solid #4b5563\",\n        }}\n      >\n        <div>\n          <div style={{ fontSize: \"14px\", opacity: 0.9, color: \"white\" }}>\n            {t(\"rpg.item.ownedGold\")}\n          </div>\n          <div\n            style={{\n              fontSize: \"20px\",\n              fontWeight: \"bold\",\n              color: \"#f59e0b\",\n            }}\n          >\n            {character.gold.toLocaleString()}G\n          </div>\n        </div>\n        <div style={{ textAlign: \"right\" }}>\n          <div style={{ fontSize: \"12px\", opacity: 0.8, color: gameColors.secondaryText }}>\n            {shopCategory === \"equipment\"\n              ? t(\"rpg.shop.equipment.description\")\n              : t(\"rpg.shop.consumables.description\")}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTabs = () => (\n    <div\n      style={{\n        background: gameColors.panelBg,\n        display: \"flex\",\n        borderRadius: \"15px 15px 0 0\",\n        overflow: \"hidden\",\n      }}\n    >\n      {[\n        { id: \"lobby\", name: t(\"rpg.tabs.lobby\"), icon: \"🏠\" },\n        { id: \"character\", name: t(\"rpg.tabs.character\"), icon: \"👤\" },\n        { id: \"inventory\", name: t(\"rpg.tabs.inventory\"), icon: \"🎒\" },\n        { id: \"skills\", name: t(\"rpg.tabs.skills\"), icon: \"✨\" },\n        { id: \"dungeon\", name: t(\"rpg.tabs.dungeon\"), icon: \"🏰\" },\n        { id: \"shop\", name: t(\"rpg.tabs.shop\"), icon: \"🛒\" },\n      ].map((tab) => (\n        <button\n          key={tab.id}\n          onClick={() => setCurrentTab(tab.id as any)}\n          style={{\n            background: currentTab === tab.id ? colors.accent : \"transparent\",\n            color: colors.text,\n            border: \"none\",\n            padding: \"15px 20px\",\n            fontSize: \"14px\",\n            cursor: \"pointer\",\n            flex: 1,\n            transition: \"all 0.3s ease\",\n          }}\n        >\n          <div>{tab.icon}</div>\n          <div style={{ fontSize: \"12px\", marginTop: \"5px\" }}>{tab.name}</div>\n        </button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        maxWidth: \"1200px\",\n        margin: \"0 auto\",\n        background: colors.cardBg,\n        borderRadius: \"20px\",\n        overflow: \"hidden\",\n        boxShadow: \"0 20px 60px rgba(0, 0, 0, 0.3)\",\n        fontFamily:\n          '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n        border: `1px solid ${colors.cardBorder}`,\n      }}\n    >\n      {/* 게임 타이틀 */}\n      <div\n        style={{\n          background: colors.backgroundSecondary,\n          padding: \"20px\",\n          textAlign: \"center\",\n          position: \"relative\",\n          overflow: \"hidden\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background:\n              \"radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)\",\n          }}\n        />\n        <h1\n          style={{\n            margin: 0,\n            fontSize: \"32px\",\n            fontWeight: \"bold\",\n            color: colors.text,\n            textShadow: \"0 4px 20px rgba(147, 51, 234, 0.5)\",\n            position: \"relative\",\n            zIndex: 1,\n          }}\n        >\n          {t(\"rpg.title\")}\n        </h1>\n        <p\n          style={{\n            margin: \"10px 0 0 0\",\n            color: colors.textSecondary,\n            fontSize: \"16px\",\n            position: \"relative\",\n            zIndex: 1,\n          }}\n        >\n          {t(\"rpg.subtitle\")}\n        </p>\n      </div>\n\n      {/* 탭 메뉴 */}\n      {renderTabs()}\n\n      {/* 현재 탭 컨텐츠 */}\n      {currentTab === \"lobby\" && renderLobbyTab()}\n      {currentTab === \"dungeon\" && renderDungeonTab()}\n      {currentTab === \"character\" && renderCharacterTab()}\n      {currentTab === \"inventory\" && renderInventoryTab()}\n      {currentTab === \"skills\" && renderSkillsTab()}\n      {currentTab === \"shop\" && renderShopTab()}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}