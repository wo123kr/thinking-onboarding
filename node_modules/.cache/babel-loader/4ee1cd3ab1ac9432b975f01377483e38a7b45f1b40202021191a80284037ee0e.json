{"ast":null,"code":"var _jsxFileName = \"/Users/jegaljin-u/workspace/thinking-guide/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // LocalStorage에서 저장된 테마 설정 불러오기\n  const getStoredTheme = () => {\n    try {\n      const stored = localStorage.getItem('thinking-guide-theme');\n      if (stored && ['dark', 'light'].includes(stored)) {\n        return stored;\n      }\n    } catch (error) {\n      console.warn('Failed to load theme from localStorage:', error);\n    }\n    return 'dark'; // 기본값\n  };\n  const [theme, setTheme] = useState(getStoredTheme());\n\n  // 테마 변경시 LocalStorage에 저장\n  const handleSetTheme = newTheme => {\n    try {\n      localStorage.setItem('thinking-guide-theme', newTheme);\n      setTheme(newTheme);\n    } catch (error) {\n      console.warn('Failed to save theme to localStorage:', error);\n      setTheme(newTheme); // 저장 실패해도 상태는 변경\n    }\n  };\n  const toggleTheme = () => {\n    handleSetTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n  const darkTheme = {\n    background: 'radial-gradient(ellipse at top, #1e1b4b 0%, #0f0f23 50%, #000000 100%)',\n    backgroundSecondary: 'linear-gradient(135deg, #1e1b4b, #0f0f23)',\n    cardBg: 'linear-gradient(145deg, rgba(30, 30, 60, 0.9), rgba(15, 15, 35, 0.9))',\n    cardBorder: 'rgba(139, 92, 246, 0.3)',\n    text: '#ffffff',\n    textSecondary: '#a1a1aa',\n    accent: '#8b5cf6',\n    accentSecondary: '#3b82f6',\n    success: '#10b981',\n    warning: '#f59e0b',\n    error: '#ef4444',\n    premium: 'linear-gradient(135deg, #f59e0b, #f97316)',\n    headerBg: 'rgba(15, 15, 35, 0.8)',\n    headerText: '#ffffff'\n  };\n  const lightTheme = {\n    background: 'radial-gradient(ellipse at top, #f8fafc 0%, #e2e8f0 50%, #cbd5e1 100%)',\n    backgroundSecondary: 'linear-gradient(135deg, #f8fafc, #e2e8f0)',\n    cardBg: 'linear-gradient(145deg, rgba(255, 255, 255, 0.9), rgba(248, 250, 252, 0.9))',\n    cardBorder: 'rgba(139, 92, 246, 0.2)',\n    text: '#1e293b',\n    textSecondary: '#64748b',\n    accent: '#8b5cf6',\n    accentSecondary: '#3b82f6',\n    success: '#10b981',\n    warning: '#f59e0b',\n    error: '#ef4444',\n    premium: 'linear-gradient(135deg, #f59e0b, #f97316)',\n    headerBg: 'rgba(255, 255, 255, 0.9)',\n    headerText: '#1e293b'\n  };\n  const colors = theme === 'dark' ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme: handleSetTheme,\n      colors,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"c1+L5tZ78o3PRzDAjo+Pm065Swk=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","getStoredTheme","stored","localStorage","getItem","includes","error","console","warn","theme","setTheme","handleSetTheme","newTheme","setItem","toggleTheme","darkTheme","background","backgroundSecondary","cardBg","cardBorder","text","textSecondary","accent","accentSecondary","success","warning","premium","headerBg","headerText","lightTheme","colors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\nexport type Theme = 'dark' | 'light';\n\nexport interface ThemeColors {\n  // 메인 배경색\n  background: string;\n  backgroundSecondary: string;\n  \n  // 카드 및 컴포넌트\n  cardBg: string;\n  cardBorder: string;\n  \n  // 텍스트\n  text: string;\n  textSecondary: string;\n  \n  // 액센트 컬러\n  accent: string;\n  accentSecondary: string;\n  \n  // 상태 색상\n  success: string;\n  warning: string;\n  error: string;\n  premium: string;\n  \n  // 헤더\n  headerBg: string;\n  headerText: string;\n}\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  colors: ThemeColors;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // LocalStorage에서 저장된 테마 설정 불러오기\n  const getStoredTheme = (): Theme => {\n    try {\n      const stored = localStorage.getItem('thinking-guide-theme');\n      if (stored && ['dark', 'light'].includes(stored)) {\n        return stored as Theme;\n      }\n    } catch (error) {\n      console.warn('Failed to load theme from localStorage:', error);\n    }\n    return 'dark'; // 기본값\n  };\n\n  const [theme, setTheme] = useState<Theme>(getStoredTheme());\n\n  // 테마 변경시 LocalStorage에 저장\n  const handleSetTheme = (newTheme: Theme) => {\n    try {\n      localStorage.setItem('thinking-guide-theme', newTheme);\n      setTheme(newTheme);\n    } catch (error) {\n      console.warn('Failed to save theme to localStorage:', error);\n      setTheme(newTheme); // 저장 실패해도 상태는 변경\n    }\n  };\n\n  const toggleTheme = () => {\n    handleSetTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const darkTheme: ThemeColors = {\n    background: 'radial-gradient(ellipse at top, #1e1b4b 0%, #0f0f23 50%, #000000 100%)',\n    backgroundSecondary: 'linear-gradient(135deg, #1e1b4b, #0f0f23)',\n    cardBg: 'linear-gradient(145deg, rgba(30, 30, 60, 0.9), rgba(15, 15, 35, 0.9))',\n    cardBorder: 'rgba(139, 92, 246, 0.3)',\n    text: '#ffffff',\n    textSecondary: '#a1a1aa',\n    accent: '#8b5cf6',\n    accentSecondary: '#3b82f6',\n    success: '#10b981',\n    warning: '#f59e0b',\n    error: '#ef4444',\n    premium: 'linear-gradient(135deg, #f59e0b, #f97316)',\n    headerBg: 'rgba(15, 15, 35, 0.8)',\n    headerText: '#ffffff'\n  };\n\n  const lightTheme: ThemeColors = {\n    background: 'radial-gradient(ellipse at top, #f8fafc 0%, #e2e8f0 50%, #cbd5e1 100%)',\n    backgroundSecondary: 'linear-gradient(135deg, #f8fafc, #e2e8f0)',\n    cardBg: 'linear-gradient(145deg, rgba(255, 255, 255, 0.9), rgba(248, 250, 252, 0.9))',\n    cardBorder: 'rgba(139, 92, 246, 0.2)',\n    text: '#1e293b',\n    textSecondary: '#64748b',\n    accent: '#8b5cf6',\n    accentSecondary: '#3b82f6',\n    success: '#10b981',\n    warning: '#f59e0b',\n    error: '#ef4444',\n    premium: 'linear-gradient(135deg, #f59e0b, #f97316)',\n    headerBg: 'rgba(255, 255, 255, 0.9)',\n    headerText: '#1e293b'\n  };\n\n  const colors = theme === 'dark' ? darkTheme : lightTheme;\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme: handleSetTheme, colors, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}