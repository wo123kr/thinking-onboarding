{"ast":null,"code":"var _jsxFileName = \"/Users/jegaljin-u/workspace/thinking-guide/src/components/CodeBlock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Copy, Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CodeBlock = ({\n  code,\n  language,\n  title,\n  showCopy = true\n}) => {\n  _s();\n  const [copied, setCopied] = useState(false);\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy code:', err);\n    }\n  };\n\n  // Simple syntax highlighting function\n  const highlightCode = (code, lang) => {\n    if (!code) return code;\n\n    // Define color styles for different elements\n    const colors = {\n      keyword: '#ff7b72',\n      // Red for keywords\n      string: '#a5d6ff',\n      // Blue for strings\n      comment: '#8b949e',\n      // Gray for comments\n      function: '#d2a8ff',\n      // Purple for functions\n      variable: '#ffa657' // Orange for variables\n    };\n    let highlighted = code;\n\n    // Apply basic highlighting based on language\n    if (lang === 'javascript' || lang === 'java' || lang === 'kotlin' || lang === 'swift' || lang === 'objectivec') {\n      // Keywords\n      highlighted = highlighted.replace(/\\b(import|export|let|const|var|function|class|if|else|for|while|return|try|catch|finally|new|this|public|private|protected|static|void|String|int|boolean|NSString|@interface|@implementation|@end)\\b/g, `<span style=\"color: ${colors.keyword}\">$1</span>`);\n\n      // Strings\n      highlighted = highlighted.replace(/([\"'`])((?:(?!\\1)[^\\\\]|\\\\.)*)(\\1)/g, `<span style=\"color: ${colors.string}\">$1$2$3</span>`);\n\n      // Comments\n      highlighted = highlighted.replace(/(\\/\\/.*$|\\/\\*[\\s\\S]*?\\*\\/)/gm, `<span style=\"color: ${colors.comment}\">$1</span>`);\n    }\n    return highlighted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #d1d5db',\n      borderRadius: '8px',\n      overflow: 'hidden',\n      backgroundColor: '#ffffff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '12px 16px',\n        backgroundColor: '#1f2937',\n        color: '#9ca3af',\n        fontSize: '14px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '12px',\n            textTransform: 'uppercase',\n            fontWeight: '500'\n          },\n          children: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), title && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"| \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), showCopy && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCopy,\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px',\n          padding: '4px 8px',\n          border: '1px solid #4b5563',\n          borderRadius: '4px',\n          backgroundColor: 'transparent',\n          color: '#9ca3af',\n          cursor: 'pointer',\n          fontSize: '12px',\n          fontFamily: 'inherit'\n        },\n        children: [copied ? /*#__PURE__*/_jsxDEV(Check, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }, this), copied ? '복사됨' : '복사']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        padding: '16px',\n        margin: 0,\n        overflow: 'auto',\n        backgroundColor: '#111827',\n        color: '#f9fafb',\n        fontSize: '14px',\n        lineHeight: '1.5',\n        fontFamily: '\"Fira Code\", \"Monaco\", \"Cascadia Code\", \"Roboto Mono\", monospace'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        dangerouslySetInnerHTML: {\n          __html: highlightCode(code, language)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlock, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useState","Copy","Check","jsxDEV","_jsxDEV","CodeBlock","code","language","title","showCopy","_s","copied","setCopied","handleCopy","navigator","clipboard","writeText","setTimeout","err","console","error","highlightCode","lang","colors","keyword","string","comment","function","variable","highlighted","replace","style","border","borderRadius","overflow","backgroundColor","children","display","justifyContent","alignItems","padding","color","fontSize","gap","textTransform","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cursor","fontFamily","size","margin","lineHeight","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/CodeBlock.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Copy, Check } from 'lucide-react';\n\ninterface CodeBlockProps {\n  code: string;\n  language: string;\n  title?: string;\n  showCopy?: boolean;\n}\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({\n  code,\n  language,\n  title,\n  showCopy = true\n}) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy code:', err);\n    }\n  };\n\n  // Simple syntax highlighting function\n  const highlightCode = (code: string, lang: string) => {\n    if (!code) return code;\n    \n    // Define color styles for different elements\n    const colors = {\n      keyword: '#ff7b72',      // Red for keywords\n      string: '#a5d6ff',       // Blue for strings\n      comment: '#8b949e',      // Gray for comments\n      function: '#d2a8ff',     // Purple for functions\n      variable: '#ffa657'      // Orange for variables\n    };\n\n    let highlighted = code;\n\n    // Apply basic highlighting based on language\n    if (lang === 'javascript' || lang === 'java' || lang === 'kotlin' || lang === 'swift' || lang === 'objectivec') {\n      // Keywords\n      highlighted = highlighted.replace(\n        /\\b(import|export|let|const|var|function|class|if|else|for|while|return|try|catch|finally|new|this|public|private|protected|static|void|String|int|boolean|NSString|@interface|@implementation|@end)\\b/g,\n        `<span style=\"color: ${colors.keyword}\">$1</span>`\n      );\n      \n      // Strings\n      highlighted = highlighted.replace(\n        /([\"'`])((?:(?!\\1)[^\\\\]|\\\\.)*)(\\1)/g,\n        `<span style=\"color: ${colors.string}\">$1$2$3</span>`\n      );\n      \n      // Comments\n      highlighted = highlighted.replace(\n        /(\\/\\/.*$|\\/\\*[\\s\\S]*?\\*\\/)/gm,\n        `<span style=\"color: ${colors.comment}\">$1</span>`\n      );\n    }\n\n    return highlighted;\n  };\n\n  return (\n    <div style={{\n      border: '1px solid #d1d5db',\n      borderRadius: '8px',\n      overflow: 'hidden',\n      backgroundColor: '#ffffff'\n    }}>\n      {/* Header */}\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '12px 16px',\n        backgroundColor: '#1f2937',\n        color: '#9ca3af',\n        fontSize: '14px'\n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <span style={{ fontSize: '12px', textTransform: 'uppercase', fontWeight: '500' }}>\n            {language}\n          </span>\n          {title && <span>| {title}</span>}\n        </div>\n        {showCopy && (\n          <button\n            onClick={handleCopy}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px',\n              padding: '4px 8px',\n              border: '1px solid #4b5563',\n              borderRadius: '4px',\n              backgroundColor: 'transparent',\n              color: '#9ca3af',\n              cursor: 'pointer',\n              fontSize: '12px',\n              fontFamily: 'inherit'\n            }}\n          >\n            {copied ? <Check size={14} /> : <Copy size={14} />}\n            {copied ? '복사됨' : '복사'}\n          </button>\n        )}\n      </div>\n\n      {/* Code Content */}\n      <pre style={{\n        padding: '16px',\n        margin: 0,\n        overflow: 'auto',\n        backgroundColor: '#111827',\n        color: '#f9fafb',\n        fontSize: '14px',\n        lineHeight: '1.5',\n        fontFamily: '\"Fira Code\", \"Monaco\", \"Cascadia Code\", \"Roboto Mono\", monospace'\n      }}>\n        <code \n          dangerouslySetInnerHTML={{ \n            __html: highlightCode(code, language) \n          }} \n        />\n      </pre>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}