{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useTheme}from'../contexts/ThemeContext';import{useLanguage}from'../contexts/LanguageContext';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export const AdvancedIdleRPG=_ref=>{let{onAction,isSimulating,currentAction,userStats,setUserStats,currentUser}=_ref;const{colors}=useTheme();const{t}=useLanguage();// CSS 애니메이션 추가\nReact.useEffect(()=>{const style=document.createElement('style');style.textContent=`\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;document.head.appendChild(style);return()=>{document.head.removeChild(style);};},[]);const[character,setCharacter]=useState({id:'1',name:'용사',level:1,exp:0,maxExp:100,hp:100,maxHp:100,mp:50,maxMp:50,attack:20,defense:10,speed:15,gold:100,class:'전사',skills:[],equipment:{},stats:{strength:10,agility:8,intelligence:5,vitality:12,luck:7,availablePoints:0},prestige:0,rebirth:0,buffs:{attack:{amount:0,duration:0},defense:{amount:0,duration:0},speed:{amount:0,duration:0}}});const[currentTab,setCurrentTab]=useState('lobby');const[gameMode,setGameMode]=useState('lobby');const[isAutoFighting,setIsAutoFighting]=useState(false);const[currentMonster,setCurrentMonster]=useState(null);const[combatLog,setCombatLog]=useState([]);const[selectedDungeon,setSelectedDungeon]=useState(null);const[inventory,setInventory]=useState([]);const[availableDungeons,setAvailableDungeons]=useState([]);const[currentDungeon,setCurrentDungeon]=useState(null);const[inDungeon,setInDungeon]=useState(false);const[guild,setGuild]=useState(null);const[shop,setShop]=useState([]);const[achievements,setAchievements]=useState([]);const[monstersDefeated,setMonstersDefeated]=useState(0);const[totalGoldEarned,setTotalGoldEarned]=useState(0);const[showDungeonChoice,setShowDungeonChoice]=useState(false);const logRef=useRef(null);// 게임 초기화\nuseEffect(()=>{initializeGame();},[]);// 캐릭터 상태가 변경될 때마다 userStats 업데이트\nuseEffect(()=>{setUserStats({level:character.level,gold:character.gold,attack:character.attack,defense:character.defense,hp:character.hp,maxHp:character.maxHp,exp:character.exp,maxExp:character.maxExp,monsters_defeated:monstersDefeated,character_class:character.class,total_gold_earned:totalGoldEarned,inventory_items:inventory.map(item=>({id:item.id,name:item.name,type:item.type,rarity:item.rarity,quantity:item.quantity||1,stats:item.stats})),skills:character.skills.map(skill=>({id:skill.id,name:skill.name,level:skill.level,type:skill.type})),current_buffs:Object.entries(character.buffs).filter(_ref2=>{let[_,buff]=_ref2;return buff.duration>0;}).map(_ref3=>{let[type,buff]=_ref3;return{type,amount:buff.amount,duration:Math.ceil(buff.duration/1000)};})});},[character,inventory,monstersDefeated,totalGoldEarned,setUserStats]);const initializeGame=()=>{// 언어별 텍스트 정의\nconst translations={ko:{character:{name:'용사',class:'전사'},skills:{slash:{name:'강력한 베기',description:'강력한 일격을 가합니다.'},heal:{name:'치유',description:'HP를 회복합니다.'},critical:{name:'치명타 숙련',description:'치명타 확률을 증가시킵니다.'}},dungeons:{forest:{name:'어둠의 숲',description:'초보자를 위한 던전입니다.'},cave:{name:'고블린 동굴',description:'고블린들이 서식하는 위험한 동굴입니다.'},tower:{name:'마법사의 탑',description:'강력한 마법 몬스터들이 있는 탑입니다.'}},items:{sword1:'강철 검',armor1:'가죽 갑옷',helmet1:'철제 투구',health_potion:'체력 물약',mana_potion:'마나 물약',greater_health_potion:'고급 체력 물약',strength_potion:'힘의 물약',defense_potion:'방어의 물약'},monsters:{slime:'슬라임',goblin:'고블린',orc:'오크',troll:'트롤',dragon:'드래곤'},combat:{appeared:'이 나타났다!',attack:'의 공격!',damage:'데미지!',critical:'치명타!',levelUp:'🎉 레벨업! Lv.',defeated:'를 물리쳤다! EXP +',gold:', 골드 +',itemObtained:'✨ 을 획득했습니다!',dungeonCleared:'🎉  던전을 클리어했습니다!',nextFloor:'층으로 자동 진행합니다!',dungeonExited:'던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',hpMpRecovered:'체력과 마나가 완전히 회복되었습니다!',defeat:'전투에서 패배했습니다...'}},en:{character:{name:'Hero',class:'Warrior'},skills:{slash:{name:'Power Slash',description:'Delivers a powerful strike.'},heal:{name:'Heal',description:'Restores HP.'},critical:{name:'Critical Mastery',description:'Increases critical hit chance.'}},dungeons:{forest:{name:'Dark Forest',description:'A dungeon for beginners.'},cave:{name:'Goblin Cave',description:'A dangerous cave inhabited by goblins.'},tower:{name:'Mage Tower',description:'A tower with powerful magic monsters.'}},items:{sword1:'Steel Sword',armor1:'Leather Armor',helmet1:'Iron Helmet',health_potion:'Health Potion',mana_potion:'Mana Potion',greater_health_potion:'Greater Health Potion',strength_potion:'Strength Potion',defense_potion:'Defense Potion'},monsters:{slime:'Slime',goblin:'Goblin',orc:'Orc',troll:'Troll',dragon:'Dragon'},combat:{appeared:' appeared!',attack:\"'s attack!\",damage:' damage!',critical:' (Critical!)',levelUp:'🎉 Level up! Lv.',defeated:' defeated! EXP +',gold:', Gold +',itemObtained:'✨ obtained!',dungeonCleared:'🎉  dungeon cleared!',nextFloor:'Proceeding to floor  automatically!',dungeonExited:'Automatically exited dungeon. HP and MP fully restored!',hpMpRecovered:'HP and MP fully restored!',defeat:'Defeated in battle...'}},zh:{character:{name:'勇者',class:'战士'},skills:{slash:{name:'强力斩击',description:'发动强力一击。'},heal:{name:'治疗',description:'恢复生命值。'},critical:{name:'暴击精通',description:'增加暴击几率。'}},dungeons:{forest:{name:'黑暗森林',description:'适合新手的地下城。'},cave:{name:'哥布林洞穴',description:'哥布林栖息的危险洞穴。'},tower:{name:'法师塔',description:'有强力魔法怪物的塔。'}},items:{sword1:'钢铁剑',armor1:'皮甲',helmet1:'铁盔',health_potion:'生命药水',mana_potion:'魔法药水',greater_health_potion:'高级生命药水',strength_potion:'力量药水',defense_potion:'防御药水'},monsters:{slime:'史莱姆',goblin:'哥布林',orc:'兽人',troll:'巨魔',dragon:'龙'},combat:{appeared:'出现了！',attack:'的攻击！',damage:'伤害！',critical:'暴击！',levelUp:'🎉 升级！Lv.',defeated:'被击败！经验 +',gold:'，金币 +',itemObtained:'✨ 获得了！',dungeonCleared:'🎉 地下城通关！',nextFloor:'自动前往第 层！',dungeonExited:'自动离开地下城。生命值和魔法值完全恢复！',hpMpRecovered:'生命值和魔法值完全恢复！',defeat:'战斗失败...'}}};// 현재 언어 가져오기 (기본값: 한국어)\nconst currentLang=localStorage.getItem('language')||'ko';const texts=translations[currentLang]||translations.ko;// 초기 스킬 설정\nconst initialSkills=[{id:'slash',name:'강력한 베기',level:1,maxLevel:10,damage:30,manaCost:10,cooldown:3000,currentCooldown:0,type:'active',description:'강력한 일격을 가합니다.'},{id:'heal',name:'치유',level:1,maxLevel:10,damage:0,manaCost:15,cooldown:5000,currentCooldown:0,type:'active',description:'HP를 회복합니다.'},{id:'critical',name:'치명타 숙련',level:1,maxLevel:10,damage:0,manaCost:0,cooldown:0,currentCooldown:0,type:'passive',description:'치명타 확률을 증가시킵니다.'}];// 던전 초기화\nconst initialDungeons=[{id:'forest',name:'어둠의 숲',level:1,description:'초보자를 위한 던전입니다.',floors:10,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[10,25],expRange:[15,30],itemDropChance:0.1},requiredLevel:1,isUnlocked:true},{id:'cave',name:'고블린 동굴',level:5,description:'고블린들이 서식하는 위험한 동굴입니다.',floors:15,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[25,50],expRange:[40,75],itemDropChance:0.15},requiredLevel:5,isUnlocked:false},{id:'tower',name:'마법사의 탑',level:10,description:'강력한 마법 몬스터들이 있는 탑입니다.',floors:20,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[50,100],expRange:[80,150],itemDropChance:0.2},requiredLevel:10,isUnlocked:false}];// 상점 아이템 초기화\nconst shopItems=[{id:'sword1',name:'강철 검',type:'weapon',rarity:'common',level:1,stats:{attack:15},price:200,enhancement:0},{id:'armor1',name:'가죽 갑옷',type:'armor',rarity:'common',level:1,stats:{defense:10,hp:20},price:150,enhancement:0},{id:'helmet1',name:'철제 투구',type:'helmet',rarity:'common',level:1,stats:{defense:5,hp:15},price:100,enhancement:0},// 물약들\n{id:'health_potion',name:'체력 물약',type:'consumable',rarity:'common',level:1,stats:{},price:50,enhancement:0,consumableEffect:{healHp:50},quantity:1},{id:'mana_potion',name:'마나 물약',type:'consumable',rarity:'common',level:1,stats:{},price:40,enhancement:0,consumableEffect:{healMp:30},quantity:1},{id:'greater_health_potion',name:'고급 체력 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:120,enhancement:0,consumableEffect:{healHp:120},quantity:1},{id:'strength_potion',name:'힘의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:100,enhancement:0,consumableEffect:{buffType:'attack',buffAmount:10,buffDuration:30000},quantity:1},{id:'defense_potion',name:'방어의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:100,enhancement:0,consumableEffect:{buffType:'defense',buffAmount:8,buffDuration:30000},quantity:1}];setCharacter(prev=>({...prev,name:texts.character.name,class:texts.character.class,skills:initialSkills}));setAvailableDungeons(initialDungeons);setShop(shopItems);// Store texts globally for other functions to use\nwindow.gameTexts=texts;// 던전에 있지 않을 때만 일반 몬스터 생성\nif(!inDungeon){spawnMonster();}};// 몬스터 생성\nconst spawnMonster=()=>{// 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\nif(currentMonster||inDungeon){return;}const gameTexts=window.gameTexts||{monsters:{slime:'슬라임',goblin:'고블린',orc:'오크',troll:'트롤',dragon:'드래곤'},combat:{appeared:'이 나타났다!'}};const monsters=[{name:gameTexts.monsters.slime,baseHp:40,baseAttack:8,baseDefense:2,exp:15,gold:10},{name:gameTexts.monsters.goblin,baseHp:60,baseAttack:12,baseDefense:4,exp:25,gold:18},{name:gameTexts.monsters.orc,baseHp:100,baseAttack:18,baseDefense:8,exp:40,gold:30},{name:gameTexts.monsters.troll,baseHp:150,baseAttack:25,baseDefense:12,exp:60,gold:45},{name:gameTexts.monsters.dragon,baseHp:300,baseAttack:40,baseDefense:20,exp:120,gold:100}];const randomMonster=monsters[Math.floor(Math.random()*monsters.length)];const levelMultiplier=1+(character.level-1)*0.3;const monster={id:`monster_${Date.now()}`,name:randomMonster.name,level:Math.max(1,character.level+Math.floor(Math.random()*3-1)),hp:Math.floor(randomMonster.baseHp*levelMultiplier),maxHp:Math.floor(randomMonster.baseHp*levelMultiplier),attack:Math.floor(randomMonster.baseAttack*levelMultiplier),defense:Math.floor(randomMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor(randomMonster.exp*levelMultiplier),gold:Math.floor(randomMonster.gold*levelMultiplier),dropItems:generateDropItems(),isBoss:Math.random()<0.1// 10% 보스 확률\n};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=3;monster.maxHp*=3;monster.attack*=2;monster.defense*=2;monster.exp*=5;monster.gold*=3;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);};// 드롭 아이템 생성\nconst generateDropItems=()=>{const dropChance=Math.random();if(dropChance<0.1){// 10% 확률로 아이템 드롭\nconst rarities=['common','rare','epic','legendary','mythic'];const rarity=rarities[Math.floor(Math.random()*rarities.length)];const itemTypes=['weapon','armor','helmet','boots','ring','amulet'];const itemType=itemTypes[Math.floor(Math.random()*itemTypes.length)];return[{id:`drop_${Date.now()}`,name:generateItemName(rarity,itemType),type:itemType,rarity,level:character.level,stats:generateItemStats(rarity),price:calculateItemPrice(rarity,character.level),enhancement:0}];}return[];};const generateItemName=(rarity,itemType)=>{const prefixes={common:['낡은','일반적인','기본'],rare:['날카로운','튼튼한','마법의'],epic:['전설적인','고대의','신성한'],legendary:['전설의','영웅의','불멸의'],mythic:['신화의','창조의','절대의']};const itemNames={weapon:['검','도끼','창','활','지팡이'],armor:['갑옷','로브','사슬갑옷','가죽갑옷'],helmet:['투구','모자','관','헬름'],boots:['신발','부츠','장화','샌들'],ring:['반지','링','밴드'],amulet:['목걸이','부적','펜던트']};const prefix=prefixes[rarity][Math.floor(Math.random()*3)];const itemTypeNames=itemNames[itemType]||['아이템'];const item=itemTypeNames[Math.floor(Math.random()*itemTypeNames.length)];return`${prefix} ${item}`;};const generateItemStats=rarity=>{const multipliers={common:1,rare:1.5,epic:2.5,legendary:4,mythic:7};const base=multipliers[rarity];return{attack:Math.floor(Math.random()*20*base),defense:Math.floor(Math.random()*15*base),hp:Math.floor(Math.random()*50*base),mp:Math.floor(Math.random()*30*base),speed:Math.floor(Math.random()*10*base),critRate:Math.floor(Math.random()*10*base),critDamage:Math.floor(Math.random()*20*base)};};const calculateItemPrice=(rarity,level)=>{const basePrice={common:50,rare:150,epic:500,legendary:2000,mythic:10000};return Math.floor(basePrice[rarity]*(1+level*0.2));};// 전투 시스템\nconst attack=()=>{if(!currentMonster)return;const buffedAttack=character.attack+character.buffs.attack.amount;const damage=calculateDamage(buffedAttack,currentMonster.defense);const isCritical=Math.random()<0.1+character.stats.luck*0.01;const finalDamage=isCritical?Math.floor(damage*1.5):damage;const newMonsterHp=Math.max(0,currentMonster.hp-finalDamage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);const gameTexts=window.gameTexts||{combat:{attack:'의 공격!',damage:'데미지!',critical:'치명타!'}};addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical?` (${gameTexts.combat.critical})`:''} ${gameTexts.combat.damage}`);onAction('combat_attack',{user_id:currentUser.user_id,damage:finalDamage,is_critical:isCritical,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,character_attack:character.attack,monster_hp_remaining:newMonsterHp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});if(newMonsterHp<=0){defeatMonster();}else{// 몬스터 반격\nsetTimeout(()=>monsterAttack(),1000);}};const monsterAttack=()=>{if(!currentMonster||currentMonster.hp<=0)return;const buffedDefense=character.defense+character.buffs.defense.amount;const damage=calculateDamage(currentMonster.attack,buffedDefense);const newHp=Math.max(0,character.hp-damage);setCharacter(prev=>({...prev,hp:newHp}));const gameTexts=window.gameTexts||{combat:{attack:'의 공격!',damage:'데미지!'}};addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);if(newHp<=0){const gameTexts=window.gameTexts||{combat:{defeat:'전투에서 패배했습니다...'}};addToCombatLog(gameTexts.combat.defeat);setIsAutoFighting(false);// 전투 실패 이벤트 로깅\nonAction('combat_defeat',{monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,dungeon_id:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.id)||'field',dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||'field',damage_taken:currentMonster.attack,character_defense:character.defense});// 던전에서 나가고 체력/마나 완전 회복\nsetTimeout(()=>{setCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));if(inDungeon&&currentDungeon){// 던전에서 나가기 (죽음으로 인한 자동 퇴장)\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'death',time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');}else{// 일반 필드에서는 새 몬스터 스폰\naddToCombatLog('체력과 마나가 완전히 회복되었습니다!');spawnMonster();}},2000);}};const calculateDamage=(attack,defense)=>{const baseDamage=Math.max(1,attack-Math.floor(defense*0.5));return Math.floor(baseDamage*(0.8+Math.random()*0.4));};const defeatMonster=()=>{if(!currentMonster)return;const expGained=currentMonster.exp;const goldGained=currentMonster.gold;setCharacter(prev=>{const newExp=prev.exp+expGained;const newGold=prev.gold+goldGained;let newLevel=prev.level;let newMaxExp=prev.maxExp;let newHp=prev.hp;let newMaxHp=prev.maxHp;let availablePoints=prev.stats.availablePoints;// 레벨업 체크\nif(newExp>=prev.maxExp){newLevel+=1;newMaxExp=Math.floor(prev.maxExp*1.5);newMaxHp+=20;newHp=newMaxHp;// 레벨업 시 체력 완전 회복\navailablePoints+=5;addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);onAction('level_up',{user_id:currentUser.user_id,new_level:newLevel,character_class:prev.class,stat_points_gained:5});// 던전 해금 체크\nsetAvailableDungeons(prevDungeons=>prevDungeons.map(dungeon=>({...dungeon,isUnlocked:dungeon.isUnlocked||newLevel>=dungeon.requiredLevel})));}return{...prev,exp:newExp>=prev.maxExp?newExp-prev.maxExp:newExp,gold:newGold,level:newLevel,maxExp:newMaxExp,hp:newHp,maxHp:newMaxHp,stats:{...prev.stats,availablePoints}};});// 아이템 드롭 처리\nif(currentMonster.dropItems.length>0){setInventory(prev=>[...prev,...currentMonster.dropItems]);addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);}addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);// 추적 카운터 업데이트\nsetMonstersDefeated(prev=>prev+1);setTotalGoldEarned(prev=>prev+goldGained);onAction('monster_defeated',{user_id:currentUser.user_id,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,exp_gained:expGained,gold_gained:goldGained,items_dropped:currentMonster.dropItems.length,character_attack:character.attack,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});// 현재 몬스터 제거\nsetCurrentMonster(null);// 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\nif(inDungeon&&currentDungeon){// 현재 층을 클리어한 것으로 마킹\nconst updatedDungeon={...currentDungeon,clearedFloors:new Set([...Array.from(currentDungeon.clearedFloors),currentDungeon.currentFloor])};setCurrentDungeon(updatedDungeon);// 던전 리스트에서도 업데이트\nsetAvailableDungeons(prev=>prev.map(d=>d.id===updatedDungeon.id?updatedDungeon:d));// 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\naddToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},2000);}else{// 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\nif(!inDungeon){setTimeout(()=>{spawnMonster();},2000);}}};// 다음 층으로 진행\nconst proceedToNextFloor=()=>{if(!currentDungeon)return;const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor+1};setCurrentDungeon(updatedDungeon);setShowDungeonChoice(false);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);// 강제 스폰\naddToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);},500);};// 던전 나가기\nconst exitDungeonAfterVictory=()=>{if(!currentDungeon)return;// 던전 나가기 이벤트 로깅\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'victory_choice',time_spent:new Date().getTime()});// 던전 리셋 (현재 층을 1층으로 되돌림)\nconst resetDungeon={...currentDungeon,currentFloor:1};setAvailableDungeons(prev=>prev.map(d=>d.id===resetDungeon.id?resetDungeon:d));setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');setShowDungeonChoice(false);// 체력과 마나 완전 회복\nsetCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');// 새로운 일반 몬스터 생성\nsetTimeout(()=>{spawnMonster();},1000);};// 자동 전투\nuseEffect(()=>{if(isAutoFighting&&currentMonster&&currentMonster.hp>0&&character.hp>0){const autoAttackTimer=setTimeout(()=>{attack();},2000);return()=>clearTimeout(autoAttackTimer);}},[isAutoFighting,currentMonster,character.hp]);// 스킬 쿨다운 및 MP 회복\nuseEffect(()=>{const interval=setInterval(()=>{setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+1),skills:prev.skills.map(skill=>({...skill,currentCooldown:Math.max(0,skill.currentCooldown-100)})),buffs:{attack:{amount:prev.buffs.attack.duration>0?prev.buffs.attack.amount:0,duration:Math.max(0,prev.buffs.attack.duration-100)},defense:{amount:prev.buffs.defense.duration>0?prev.buffs.defense.amount:0,duration:Math.max(0,prev.buffs.defense.duration-100)},speed:{amount:prev.buffs.speed.duration>0?prev.buffs.speed.amount:0,duration:Math.max(0,prev.buffs.speed.duration-100)}}}));},100);return()=>clearInterval(interval);},[]);const addToCombatLog=message=>{setCombatLog(prev=>{const newLog=[...prev,message];if(newLog.length>50)newLog.shift();return newLog;});// Auto-scroll to bottom immediately and with backup timing\nif(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}// Additional scroll with slight delay to ensure content is rendered\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},10);// Final backup scroll\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},100);};// 스탯 분배\nconst allocateStatPoint=stat=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[stat]:prev.stats[stat]+1,availablePoints:prev.stats.availablePoints-1},// 스탯에 따른 능력치 업데이트\nattack:stat==='strength'?prev.attack+2:prev.attack,defense:stat==='vitality'?prev.defense+1:prev.defense,maxHp:stat==='vitality'?prev.maxHp+10:prev.maxHp,maxMp:stat==='intelligence'?prev.maxMp+5:prev.maxMp,speed:stat==='agility'?prev.speed+1:prev.speed}));};// 아이템 장착\nconst equipItem=item=>{// 소비 아이템은 장착할 수 없음\nif(item.type==='consumable'){return;}setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[item.type]=item;// 장착한 아이템의 스탯 적용\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(item.stats.attack)newAttack+=item.stats.attack;if(item.stats.defense)newDefense+=item.stats.defense;if(item.stats.hp)newMaxHp+=item.stats.hp;if(item.stats.mp)newMaxMp+=item.stats.mp;if(item.stats.speed)newSpeed+=item.stats.speed;return{...prev,equipment:newEquipment,attack:newAttack,defense:newDefense,maxHp:newMaxHp,maxMp:newMaxMp,speed:newSpeed};});// 인벤토리에서 아이템 제거\nsetInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));addToCombatLog(`${item.name}을 장착했습니다!`);};// 장비 해제\nconst unequipItem=slot=>{const equippedItem=character.equipment[slot];if(!equippedItem)return;setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[slot]=undefined;// 장착 해제한 아이템의 스탯 제거\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(equippedItem.stats.attack)newAttack-=equippedItem.stats.attack;if(equippedItem.stats.defense)newDefense-=equippedItem.stats.defense;if(equippedItem.stats.hp)newMaxHp-=equippedItem.stats.hp;if(equippedItem.stats.mp)newMaxMp-=equippedItem.stats.mp;if(equippedItem.stats.speed)newSpeed-=equippedItem.stats.speed;// HP가 maxHp를 초과하지 않도록 조정\nconst adjustedHp=Math.min(prev.hp,newMaxHp);const adjustedMp=Math.min(prev.mp,newMaxMp);return{...prev,equipment:newEquipment,attack:Math.max(1,newAttack),// 최소 공격력 1\ndefense:Math.max(0,newDefense),maxHp:Math.max(100,newMaxHp),// 최소 체력 100\nmaxMp:Math.max(50,newMaxMp),// 최소 마나 50\nspeed:Math.max(1,newSpeed),// 최소 속도 1\nhp:adjustedHp,mp:adjustedMp};});// 인벤토리에 아이템 추가\nsetInventory(prev=>[...prev,equippedItem]);addToCombatLog(`${equippedItem.name}을 해제했습니다!`);};// 아이템 판매\nconst sellItem=item=>{const sellPrice=Math.floor(item.price*0.7);setCharacter(prev=>({...prev,gold:prev.gold+sellPrice}));setInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);};// 아이템 구매\nconst buyItem=item=>{if(character.gold<item.price)return;setCharacter(prev=>({...prev,gold:prev.gold-item.price}));setInventory(prev=>[...prev,{...item,id:`${item.id}_${Date.now()}`}]);addToCombatLog(`${item.name}을 구매했습니다!`);};const getRarityColor=rarity=>{const colors={common:'#9ca3af',rare:'#3b82f6',epic:'#8b5cf6',legendary:'#f59e0b',mythic:'#ef4444'};return colors[rarity]||'#9ca3af';};// 던전 입장 함수\nconst enterDungeon=dungeon=>{if(character.level<dungeon.requiredLevel){addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);return;}setCurrentDungeon(dungeon);setInDungeon(true);setGameMode('dungeon');setCurrentTab('dungeon');spawnDungeonMonster(dungeon);// 이벤트 로깅\nonAction('dungeon_entered',{dungeon_id:dungeon.id,dungeon_name:dungeon.name,character_level:character.level,floor:dungeon.currentFloor,character_attack:character.attack,character_defense:character.defense,character_hp:character.hp,character_mp:character.mp,entry_time:new Date().getTime()});};// 던전 몬스터 스폰\nconst spawnDungeonMonster=function(dungeon){let forceSpawn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;// 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\nif(currentMonster&&!forceSpawn)return;// 강제 생성인 경우 기존 몬스터를 먼저 제거\nif(forceSpawn&&currentMonster){setCurrentMonster(null);}// 던전별 고유 몬스터 타입 정의\nconst getDungeonMonsters=dungeonId=>{switch(dungeonId){case'forest':// 어둠의 숲\nreturn[{name:'늑대',baseHp:40,baseAttack:10,baseDefense:3},{name:'곰',baseHp:80,baseAttack:16,baseDefense:6},{name:'거대 거미',baseHp:120,baseAttack:22,baseDefense:10},{name:'숲의 수호자',baseHp:200,baseAttack:35,baseDefense:18},{name:'고대 엔트',baseHp:350,baseAttack:45,baseDefense:25}];case'cave':// 고블린 동굴\nreturn[{name:'고블린 전사',baseHp:60,baseAttack:14,baseDefense:5},{name:'고블린 궁수',baseHp:45,baseAttack:18,baseDefense:3},{name:'고블린 마법사',baseHp:50,baseAttack:20,baseDefense:4},{name:'고블린 우두머리',baseHp:180,baseAttack:30,baseDefense:15},{name:'고블린 왕',baseHp:400,baseAttack:50,baseDefense:28}];case'tower':// 마법사의 탑\nreturn[{name:'마법 골렘',baseHp:100,baseAttack:20,baseDefense:12},{name:'스켈레톤 메이지',baseHp:70,baseAttack:25,baseDefense:8},{name:'플레임 엘리멘탈',baseHp:110,baseAttack:28,baseDefense:10},{name:'리치',baseHp:250,baseAttack:40,baseDefense:20},{name:'고대 마법사',baseHp:500,baseAttack:60,baseDefense:35}];default:return[{name:'슬라임',baseHp:30,baseAttack:8,baseDefense:2},{name:'고블린',baseHp:50,baseAttack:12,baseDefense:4},{name:'오크',baseHp:100,baseAttack:18,baseDefense:8},{name:'트롤',baseHp:150,baseAttack:25,baseDefense:12},{name:'드래곤',baseHp:300,baseAttack:40,baseDefense:20}];}};const baseMonsters=getDungeonMonsters(dungeon.id);// 층수에 따른 점진적 몬스터 선택 로직\nconst floorBasedMonsterIndex=()=>{const currentFloor=dungeon.currentFloor;if(currentFloor<=3)return 0;// 첫 번째 몬스터 (1~3층)\nif(currentFloor<=7)return 1;// 두 번째 몬스터 (4~7층)  \nif(currentFloor<=12)return 2;// 세 번째 몬스터 (8~12층)\nif(currentFloor<=18)return 3;// 네 번째 몬스터 (13~18층)\nreturn 4;// 다섯 번째 몬스터 (19층 이상)\n};// 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\nconst baseIndex=floorBasedMonsterIndex();const randomVariation=Math.random()<0.3&&baseIndex>0?-1:0;// 30% 확률로 한 단계 낮은 몬스터\nconst selectedIndex=Math.max(0,baseIndex+randomVariation);const selectedMonster=baseMonsters[selectedIndex];const levelMultiplier=1+(dungeon.level+dungeon.currentFloor-1)*0.2;const monster={id:`dungeon_${dungeon.id}_${Date.now()}`,name:selectedMonster.name,level:dungeon.level+dungeon.currentFloor,hp:Math.floor(selectedMonster.baseHp*levelMultiplier),maxHp:Math.floor(selectedMonster.baseHp*levelMultiplier),attack:Math.floor(selectedMonster.baseAttack*levelMultiplier),defense:Math.floor(selectedMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor((20+dungeon.level*8+dungeon.currentFloor*3)*levelMultiplier),gold:Math.floor((10+dungeon.level*3)*levelMultiplier),dropItems:generateDropItems(),isBoss:dungeon.currentFloor%5===0};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=2;monster.maxHp*=2;monster.attack*=1.5;monster.exp*=3;monster.gold*=2;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);};// 물약 사용 함수\nconst consumeItem=item=>{if(item.type!=='consumable'||!item.consumableEffect)return;const effect=item.consumableEffect;// 체력 회복\nif(effect.healHp){setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+effect.healHp)}));addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);}// 마나 회복\nif(effect.healMp){setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+effect.healMp)}));addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);}// 버프 효과\nif(effect.buffType&&effect.buffAmount&&effect.buffDuration){setCharacter(prev=>({...prev,buffs:{...prev.buffs,[effect.buffType]:{amount:effect.buffAmount,duration:effect.buffDuration}}}));addToCombatLog(`${item.name}을 사용하여 ${effect.buffType==='attack'?'공격력':effect.buffType==='defense'?'방어력':'속도'} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);}// 인벤토리에서 물약 제거 또는 수량 감소\nsetInventory(prev=>{const itemIndex=prev.findIndex(invItem=>invItem.id===item.id);if(itemIndex!==-1){const newInventory=[...prev];const currentItem=newInventory[itemIndex];if(currentItem.quantity&&currentItem.quantity>1){newInventory[itemIndex]={...currentItem,quantity:currentItem.quantity-1};}else{newInventory.splice(itemIndex,1);}return newInventory;}return prev;});// 이벤트 로깅\nonAction('consumable_used',{item_name:item.name,item_type:item.type,character_level:character.level,heal_hp:effect.healHp||0,heal_mp:effect.healMp||0,buff_type:effect.buffType||'none',buff_amount:effect.buffAmount||0,character_hp_before:character.hp,character_mp_before:character.mp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스킬 사용 함수\nconst castSkill=skill=>{if(skill.currentCooldown>0||character.mp<skill.manaCost)return;// 스킬 사용 로직\nif(skill.id==='heal'){const healAmount=30+skill.level*5;setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount),mp:prev.mp-skill.manaCost}));addToCombatLog(`${healAmount}만큼 회복했다!`);}else{// 공격 스킬\nif(currentMonster){const damage=calculateDamage(skill.damage+skill.level*3,currentMonster.defense);const newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name}로 ${damage} 데미지!`);// 몬스터가 죽지 않았으면 반격\nif(newMonsterHp>0){setTimeout(()=>{monsterAttack();},1000);}else{// 몬스터가 죽었으면 처치 처리\nsetTimeout(()=>{defeatMonster();},1500);}}}// 쿨다운 적용\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:s.cooldown}:s)}));// 이벤트 로깅\nonAction('skill_used',{skill_name:skill.name,skill_level:skill.level,mana_cost:skill.manaCost,character_level:character.level,character_mp_before:character.mp,character_mp_after:character.mp-skill.manaCost,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스탯 포인트 할당\nconst allocateStat=statName=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[statName]:prev.stats[statName]+1,availablePoints:prev.stats.availablePoints-1}}));// 스탯에 따른 능력치 업데이트\nlet hpBonus=0,mpBonus=0,attackBonus=0,defenseBonus=0;if(statName==='vitality')hpBonus=5;if(statName==='intelligence')mpBonus=3;if(statName==='strength')attackBonus=2;if(statName==='agility'){attackBonus=1;defenseBonus=1;}setCharacter(prev=>({...prev,maxHp:prev.maxHp+hpBonus,hp:prev.hp+hpBonus,maxMp:prev.maxMp+mpBonus,mp:prev.mp+mpBonus,attack:prev.attack+attackBonus,defense:prev.defense+defenseBonus}));// 이벤트 로깅\nonAction('stat_allocated',{stat_name:statName,stat_value:character.stats[statName]+1,character_level:character.level,available_points:character.stats.availablePoints-1});};// 공통 캐릭터 정보 헤더 컴포넌트\nconst renderCharacterHeader=()=>{const expPercentage=character.exp/character.maxExp*100;return/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',borderRadius:'15px',padding:'15px 20px',marginBottom:'20px',color:'white'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(120px, 1fr))',gap:'15px',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'20px',fontWeight:'bold',color:'#ffffff'},children:[\"Lv.\",character.level]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uB808\\uBCA8\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'20px',fontWeight:'bold',color:'#fbbf24'},children:[character.gold,\"G\"]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uACE8\\uB4DC\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#f87171'},children:character.attack}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uACF5\\uACA9\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#60a5fa'},children:character.defense}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uBC29\\uC5B4\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#34d399'},children:[character.hp,\"/\",character.maxHp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uCCB4\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#a78bfa'},children:[character.mp,\"/\",character.maxMp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uB9C8\\uB098\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'14px',color:'#e0e7ff'},children:\"\\uACBD\\uD5D8\\uCE58\"}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'14px',color:'#ffffff',fontWeight:'bold'},children:[character.exp,\" / \",character.maxExp,\" (\",Math.floor(expPercentage),\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'8px',backgroundColor:'rgba(255, 255, 255, 0.2)',borderRadius:'10px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${expPercentage}%`,height:'100%',background:'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',borderRadius:'10px',transition:'width 0.3s ease'}})})]})]});};// 로비 렌더링\nconst renderLobbyTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #059669 0%, #10b981 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'24px'},children:\"\\uD83C\\uDFE0 \\uBAA8\\uD5D8\\uAC00 \\uB85C\\uBE44\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,opacity:0.9},children:\"\\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uBAA8\\uD5D8\\uC744 \\uC2DC\\uC791\\uD558\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',marginBottom:'15px',fontSize:'20px'},children:\"\\uD83C\\uDFF0 \\uB358\\uC804 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gap:'15px'},children:availableDungeons.map(dungeon=>/*#__PURE__*/_jsx(\"div\",{style:{background:dungeon.isUnlocked?'#374151':'#1f2937',borderRadius:'10px',padding:'20px',border:dungeon.isUnlocked?'2px solid #10b981':'2px solid #4b5563',opacity:dungeon.isUnlocked?1:0.6},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'white',margin:'0 0 5px 0',fontSize:'18px'},children:[dungeon.name,\" (Lv.\",dungeon.level,\")\"]}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#9ca3af',margin:'0 0 10px 0',fontSize:'14px'},children:dungeon.description}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#6b7280'},children:[\"\\uD544\\uC694 \\uB808\\uBCA8: \",dungeon.requiredLevel,\" | \\uCE35\\uC218: \",dungeon.floors,\"\\uCE35 | \\uD604\\uC7AC \\uCE35: \",dungeon.currentFloor,\"\\uCE35\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>enterDungeon(dungeon),disabled:!dungeon.isUnlocked||character.level<dungeon.requiredLevel,style:{background:dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?'linear-gradient(135deg, #10b981 0%, #059669 100%)':'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'12px 20px',fontSize:'14px',fontWeight:'bold',cursor:dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?'pointer':'not-allowed',transition:'all 0.3s ease'},children:dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?'입장':'잠금'})]})},dungeon.id))})]})]});// 던전 탭 렌더링\nconst renderDungeonTab=()=>{if(!inDungeon||!currentDungeon){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'100px 20px',textAlign:'center',background:'#1f2937',color:'#9ca3af'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uB358\\uC804\\uC5D0 \\uC785\\uC7A5\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uBE44\\uC5D0\\uC11C \\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{style:{margin:'0 0 5px 0',fontSize:'24px'},children:[\"\\uD83C\\uDFF0 \",currentDungeon.name]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:0,opacity:0.9,fontSize:'14px'},children:[currentDungeon.currentFloor,\"\\uCE35 / \",currentDungeon.floors,\"\\uCE35\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 던전 나가기 이벤트 로깅\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'manual',time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');},style:{background:'#374151',color:'white',border:'none',borderRadius:'8px',padding:'10px 15px',cursor:'pointer'},children:\"\\uB358\\uC804 \\uB098\\uAC00\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',alignItems:'center',justifyContent:'center',padding:'15px',background:'rgba(0, 0, 0, 0.2)',borderRadius:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(currentDungeon.currentFloor>1){const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor-1};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}},disabled:currentDungeon.currentFloor<=1,style:{background:currentDungeon.currentFloor<=1?'#6b7280':'#3b82f6',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',cursor:currentDungeon.currentFloor<=1?'not-allowed':'pointer',fontSize:'14px'},children:\"\\u2B06\\uFE0F \\uC774\\uC804 \\uCE35\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",max:currentDungeon.floors,value:currentDungeon.currentFloor,placeholder:\"\\uCE35\",onChange:e=>{const targetFloor=parseInt(e.target.value);if(targetFloor>=1&&targetFloor<=currentDungeon.floors){// Check if all previous floors are cleared\nlet canMoveTo=true;for(let i=1;i<targetFloor;i++){if(!currentDungeon.clearedFloors.has(i)){canMoveTo=false;addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);break;}}if(canMoveTo){const updatedDungeon={...currentDungeon,currentFloor:targetFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${targetFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}}},style:{background:'rgba(255, 255, 255, 0.1)',color:'white',border:'1px solid rgba(255, 255, 255, 0.3)',borderRadius:'6px',padding:'8px 12px',fontSize:'16px',fontWeight:'bold',textAlign:'center',width:'80px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const nextFloor=currentDungeon.currentFloor+1;const currentFloorCleared=currentDungeon.clearedFloors.has(currentDungeon.currentFloor);if(currentDungeon.currentFloor<currentDungeon.floors&&currentFloorCleared){const updatedDungeon={...currentDungeon,currentFloor:nextFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}else if(!currentFloorCleared){addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);}},disabled:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor),style:{background:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?'#6b7280':'#10b981',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',cursor:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?'not-allowed':'pointer',fontSize:'14px'},children:\"\\u2B07\\uFE0F \\uB2E4\\uC74C \\uCE35\"})]})]}),showDungeonChoice&&/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'18px',fontWeight:'bold',marginBottom:'10px'},children:\"\\uD83C\\uDFC3 \\uB2E4\\uC74C \\uCE35\\uC73C\\uB85C \\uC774\\uB3D9 \\uC911...\"}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255, 255, 255, 0.2)',borderRadius:'10px',height:'8px',overflow:'hidden',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #10b981, #059669)',height:'100%',width:'100%',borderRadius:'10px',animation:'progress 3s linear'}})}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',opacity:0.9},children:\"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"})]}),currentMonster&&/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'80px',height:'80px',background:'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',borderRadius:'50%',margin:'0 auto 10px',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'30px'},children:\"\\u2694\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',marginBottom:'10px'},children:[character.name,\" Lv.\",character.level]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'5px',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',height:'8px',borderRadius:'4px',width:`${character.hp/character.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',fontSize:'12px',marginTop:'5px'},children:[\"HP: \",character.hp,\"/\",character.maxHp]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'80px',height:'80px',background:'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',borderRadius:'50%',margin:'0 auto 10px',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'30px'},children:\"\\uD83D\\uDC79\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',marginBottom:'10px'},children:[currentMonster.name,\" Lv.\",currentMonster.level,currentMonster.isBoss&&/*#__PURE__*/_jsx(\"span\",{style:{color:'#fbbf24'},children:\" \\uD83D\\uDC51\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'5px',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',height:'8px',borderRadius:'4px',width:`${currentMonster.hp/currentMonster.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',fontSize:'12px',marginTop:'5px'},children:[\"HP: \",currentMonster.hp,\"/\",currentMonster.maxHp]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',justifyContent:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:attack,disabled:character.hp<=0,style:{background:'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px 24px',fontSize:'16px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.5},children:\"\\u2694\\uFE0F \\uACF5\\uACA9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAutoFighting(!isAutoFighting),style:{background:isAutoFighting?'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)':'linear-gradient(135deg, #10b981 0%, #059669 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px 24px',fontSize:'16px',fontWeight:'bold',cursor:'pointer'},children:isAutoFighting?'⏸️ 자동 중지':'▶️ 자동 전투'})]}),character.skills.filter(skill=>skill.type==='active').length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'white',marginBottom:'10px',textAlign:'center',fontSize:'16px'},children:[\"\\u2728 \\uC2A4\\uD0AC \\uC0AC\\uC6A9 (MP: \",character.mp,\"/\",character.maxMp,\")\"]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'8px',justifyContent:'center',flexWrap:'wrap'},children:character.skills.filter(skill=>skill.type==='active').map(skill=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>castSkill(skill),disabled:character.hp<=0||skill.currentCooldown>0||character.mp<skill.manaCost,style:{background:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)':'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'10px 16px',fontSize:'14px',fontWeight:'bold',cursor:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?'pointer':'not-allowed',opacity:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?1:0.6,position:'relative'},title:`${skill.description}\\n대미지: ${skill.damage+skill.level*3} | 마나: ${skill.manaCost}`,children:[/*#__PURE__*/_jsx(\"div\",{children:skill.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'10px',opacity:0.8},children:[\"MP: \",skill.manaCost,skill.currentCooldown>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" | \",(skill.currentCooldown/1000).toFixed(1),\"s\"]})]})]},skill.id))})]}),inventory.filter(item=>item.type==='consumable').length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'white',marginBottom:'10px',textAlign:'center',fontSize:'16px'},children:\"\\uD83E\\uDDEA \\uBB3C\\uC57D \\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'8px',justifyContent:'center',flexWrap:'wrap'},children:inventory.filter(item=>item.type==='consumable').map(item=>{var _item$consumableEffec,_item$consumableEffec2,_item$consumableEffec3,_item$consumableEffec4,_item$consumableEffec5;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>consumeItem(item),disabled:character.hp<=0,style:{background:character.hp>0?`linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`:'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'8px 12px',fontSize:'12px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.6,position:'relative'},title:`${item.name}\\n${(_item$consumableEffec=item.consumableEffect)!==null&&_item$consumableEffec!==void 0&&_item$consumableEffec.healHp?`HP +${item.consumableEffect.healHp}`:''}${(_item$consumableEffec2=item.consumableEffect)!==null&&_item$consumableEffec2!==void 0&&_item$consumableEffec2.healMp?`MP +${item.consumableEffect.healMp}`:''}${(_item$consumableEffec3=item.consumableEffect)!==null&&_item$consumableEffec3!==void 0&&_item$consumableEffec3.buffType?`${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}`:''}`,children:[/*#__PURE__*/_jsx(\"div\",{children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'10px',opacity:0.8},children:[item.quantity&&item.quantity>1?`x${item.quantity}`:'',((_item$consumableEffec4=item.consumableEffect)===null||_item$consumableEffec4===void 0?void 0:_item$consumableEffec4.healHp)&&` HP+${item.consumableEffect.healHp}`,((_item$consumableEffec5=item.consumableEffect)===null||_item$consumableEffec5===void 0?void 0:_item$consumableEffec5.healMp)&&` MP+${item.consumableEffect.healMp}`]})]},item.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'15px',height:'200px',overflowY:'auto',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:'#9ca3af',marginBottom:'10px',fontWeight:'bold'},children:\"\\uC804\\uD22C \\uB85C\\uADF8:\"}),combatLog.slice(-10).map((log,index)=>/*#__PURE__*/_jsx(\"div\",{style:{color:'#e5e7eb',marginBottom:'5px',lineHeight:'1.4'},children:log},index))]})]})]});};// 스킬 트리 렌더링\nconst renderSkillsTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'24px'},children:\"\\u2728 \\uC2A4\\uD0AC \\uD2B8\\uB9AC\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,opacity:0.9},children:\"\\uC2A4\\uD0AC\\uC744 \\uC2B5\\uB4DD\\uD558\\uACE0 \\uB808\\uBCA8\\uC5C5\\uD558\\uC5EC \\uB354\\uC6B1 \\uAC15\\uD574\\uC9C0\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',marginBottom:'15px',fontSize:'18px'},children:\"\\uBCF4\\uC720 \\uC2A4\\uD0AC\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gap:'15px'},children:character.skills.map(skill=>/*#__PURE__*/_jsx(\"div\",{style:{background:'#374151',borderRadius:'10px',padding:'20px',border:'2px solid #6366f1'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'white',margin:'0 0 5px 0',fontSize:'16px'},children:[skill.name,\" Lv.\",skill.level,\"/\",skill.maxLevel]}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#9ca3af',margin:'0 0 10px 0',fontSize:'14px'},children:skill.description}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#6b7280'},children:skill.type==='active'?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uB300\\uBBF8\\uC9C0: \",skill.damage,\" | \\uB9C8\\uB098: \",skill.manaCost,\" | \\uCFE8\\uD0C0\\uC784: \",skill.cooldown/1000,\"\\uCD08\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD328\\uC2DC\\uBE0C \\uC2A4\\uD0AC\"})}),skill.currentCooldown>0&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'#fbbf24',fontSize:'12px',marginTop:'5px'},children:[\"\\uCFE8\\uD0C0\\uC784: \",(skill.currentCooldown/1000).toFixed(1),\"\\uCD08\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'10px'},children:skill.level<skill.maxLevel&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const cost=skill.level*100;if(character.gold>=cost){setCharacter(prev=>({...prev,gold:prev.gold-cost,skills:prev.skills.map(s=>s.id===skill.id?{...s,level:s.level+1}:s)}));// 이벤트 로깅\nonAction('skill_upgraded',{skill_name:skill.name,old_level:skill.level,new_level:skill.level+1,gold_cost:cost,character_level:character.level,character_gold_before:character.gold,character_gold_after:character.gold-cost});addToCombatLog(`${skill.name}을(를) 레벨업했다! (Lv.${skill.level+1})`);}},disabled:character.gold<skill.level*100,style:{background:character.gold>=skill.level*100?'linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)':'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'8px 12px',fontSize:'12px',cursor:character.gold>=skill.level*100?'pointer':'not-allowed'},children:[\"\\uC5C5\\uADF8\\uB808\\uC774\\uB4DC (\",skill.level*100,\"G)\"]})})]})},skill.id))})]})]});const renderCombatTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 5px 0',fontSize:'24px'},children:character.name}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0',opacity:0.9},children:[\"Lv.\",character.level,\" \",character.class]})]}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'right'},children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'20px',fontWeight:'bold'},children:[\"\\uD83D\\uDCB0 \",character.gold.toLocaleString()]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(2, 1fr)',gap:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"HP\"}),/*#__PURE__*/_jsxs(\"span\",{children:[character.hp,\"/\",character.maxHp]})]}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255,255,255,0.2)',borderRadius:'10px',height:'8px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'#ef4444',height:'100%',width:`${character.hp/character.maxHp*100}%`,transition:'width 0.3s ease'}})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"MP\"}),/*#__PURE__*/_jsxs(\"span\",{children:[character.mp,\"/\",character.maxMp]})]}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255,255,255,0.2)',borderRadius:'10px',height:'8px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'#3b82f6',height:'100%',width:`${character.mp/character.maxMp*100}%`,transition:'width 0.3s ease'}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"EXP\"}),/*#__PURE__*/_jsxs(\"span\",{children:[character.exp,\"/\",character.maxExp]})]}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255,255,255,0.2)',borderRadius:'10px',height:'8px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'#10b981',height:'100%',width:`${character.exp/character.maxExp*100}%`,transition:'width 0.3s ease'}})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'20px',fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u2694\\uFE0F \",character.attack]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDEE1\\uFE0F \",character.defense]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCA8 \",character.speed]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px',textAlign:'center',minHeight:'200px',display:'flex',flexDirection:'column',justifyContent:'center'},children:currentMonster?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'10px',filter:currentMonster.isBoss?'drop-shadow(0 0 10px #fbbf24)':'none'},children:currentMonster.isBoss?'👑':'👹'}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:currentMonster.isBoss?'#fbbf24':'white',margin:'0 0 10px 0'},children:[currentMonster.name,\" Lv.\",currentMonster.level]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#9ca3af',marginBottom:'15px'},children:[\"HP: \",currentMonster.hp,\"/\",currentMonster.maxHp]}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(0,0,0,0.3)',borderRadius:'10px',height:'10px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'#ef4444',height:'100%',width:`${currentMonster.hp/currentMonster.maxHp*100}%`,transition:'width 0.3s ease'}})})]}):/*#__PURE__*/_jsx(\"div\",{style:{color:'#9ca3af'},children:\"\\uBAAC\\uC2A4\\uD130\\uB97C \\uCC3E\\uB294 \\uC911...\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC561\\uC158\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:attack,disabled:!currentMonster||character.hp<=0,style:{background:'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px',fontSize:'16px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.5},children:\"\\u2694\\uFE0F \\uACF5\\uACA9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAutoFighting(!isAutoFighting),disabled:character.hp<=0,style:{background:isAutoFighting?'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)':'linear-gradient(135deg, #10b981 0%, #059669 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px',fontSize:'16px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.5},children:isAutoFighting?'⏹️ 자동 중지':'▶️ 자동 전투'}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'white',margin:'0 0 10px 0',fontSize:'14px'},children:\"\\uC2A4\\uD0AC\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',gap:'5px'},children:character.skills.map(skill=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(character.mp<skill.manaCost||skill.currentCooldown>0)return;setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));if(skill.id==='heal'){const healAmount=Math.floor(character.maxHp*0.3);setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount)}));addToCombatLog(`치유 스킬 사용! HP +${healAmount}`);}else{// 공격 스킬\nif(currentMonster){const damage=skill.damage+Math.floor(character.attack*0.5);const newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);if(newMonsterHp<=0){defeatMonster();}}}// 쿨다운 설정\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:skill.cooldown}:s)}));},disabled:character.mp<skill.manaCost||skill.currentCooldown>0,style:{background:skill.currentCooldown>0||character.mp<skill.manaCost?'#6b7280':'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',color:'white',border:'none',borderRadius:'8px',padding:'8px 12px',fontSize:'14px',cursor:character.mp>=skill.manaCost&&skill.currentCooldown===0?'pointer':'not-allowed',opacity:character.mp>=skill.manaCost&&skill.currentCooldown===0?1:0.6},children:[skill.name,\" (MP: \",skill.manaCost,\")\",skill.currentCooldown>0&&` (${Math.ceil(skill.currentCooldown/1000)}s)`]},skill.id))})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC804\\uD22C \\uB85C\\uADF8\"}),/*#__PURE__*/_jsx(\"div\",{ref:logRef,style:{height:'150px',overflowY:'auto',background:'#1f2937',borderRadius:'10px',padding:'15px',fontFamily:'monospace',fontSize:'14px'},children:combatLog.map((log,index)=>/*#__PURE__*/_jsx(\"div\",{style:{color:log.includes('레벨업')?'#10b981':log.includes('치명타')?'#ef4444':log.includes('획득')?'#fbbf24':'#d1d5db',marginBottom:'2px',lineHeight:'1.4'},children:log},index))})]})]});const renderCharacterTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(2, 1fr)',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC2A4\\uD0EF\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',marginBottom:'15px'},children:[\"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uD3EC\\uC778\\uD2B8: \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#fbbf24',fontWeight:'bold'},children:character.stats.availablePoints})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px'},children:Object.entries(character.stats).map(_ref4=>{let[key,value]=_ref4;if(key==='availablePoints')return null;const statNames={strength:'힘',agility:'민첩',intelligence:'지능',vitality:'체력',luck:'운'};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',background:'#1f2937',padding:'10px 15px',borderRadius:'10px'},children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:'#ffffff',fontWeight:'500'},children:[statNames[key],\": \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#fbbf24'},children:value})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>allocateStat(key),disabled:character.stats.availablePoints<=0,style:{background:character.stats.availablePoints>0?'#10b981':'#6b7280',color:'white',border:'none',borderRadius:'5px',padding:'5px 10px',cursor:character.stats.availablePoints>0?'pointer':'not-allowed'},children:\"+\"})]},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC7A5\\uBE44\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(3, 1fr)',gap:'10px'},children:['weapon','helmet','armor','boots','ring','amulet'].map(slot=>{const item=character.equipment[slot];const slotNames={weapon:'무기',helmet:'투구',armor:'갑옷',boots:'신발',ring:'반지',amulet:'목걸이'};return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{if(item){unequipItem(slot);}},style:{background:item?getRarityColor(item.rarity):'#1f2937',borderRadius:'10px',padding:'15px',textAlign:'center',minHeight:'80px',display:'flex',flexDirection:'column',justifyContent:'center',border:`2px solid ${item?getRarityColor(item.rarity):'#4b5563'}`,cursor:item?'pointer':'default',transition:'all 0.3s ease',opacity:item?1:0.7},onMouseEnter:e=>{if(item){e.currentTarget.style.transform='scale(1.05)';e.currentTarget.style.boxShadow='0 4px 15px rgba(0, 0, 0, 0.3)';}},onMouseLeave:e=>{if(item){e.currentTarget.style.transform='scale(1)';e.currentTarget.style.boxShadow='none';}},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#9ca3af',marginBottom:'5px'},children:slotNames[slot]}),item?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:'white',fontSize:'14px',fontWeight:'bold'},children:item.name}),item.enhancement>0&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'#fbbf24',fontSize:'12px'},children:[\"+\",item.enhancement]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',color:'#9ca3af',marginTop:'5px'},children:\"\\uD074\\uB9AD\\uD558\\uC5EC \\uD574\\uC81C\"})]}):/*#__PURE__*/_jsx(\"div\",{style:{color:'#6b7280',fontSize:'12px'},children:\"\\uBE48 \\uC2AC\\uB86F\"})]},slot);})})]})]})]});const renderInventoryTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:[\"\\uC778\\uBCA4\\uD1A0\\uB9AC (\",inventory.length,\"\\uAC1C)\"]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'15px'},children:inventory.map(item=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',border:`2px solid ${getRarityColor(item.rarity)}`,borderRadius:'10px',padding:'15px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:getRarityColor(item.rarity),fontWeight:'bold',marginBottom:'5px'},children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#9ca3af',fontSize:'14px',marginBottom:'10px'},children:[item.type,\" \\u2022 Lv.\",item.level]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#d1d5db',fontSize:'12px',marginBottom:'10px'},children:Object.entries(item.stats).map(_ref5=>{let[key,value]=_ref5;return value>0&&/*#__PURE__*/_jsxs(\"div\",{children:[key==='attack'?'⚔️':key==='defense'?'🛡️':key==='hp'?'❤️':key==='mp'?'💙':key==='speed'?'💨':key==='critRate'?'💥':'⭐',\" +\",value]},key);})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'5px'},children:[item.type!=='consumable'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>equipItem(item),style:{background:'#10b981',color:'white',border:'none',borderRadius:'5px',padding:'8px 12px',fontSize:'12px',cursor:'pointer',flex:1},children:\"\\uC7A5\\uCC29\"}),item.type==='consumable'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>consumeItem(item),style:{background:'#3b82f6',color:'white',border:'none',borderRadius:'5px',padding:'8px 12px',fontSize:'12px',cursor:'pointer',flex:1},children:\"\\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>sellItem(item),style:{background:'#ef4444',color:'white',border:'none',borderRadius:'5px',padding:'8px 12px',fontSize:'12px',cursor:'pointer',flex:1},children:[\"\\uD310\\uB9E4 (\",Math.floor(item.price*0.7),\"G)\"]})]})]},item.id))})]})]});const renderShopTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC0C1\\uC810\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(250px, 1fr))',gap:'15px'},children:shop.map(item=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',border:`2px solid ${getRarityColor(item.rarity)}`,borderRadius:'10px',padding:'15px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:getRarityColor(item.rarity),fontWeight:'bold',marginBottom:'5px'},children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#9ca3af',fontSize:'14px',marginBottom:'10px'},children:[item.type,\" \\u2022 Lv.\",item.level,\" \\u2022 \",item.rarity]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#d1d5db',fontSize:'12px',marginBottom:'15px'},children:Object.entries(item.stats).map(_ref6=>{let[key,value]=_ref6;return value>0&&/*#__PURE__*/_jsxs(\"div\",{children:[key==='attack'?'⚔️':key==='defense'?'🛡️':key==='hp'?'❤️':key==='mp'?'💙':key==='speed'?'💨':key==='critRate'?'💥':'⭐',\" +\",value]},key);})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:'#fbbf24',fontWeight:'bold'},children:[\"\\uD83D\\uDCB0 \",item.price.toLocaleString(),\"G\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>buyItem(item),disabled:character.gold<item.price,style:{background:character.gold>=item.price?'#10b981':'#6b7280',color:'white',border:'none',borderRadius:'5px',padding:'8px 16px',fontSize:'12px',cursor:character.gold>=item.price?'pointer':'not-allowed',opacity:character.gold>=item.price?1:0.6},children:\"\\uAD6C\\uB9E4\"})]})]},item.id))})]})]});const renderTabs=()=>/*#__PURE__*/_jsx(\"div\",{style:{background:'#374151',display:'flex',borderRadius:'15px 15px 0 0',overflow:'hidden'},children:[{id:'lobby',name:t('rpg.tabs.lobby'),icon:'🏠'},{id:'character',name:t('rpg.tabs.character'),icon:'👤'},{id:'inventory',name:t('rpg.tabs.inventory'),icon:'🎒'},{id:'skills',name:t('rpg.tabs.skills'),icon:'✨'},{id:'dungeon',name:t('rpg.tabs.dungeon'),icon:'🏰'},{id:'shop',name:t('rpg.tabs.shop'),icon:'🛒'}].map(tab=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab(tab.id),style:{background:currentTab===tab.id?colors.accent:'transparent',color:colors.text,border:'none',padding:'15px 20px',fontSize:'14px',cursor:'pointer',flex:1,transition:'all 0.3s ease'},children:[/*#__PURE__*/_jsx(\"div\",{children:tab.icon}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',marginTop:'5px'},children:tab.name})]},tab.id))});return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',maxWidth:'1200px',margin:'0 auto',background:colors.cardBg,borderRadius:'20px',overflow:'hidden',boxShadow:'0 20px 60px rgba(0, 0, 0, 0.3)',fontFamily:'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',border:`1px solid ${colors.cardBorder}`},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:colors.backgroundSecondary,padding:'20px',textAlign:'center',position:'relative',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,right:0,bottom:0,background:'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'}}),/*#__PURE__*/_jsx(\"h1\",{style:{margin:0,fontSize:'32px',fontWeight:'bold',color:colors.text,textShadow:'0 4px 20px rgba(147, 51, 234, 0.5)',position:'relative',zIndex:1},children:t('rpg.title')}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'10px 0 0 0',color:colors.textSecondary,fontSize:'16px',position:'relative',zIndex:1},children:t('rpg.subtitle')})]}),renderTabs(),currentTab==='lobby'&&renderLobbyTab(),currentTab==='dungeon'&&renderDungeonTab(),currentTab==='character'&&renderCharacterTab(),currentTab==='inventory'&&renderInventoryTab(),currentTab==='skills'&&renderSkillsTab(),currentTab==='shop'&&renderShopTab()]});};","map":{"version":3,"names":["React","useState","useEffect","useRef","useTheme","useLanguage","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","AdvancedIdleRPG","_ref","onAction","isSimulating","currentAction","userStats","setUserStats","currentUser","colors","t","style","document","createElement","textContent","head","appendChild","removeChild","character","setCharacter","id","name","level","exp","maxExp","hp","maxHp","mp","maxMp","attack","defense","speed","gold","class","skills","equipment","stats","strength","agility","intelligence","vitality","luck","availablePoints","prestige","rebirth","buffs","amount","duration","currentTab","setCurrentTab","gameMode","setGameMode","isAutoFighting","setIsAutoFighting","currentMonster","setCurrentMonster","combatLog","setCombatLog","selectedDungeon","setSelectedDungeon","inventory","setInventory","availableDungeons","setAvailableDungeons","currentDungeon","setCurrentDungeon","inDungeon","setInDungeon","guild","setGuild","shop","setShop","achievements","setAchievements","monstersDefeated","setMonstersDefeated","totalGoldEarned","setTotalGoldEarned","showDungeonChoice","setShowDungeonChoice","logRef","initializeGame","monsters_defeated","character_class","total_gold_earned","inventory_items","map","item","type","rarity","quantity","skill","current_buffs","Object","entries","filter","_ref2","_","buff","_ref3","Math","ceil","translations","ko","slash","description","heal","critical","dungeons","forest","cave","tower","items","sword1","armor1","helmet1","health_potion","mana_potion","greater_health_potion","strength_potion","defense_potion","monsters","slime","goblin","orc","troll","dragon","combat","appeared","damage","levelUp","defeated","itemObtained","dungeonCleared","nextFloor","dungeonExited","hpMpRecovered","defeat","en","zh","currentLang","localStorage","getItem","texts","initialSkills","maxLevel","manaCost","cooldown","currentCooldown","initialDungeons","floors","currentFloor","clearedFloors","Set","rewards","goldRange","expRange","itemDropChance","requiredLevel","isUnlocked","shopItems","price","enhancement","consumableEffect","healHp","healMp","buffType","buffAmount","buffDuration","prev","window","gameTexts","spawnMonster","baseHp","baseAttack","baseDefense","randomMonster","floor","random","length","levelMultiplier","monster","Date","now","max","dropItems","generateDropItems","isBoss","addToCombatLog","dropChance","rarities","itemTypes","itemType","generateItemName","generateItemStats","calculateItemPrice","prefixes","common","rare","epic","legendary","mythic","itemNames","weapon","armor","helmet","boots","ring","amulet","prefix","itemTypeNames","multipliers","base","critRate","critDamage","basePrice","buffedAttack","calculateDamage","isCritical","finalDamage","newMonsterHp","user_id","is_critical","monster_name","monster_level","character_level","character_attack","monster_hp_remaining","dungeon_name","dungeon_floor","defeatMonster","setTimeout","monsterAttack","buffedDefense","newHp","dungeon_id","damage_taken","character_defense","current_floor","total_floors","exit_reason","time_spent","getTime","baseDamage","expGained","goldGained","newExp","newGold","newLevel","newMaxExp","newMaxHp","new_level","stat_points_gained","prevDungeons","dungeon","exp_gained","gold_gained","items_dropped","updatedDungeon","Array","from","d","spawnDungeonMonster","proceedToNextFloor","exitDungeonAfterVictory","resetDungeon","autoAttackTimer","clearTimeout","interval","setInterval","min","clearInterval","message","newLog","shift","current","scrollTop","scrollHeight","allocateStatPoint","stat","equipItem","newEquipment","newAttack","newDefense","newMaxMp","newSpeed","invItem","unequipItem","slot","equippedItem","undefined","adjustedHp","adjustedMp","sellItem","sellPrice","buyItem","getRarityColor","enterDungeon","character_hp","character_mp","entry_time","forceSpawn","arguments","getDungeonMonsters","dungeonId","baseMonsters","floorBasedMonsterIndex","baseIndex","randomVariation","selectedIndex","selectedMonster","consumeItem","effect","itemIndex","findIndex","newInventory","currentItem","splice","item_name","item_type","heal_hp","heal_mp","buff_type","buff_amount","character_hp_before","character_mp_before","castSkill","healAmount","s","skill_name","skill_level","mana_cost","character_mp_after","allocateStat","statName","hpBonus","mpBonus","attackBonus","defenseBonus","stat_name","stat_value","available_points","renderCharacterHeader","expPercentage","background","borderRadius","padding","marginBottom","color","children","display","gridTemplateColumns","gap","textAlign","fontSize","fontWeight","marginTop","justifyContent","alignItems","width","height","backgroundColor","overflow","transition","renderLobbyTab","minHeight","margin","opacity","border","onClick","disabled","cursor","renderDungeonTab","value","placeholder","onChange","e","targetFloor","parseInt","target","canMoveTo","i","has","currentFloorCleared","animation","flexWrap","position","title","toFixed","_item$consumableEffec","_item$consumableEffec2","_item$consumableEffec3","_item$consumableEffec4","_item$consumableEffec5","overflowY","slice","log","index","lineHeight","renderSkillsTab","cost","old_level","gold_cost","character_gold_before","character_gold_after","renderCombatTab","toLocaleString","flexDirection","ref","fontFamily","includes","renderCharacterTab","_ref4","key","statNames","slotNames","onMouseEnter","currentTarget","transform","boxShadow","onMouseLeave","renderInventoryTab","_ref5","flex","renderShopTab","_ref6","renderTabs","icon","tab","accent","text","maxWidth","cardBg","cardBorder","backgroundSecondary","top","left","right","bottom","textShadow","zIndex","textSecondary"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedIdleRPG.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useLanguage } from '../contexts/LanguageContext';\n\ninterface Dungeon {\n  id: string;\n  name: string;\n  level: number;\n  description: string;\n  floors: number;\n  currentFloor: number;\n  clearedFloors: Set<number>; // Track which floors have been cleared\n  monsters: Monster[];\n  rewards: {\n    goldRange: [number, number];\n    expRange: [number, number];\n    itemDropChance: number;\n  };\n  requiredLevel: number;\n  isUnlocked: boolean;\n}\n\ninterface Monster {\n  id: string;\n  name: string;\n  level: number;\n  hp: number;\n  maxHp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  exp: number;\n  gold: number;\n  dropItems: Item[];\n  isBoss?: boolean;\n}\n\ninterface Character {\n  id: string;\n  name: string;\n  level: number;\n  exp: number;\n  maxExp: number;\n  hp: number;\n  maxHp: number;\n  mp: number;\n  maxMp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  gold: number;\n  class: string;\n  skills: Skill[];\n  equipment: Equipment;\n  stats: CharacterStats;\n  prestige: number;\n  rebirth: number;\n  buffs: {\n    attack: { amount: number; duration: number };\n    defense: { amount: number; duration: number };\n    speed: { amount: number; duration: number };\n  };\n}\n\ninterface CharacterStats {\n  strength: number;\n  agility: number;\n  intelligence: number;\n  vitality: number;\n  luck: number;\n  availablePoints: number;\n}\n\ninterface Skill {\n  id: string;\n  name: string;\n  level: number;\n  maxLevel: number;\n  damage: number;\n  manaCost: number;\n  cooldown: number;\n  currentCooldown: number;\n  type: 'active' | 'passive';\n  description: string;\n}\n\ninterface Equipment {\n  weapon?: Item;\n  armor?: Item;\n  helmet?: Item;\n  boots?: Item;\n  ring?: Item;\n  amulet?: Item;\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  type: 'weapon' | 'armor' | 'helmet' | 'boots' | 'ring' | 'amulet' | 'consumable';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary' | 'mythic';\n  level: number;\n  stats: {\n    attack?: number;\n    defense?: number;\n    hp?: number;\n    mp?: number;\n    speed?: number;\n    critRate?: number;\n    critDamage?: number;\n  };\n  price: number;\n  enhancement: number;\n  // 물약용 속성들\n  consumableEffect?: {\n    healHp?: number;\n    healMp?: number;\n    buffDuration?: number; // 버프 지속시간 (밀리초)\n    buffType?: 'attack' | 'defense' | 'speed'; // 버프 타입\n    buffAmount?: number; // 버프 수치\n  };\n  quantity?: number; // 소비 아이템 수량\n}\n\n\n\ninterface Guild {\n  id: string;\n  name: string;\n  level: number;\n  members: number;\n  maxMembers: number;\n  benefits: {\n    expBonus: number;\n    goldBonus: number;\n    dropBonus: number;\n  };\n}\n\ninterface AppProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  userStats: any;\n  setUserStats: (stats: any) => void;\n  currentUser: any;\n}\n\nexport const AdvancedIdleRPG: React.FC<AppProps> = ({\n  onAction,\n  isSimulating,\n  currentAction,\n  userStats,\n  setUserStats,\n  currentUser\n}) => {\n  const { colors } = useTheme();\n  const { t } = useLanguage();\n\n  // CSS 애니메이션 추가\n  React.useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const [character, setCharacter] = useState<Character>({\n    id: '1',\n    name: '용사',\n    level: 1,\n    exp: 0,\n    maxExp: 100,\n    hp: 100,\n    maxHp: 100,\n    mp: 50,\n    maxMp: 50,\n    attack: 20,\n    defense: 10,\n    speed: 15,\n    gold: 100,\n    class: '전사',\n    skills: [],\n    equipment: {},\n    stats: {\n      strength: 10,\n      agility: 8,\n      intelligence: 5,\n      vitality: 12,\n      luck: 7,\n      availablePoints: 0\n    },\n    prestige: 0,\n    rebirth: 0,\n    buffs: {\n      attack: { amount: 0, duration: 0 },\n      defense: { amount: 0, duration: 0 },\n      speed: { amount: 0, duration: 0 }\n    }\n  });\n\n  const [currentTab, setCurrentTab] = useState<'lobby' | 'dungeon' | 'character' | 'inventory' | 'skills' | 'shop'>('lobby');\n  const [gameMode, setGameMode] = useState<'lobby' | 'dungeon' | 'combat'>('lobby');\n  const [isAutoFighting, setIsAutoFighting] = useState(false);\n  const [currentMonster, setCurrentMonster] = useState<Monster | null>(null);\n  const [combatLog, setCombatLog] = useState<string[]>([]);\n  const [selectedDungeon, setSelectedDungeon] = useState<Dungeon | null>(null);\n  const [inventory, setInventory] = useState<Item[]>([]);\n  const [availableDungeons, setAvailableDungeons] = useState<Dungeon[]>([]);\n  const [currentDungeon, setCurrentDungeon] = useState<Dungeon | null>(null);\n  const [inDungeon, setInDungeon] = useState(false);\n  const [guild, setGuild] = useState<Guild | null>(null);\n  const [shop, setShop] = useState<Item[]>([]);\n  const [achievements, setAchievements] = useState<string[]>([]);\n  const [monstersDefeated, setMonstersDefeated] = useState(0);\n  const [totalGoldEarned, setTotalGoldEarned] = useState(0);\n  const [showDungeonChoice, setShowDungeonChoice] = useState(false);\n\n  const logRef = useRef<HTMLDivElement>(null);\n\n  // 게임 초기화\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  // 캐릭터 상태가 변경될 때마다 userStats 업데이트\n  useEffect(() => {\n    setUserStats({\n      level: character.level,\n      gold: character.gold,\n      attack: character.attack,\n      defense: character.defense,\n      hp: character.hp,\n      maxHp: character.maxHp,\n      exp: character.exp,\n      maxExp: character.maxExp,\n      monsters_defeated: monstersDefeated,\n      character_class: character.class,\n      total_gold_earned: totalGoldEarned,\n      inventory_items: inventory.map(item => ({\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: item.rarity,\n        quantity: item.quantity || 1,\n        stats: item.stats\n      })),\n      skills: character.skills.map(skill => ({\n        id: skill.id,\n        name: skill.name,\n        level: skill.level,\n        type: skill.type\n      })),\n      current_buffs: Object.entries(character.buffs)\n        .filter(([_, buff]) => buff.duration > 0)\n        .map(([type, buff]) => ({\n          type,\n          amount: buff.amount,\n          duration: Math.ceil(buff.duration / 1000)\n        }))\n    });\n  }, [character, inventory, monstersDefeated, totalGoldEarned, setUserStats]);\n\n  const initializeGame = () => {\n    // 언어별 텍스트 정의\n    const translations = {\n      ko: {\n        character: {\n          name: '용사',\n          class: '전사'\n        },\n        skills: {\n          slash: { name: '강력한 베기', description: '강력한 일격을 가합니다.' },\n          heal: { name: '치유', description: 'HP를 회복합니다.' },\n          critical: { name: '치명타 숙련', description: '치명타 확률을 증가시킵니다.' }\n        },\n        dungeons: {\n          forest: { name: '어둠의 숲', description: '초보자를 위한 던전입니다.' },\n          cave: { name: '고블린 동굴', description: '고블린들이 서식하는 위험한 동굴입니다.' },\n          tower: { name: '마법사의 탑', description: '강력한 마법 몬스터들이 있는 탑입니다.' }\n        },\n        items: {\n          sword1: '강철 검',\n          armor1: '가죽 갑옷',\n          helmet1: '철제 투구',\n          health_potion: '체력 물약',\n          mana_potion: '마나 물약',\n          greater_health_potion: '고급 체력 물약',\n          strength_potion: '힘의 물약',\n          defense_potion: '방어의 물약'\n        },\n        monsters: {\n          slime: '슬라임',\n          goblin: '고블린',\n          orc: '오크',\n          troll: '트롤',\n          dragon: '드래곤'\n        },\n        combat: {\n          appeared: '이 나타났다!',\n          attack: '의 공격!',\n          damage: '데미지!',\n          critical: '치명타!',\n          levelUp: '🎉 레벨업! Lv.',\n          defeated: '를 물리쳤다! EXP +',\n          gold: ', 골드 +',\n          itemObtained: '✨ 을 획득했습니다!',\n          dungeonCleared: '🎉  던전을 클리어했습니다!',\n          nextFloor: '층으로 자동 진행합니다!',\n          dungeonExited: '던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',\n          hpMpRecovered: '체력과 마나가 완전히 회복되었습니다!',\n          defeat: '전투에서 패배했습니다...'\n        }\n      },\n      en: {\n        character: {\n          name: 'Hero',\n          class: 'Warrior'\n        },\n        skills: {\n          slash: { name: 'Power Slash', description: 'Delivers a powerful strike.' },\n          heal: { name: 'Heal', description: 'Restores HP.' },\n          critical: { name: 'Critical Mastery', description: 'Increases critical hit chance.' }\n        },\n        dungeons: {\n          forest: { name: 'Dark Forest', description: 'A dungeon for beginners.' },\n          cave: { name: 'Goblin Cave', description: 'A dangerous cave inhabited by goblins.' },\n          tower: { name: 'Mage Tower', description: 'A tower with powerful magic monsters.' }\n        },\n        items: {\n          sword1: 'Steel Sword',\n          armor1: 'Leather Armor',\n          helmet1: 'Iron Helmet',\n          health_potion: 'Health Potion',\n          mana_potion: 'Mana Potion',\n          greater_health_potion: 'Greater Health Potion',\n          strength_potion: 'Strength Potion',\n          defense_potion: 'Defense Potion'\n        },\n        monsters: {\n          slime: 'Slime',\n          goblin: 'Goblin',\n          orc: 'Orc',\n          troll: 'Troll',\n          dragon: 'Dragon'\n        },\n        combat: {\n          appeared: ' appeared!',\n          attack: \"'s attack!\",\n          damage: ' damage!',\n          critical: ' (Critical!)',\n          levelUp: '🎉 Level up! Lv.',\n          defeated: ' defeated! EXP +',\n          gold: ', Gold +',\n          itemObtained: '✨ obtained!',\n          dungeonCleared: '🎉  dungeon cleared!',\n          nextFloor: 'Proceeding to floor  automatically!',\n          dungeonExited: 'Automatically exited dungeon. HP and MP fully restored!',\n          hpMpRecovered: 'HP and MP fully restored!',\n          defeat: 'Defeated in battle...'\n        }\n      },\n      zh: {\n        character: {\n          name: '勇者',\n          class: '战士'\n        },\n        skills: {\n          slash: { name: '强力斩击', description: '发动强力一击。' },\n          heal: { name: '治疗', description: '恢复生命值。' },\n          critical: { name: '暴击精通', description: '增加暴击几率。' }\n        },\n        dungeons: {\n          forest: { name: '黑暗森林', description: '适合新手的地下城。' },\n          cave: { name: '哥布林洞穴', description: '哥布林栖息的危险洞穴。' },\n          tower: { name: '法师塔', description: '有强力魔法怪物的塔。' }\n        },\n        items: {\n          sword1: '钢铁剑',\n          armor1: '皮甲',\n          helmet1: '铁盔',\n          health_potion: '生命药水',\n          mana_potion: '魔法药水',\n          greater_health_potion: '高级生命药水',\n          strength_potion: '力量药水',\n          defense_potion: '防御药水'\n        },\n        monsters: {\n          slime: '史莱姆',\n          goblin: '哥布林',\n          orc: '兽人',\n          troll: '巨魔',\n          dragon: '龙'\n        },\n        combat: {\n          appeared: '出现了！',\n          attack: '的攻击！',\n          damage: '伤害！',\n          critical: '暴击！',\n          levelUp: '🎉 升级！Lv.',\n          defeated: '被击败！经验 +',\n          gold: '，金币 +',\n          itemObtained: '✨ 获得了！',\n          dungeonCleared: '🎉 地下城通关！',\n          nextFloor: '自动前往第 层！',\n          dungeonExited: '自动离开地下城。生命值和魔法值完全恢复！',\n          hpMpRecovered: '生命值和魔法值完全恢复！',\n          defeat: '战斗失败...'\n        }\n      }\n    };\n\n    // 현재 언어 가져오기 (기본값: 한국어)\n    const currentLang = localStorage.getItem('language') || 'ko';\n    const texts = translations[currentLang as keyof typeof translations] || translations.ko;\n    // 초기 스킬 설정\n    const initialSkills: Skill[] = [\n      {\n        id: 'slash',\n        name: '강력한 베기',\n        level: 1,\n        maxLevel: 10,\n        damage: 30,\n        manaCost: 10,\n        cooldown: 3000,\n        currentCooldown: 0,\n        type: 'active',\n        description: '강력한 일격을 가합니다.'\n      },\n      {\n        id: 'heal',\n        name: '치유',\n        level: 1,\n        maxLevel: 10,\n        damage: 0,\n        manaCost: 15,\n        cooldown: 5000,\n        currentCooldown: 0,\n        type: 'active',\n        description: 'HP를 회복합니다.'\n      },\n      {\n        id: 'critical',\n        name: '치명타 숙련',\n        level: 1,\n        maxLevel: 10,\n        damage: 0,\n        manaCost: 0,\n        cooldown: 0,\n        currentCooldown: 0,\n        type: 'passive',\n        description: '치명타 확률을 증가시킵니다.'\n      }\n    ];\n\n    // 던전 초기화\n    const initialDungeons: Dungeon[] = [\n      {\n        id: 'forest',\n        name: '어둠의 숲',\n        level: 1,\n        description: '초보자를 위한 던전입니다.',\n        floors: 10,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [10, 25],\n          expRange: [15, 30],\n          itemDropChance: 0.1\n        },\n        requiredLevel: 1,\n        isUnlocked: true\n      },\n      {\n        id: 'cave',\n        name: '고블린 동굴',\n        level: 5,\n        description: '고블린들이 서식하는 위험한 동굴입니다.',\n        floors: 15,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [25, 50],\n          expRange: [40, 75],\n          itemDropChance: 0.15\n        },\n        requiredLevel: 5,\n        isUnlocked: false\n      },\n      {\n        id: 'tower',\n        name: '마법사의 탑',\n        level: 10,\n        description: '강력한 마법 몬스터들이 있는 탑입니다.',\n        floors: 20,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [50, 100],\n          expRange: [80, 150],\n          itemDropChance: 0.2\n        },\n        requiredLevel: 10,\n        isUnlocked: false\n      }\n    ];\n\n    // 상점 아이템 초기화\n    const shopItems: Item[] = [\n      {\n        id: 'sword1',\n        name: '강철 검',\n        type: 'weapon',\n        rarity: 'common',\n        level: 1,\n        stats: { attack: 15 },\n        price: 200,\n        enhancement: 0\n      },\n      {\n        id: 'armor1',\n        name: '가죽 갑옷',\n        type: 'armor',\n        rarity: 'common',\n        level: 1,\n        stats: { defense: 10, hp: 20 },\n        price: 150,\n        enhancement: 0\n      },\n      {\n        id: 'helmet1',\n        name: '철제 투구',\n        type: 'helmet',\n        rarity: 'common',\n        level: 1,\n        stats: { defense: 5, hp: 15 },\n        price: 100,\n        enhancement: 0\n      },\n      // 물약들\n      {\n        id: 'health_potion',\n        name: '체력 물약',\n        type: 'consumable',\n        rarity: 'common',\n        level: 1,\n        stats: {},\n        price: 50,\n        enhancement: 0,\n        consumableEffect: {\n          healHp: 50\n        },\n        quantity: 1\n      },\n      {\n        id: 'mana_potion',\n        name: '마나 물약',\n        type: 'consumable',\n        rarity: 'common',\n        level: 1,\n        stats: {},\n        price: 40,\n        enhancement: 0,\n        consumableEffect: {\n          healMp: 30\n        },\n        quantity: 1\n      },\n      {\n        id: 'greater_health_potion',\n        name: '고급 체력 물약',\n        type: 'consumable',\n        rarity: 'rare',\n        level: 2,\n        stats: {},\n        price: 120,\n        enhancement: 0,\n        consumableEffect: {\n          healHp: 120\n        },\n        quantity: 1\n      },\n      {\n        id: 'strength_potion',\n        name: '힘의 물약',\n        type: 'consumable',\n        rarity: 'rare',\n        level: 2,\n        stats: {},\n        price: 100,\n        enhancement: 0,\n        consumableEffect: {\n          buffType: 'attack',\n          buffAmount: 10,\n          buffDuration: 30000\n        },\n        quantity: 1\n      },\n      {\n        id: 'defense_potion',\n        name: '방어의 물약',\n        type: 'consumable',\n        rarity: 'rare',\n        level: 2,\n        stats: {},\n        price: 100,\n        enhancement: 0,\n        consumableEffect: {\n          buffType: 'defense',\n          buffAmount: 8,\n          buffDuration: 30000\n        },\n        quantity: 1\n      }\n    ];\n\n    setCharacter(prev => ({ \n      ...prev, \n      name: texts.character.name,\n      class: texts.character.class,\n      skills: initialSkills \n    }));\n    setAvailableDungeons(initialDungeons);\n    setShop(shopItems);\n    // Store texts globally for other functions to use\n    (window as any).gameTexts = texts;\n    \n    // 던전에 있지 않을 때만 일반 몬스터 생성\n    if (!inDungeon) {\n      spawnMonster();\n    }\n  };\n\n  // 몬스터 생성\n  const spawnMonster = () => {\n    // 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\n    if (currentMonster || inDungeon) {\n      return;\n    }\n    \n    const gameTexts = (window as any).gameTexts || {\n      monsters: { slime: '슬라임', goblin: '고블린', orc: '오크', troll: '트롤', dragon: '드래곤' },\n      combat: { appeared: '이 나타났다!' }\n    };\n    const monsters = [\n      { name: gameTexts.monsters.slime, baseHp: 40, baseAttack: 8, baseDefense: 2, exp: 15, gold: 10 },\n      { name: gameTexts.monsters.goblin, baseHp: 60, baseAttack: 12, baseDefense: 4, exp: 25, gold: 18 },\n      { name: gameTexts.monsters.orc, baseHp: 100, baseAttack: 18, baseDefense: 8, exp: 40, gold: 30 },\n      { name: gameTexts.monsters.troll, baseHp: 150, baseAttack: 25, baseDefense: 12, exp: 60, gold: 45 },\n      { name: gameTexts.monsters.dragon, baseHp: 300, baseAttack: 40, baseDefense: 20, exp: 120, gold: 100 }\n    ];\n\n    const randomMonster = monsters[Math.floor(Math.random() * monsters.length)];\n    const levelMultiplier = 1 + (character.level - 1) * 0.3;\n    \n    const monster: Monster = {\n      id: `monster_${Date.now()}`,\n      name: randomMonster.name,\n      level: Math.max(1, character.level + Math.floor(Math.random() * 3 - 1)),\n      hp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      attack: Math.floor(randomMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(randomMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(randomMonster.exp * levelMultiplier),\n      gold: Math.floor(randomMonster.gold * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: Math.random() < 0.1 // 10% 보스 확률\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 3;\n      monster.maxHp *= 3;\n      monster.attack *= 2;\n      monster.defense *= 2;\n      monster.exp *= 5;\n      monster.gold *= 3;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);\n  };\n\n  // 드롭 아이템 생성\n  const generateDropItems = (): Item[] => {\n    const dropChance = Math.random();\n    if (dropChance < 0.1) { // 10% 확률로 아이템 드롭\n      const rarities: Array<'common' | 'rare' | 'epic' | 'legendary' | 'mythic'> = ['common', 'rare', 'epic', 'legendary', 'mythic'];\n      const rarity = rarities[Math.floor(Math.random() * rarities.length)];\n      const itemTypes = ['weapon', 'armor', 'helmet', 'boots', 'ring', 'amulet'] as const;\n      const itemType = itemTypes[Math.floor(Math.random() * itemTypes.length)];\n      \n      return [{\n        id: `drop_${Date.now()}`,\n        name: generateItemName(rarity, itemType),\n        type: itemType,\n        rarity,\n        level: character.level,\n        stats: generateItemStats(rarity),\n        price: calculateItemPrice(rarity, character.level),\n        enhancement: 0\n      }];\n    }\n    return [];\n  };\n\n  const generateItemName = (rarity: string, itemType: string): string => {\n    const prefixes = {\n      common: ['낡은', '일반적인', '기본'],\n      rare: ['날카로운', '튼튼한', '마법의'],\n      epic: ['전설적인', '고대의', '신성한'],\n      legendary: ['전설의', '영웅의', '불멸의'],\n      mythic: ['신화의', '창조의', '절대의']\n    };\n    \n    const itemNames = {\n      weapon: ['검', '도끼', '창', '활', '지팡이'],\n      armor: ['갑옷', '로브', '사슬갑옷', '가죽갑옷'],\n      helmet: ['투구', '모자', '관', '헬름'],\n      boots: ['신발', '부츠', '장화', '샌들'],\n      ring: ['반지', '링', '밴드'],\n      amulet: ['목걸이', '부적', '펜던트']\n    };\n    \n    const prefix = prefixes[rarity as keyof typeof prefixes][Math.floor(Math.random() * 3)];\n    const itemTypeNames = itemNames[itemType as keyof typeof itemNames] || ['아이템'];\n    const item = itemTypeNames[Math.floor(Math.random() * itemTypeNames.length)];\n    \n    return `${prefix} ${item}`;\n  };\n\n  const generateItemStats = (rarity: string) => {\n    const multipliers = {\n      common: 1,\n      rare: 1.5,\n      epic: 2.5,\n      legendary: 4,\n      mythic: 7\n    };\n    \n    const base = multipliers[rarity as keyof typeof multipliers];\n    return {\n      attack: Math.floor(Math.random() * 20 * base),\n      defense: Math.floor(Math.random() * 15 * base),\n      hp: Math.floor(Math.random() * 50 * base),\n      mp: Math.floor(Math.random() * 30 * base),\n      speed: Math.floor(Math.random() * 10 * base),\n      critRate: Math.floor(Math.random() * 10 * base),\n      critDamage: Math.floor(Math.random() * 20 * base)\n    };\n  };\n\n  const calculateItemPrice = (rarity: string, level: number): number => {\n    const basePrice = {\n      common: 50,\n      rare: 150,\n      epic: 500,\n      legendary: 2000,\n      mythic: 10000\n    };\n    \n    return Math.floor(basePrice[rarity as keyof typeof basePrice] * (1 + level * 0.2));\n  };\n\n  // 전투 시스템\n  const attack = () => {\n    if (!currentMonster) return;\n\n    const buffedAttack = character.attack + character.buffs.attack.amount;\n    const damage = calculateDamage(buffedAttack, currentMonster.defense);\n    const isCritical = Math.random() < 0.1 + (character.stats.luck * 0.01);\n    const finalDamage = isCritical ? Math.floor(damage * 1.5) : damage;\n\n    const newMonsterHp = Math.max(0, currentMonster.hp - finalDamage);\n    setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!', critical: '치명타!' }\n    };\n    addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical ? ` (${gameTexts.combat.critical})` : ''} ${gameTexts.combat.damage}`);\n\n    onAction('combat_attack', {\n      user_id: currentUser.user_id,\n      damage: finalDamage,\n      is_critical: isCritical,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      character_attack: character.attack,\n      monster_hp_remaining: newMonsterHp,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    if (newMonsterHp <= 0) {\n      defeatMonster();\n    } else {\n      // 몬스터 반격\n      setTimeout(() => monsterAttack(), 1000);\n    }\n  };\n\n  const monsterAttack = () => {\n    if (!currentMonster || currentMonster.hp <= 0) return;\n\n    const buffedDefense = character.defense + character.buffs.defense.amount;\n    const damage = calculateDamage(currentMonster.attack, buffedDefense);\n    const newHp = Math.max(0, character.hp - damage);\n    \n    setCharacter(prev => ({ ...prev, hp: newHp }));\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!' }\n    };\n    addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);\n\n    if (newHp <= 0) {\n      const gameTexts = (window as any).gameTexts || {\n        combat: { defeat: '전투에서 패배했습니다...' }\n      };\n      addToCombatLog(gameTexts.combat.defeat);\n      setIsAutoFighting(false);\n      \n      // 전투 실패 이벤트 로깅\n      onAction('combat_defeat', {\n        monster_name: currentMonster.name,\n        monster_level: currentMonster.level,\n        character_level: character.level,\n        dungeon_id: currentDungeon?.id || 'field',\n        dungeon_name: currentDungeon?.name || 'field',\n        damage_taken: currentMonster.attack,\n        character_defense: character.defense\n      });\n\n      // 던전에서 나가고 체력/마나 완전 회복\n      setTimeout(() => {\n        setCharacter(prev => ({\n          ...prev,\n          hp: prev.maxHp,\n          mp: prev.maxMp\n        }));\n        \n        if (inDungeon && currentDungeon) {\n          // 던전에서 나가기 (죽음으로 인한 자동 퇴장)\n          onAction('dungeon_exited', {\n            dungeon_id: currentDungeon.id,\n            dungeon_name: currentDungeon.name,\n            current_floor: currentDungeon.currentFloor,\n            total_floors: currentDungeon.floors,\n            character_level: character.level,\n            exit_reason: 'death',\n            time_spent: new Date().getTime()\n          });\n          setInDungeon(false);\n          setCurrentDungeon(null);\n          setCurrentTab('lobby');\n          setGameMode('lobby');\n          addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n        } else {\n          // 일반 필드에서는 새 몬스터 스폰\n          addToCombatLog('체력과 마나가 완전히 회복되었습니다!');\n          spawnMonster();\n        }\n      }, 2000);\n    }\n  };\n\n  const calculateDamage = (attack: number, defense: number): number => {\n    const baseDamage = Math.max(1, attack - Math.floor(defense * 0.5));\n    return Math.floor(baseDamage * (0.8 + Math.random() * 0.4));\n  };\n\n  const defeatMonster = () => {\n    if (!currentMonster) return;\n\n    const expGained = currentMonster.exp;\n    const goldGained = currentMonster.gold;\n    \n    setCharacter(prev => {\n      const newExp = prev.exp + expGained;\n      const newGold = prev.gold + goldGained;\n      let newLevel = prev.level;\n      let newMaxExp = prev.maxExp;\n      let newHp = prev.hp;\n      let newMaxHp = prev.maxHp;\n      let availablePoints = prev.stats.availablePoints;\n\n      // 레벨업 체크\n      if (newExp >= prev.maxExp) {\n        newLevel += 1;\n        newMaxExp = Math.floor(prev.maxExp * 1.5);\n        newMaxHp += 20;\n        newHp = newMaxHp; // 레벨업 시 체력 완전 회복\n        availablePoints += 5;\n        \n        addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);\n        \n        onAction('level_up', {\n          user_id: currentUser.user_id,\n          new_level: newLevel,\n          character_class: prev.class,\n          stat_points_gained: 5\n        });\n\n        // 던전 해금 체크\n        setAvailableDungeons(prevDungeons => \n          prevDungeons.map(dungeon => ({\n            ...dungeon,\n            isUnlocked: dungeon.isUnlocked || newLevel >= dungeon.requiredLevel\n          }))\n        );\n      }\n\n      return {\n        ...prev,\n        exp: newExp >= prev.maxExp ? newExp - prev.maxExp : newExp,\n        gold: newGold,\n        level: newLevel,\n        maxExp: newMaxExp,\n        hp: newHp,\n        maxHp: newMaxHp,\n        stats: { ...prev.stats, availablePoints }\n      };\n    });\n\n    // 아이템 드롭 처리\n    if (currentMonster.dropItems.length > 0) {\n      setInventory(prev => [...prev, ...currentMonster.dropItems]);\n      addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);\n    }\n\n    addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);\n\n    // 추적 카운터 업데이트\n    setMonstersDefeated(prev => prev + 1);\n    setTotalGoldEarned(prev => prev + goldGained);\n\n    onAction('monster_defeated', {\n      user_id: currentUser.user_id,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      exp_gained: expGained,\n      gold_gained: goldGained,\n      items_dropped: currentMonster.dropItems.length,\n      character_attack: character.attack,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    // 현재 몬스터 제거\n    setCurrentMonster(null);\n    \n    // 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\n    if (inDungeon && currentDungeon) {\n      // 현재 층을 클리어한 것으로 마킹\n      const updatedDungeon = {\n        ...currentDungeon,\n        clearedFloors: new Set([...Array.from(currentDungeon.clearedFloors), currentDungeon.currentFloor])\n      };\n      setCurrentDungeon(updatedDungeon);\n      \n      // 던전 리스트에서도 업데이트\n      setAvailableDungeons(prev => prev.map(d => \n        d.id === updatedDungeon.id ? updatedDungeon : d\n      ));\n      \n      // 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\n      addToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);\n      setTimeout(() => {\n        spawnDungeonMonster(updatedDungeon, true);\n      }, 2000);\n    } else {\n      // 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\n      if (!inDungeon) {\n        setTimeout(() => {\n          spawnMonster();\n        }, 2000);\n      }\n    }\n  };\n\n  // 다음 층으로 진행\n  const proceedToNextFloor = () => {\n    if (!currentDungeon) return;\n    \n    const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor + 1 };\n    setCurrentDungeon(updatedDungeon);\n    setShowDungeonChoice(false);\n    setTimeout(() => {\n      spawnDungeonMonster(updatedDungeon, true); // 강제 스폰\n      addToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);\n    }, 500);\n  };\n\n  // 던전 나가기\n  const exitDungeonAfterVictory = () => {\n    if (!currentDungeon) return;\n    \n    // 던전 나가기 이벤트 로깅\n    onAction('dungeon_exited', {\n      dungeon_id: currentDungeon.id,\n      dungeon_name: currentDungeon.name,\n      current_floor: currentDungeon.currentFloor,\n      total_floors: currentDungeon.floors,\n      character_level: character.level,\n      exit_reason: 'victory_choice',\n      time_spent: new Date().getTime()\n    });\n    \n    // 던전 리셋 (현재 층을 1층으로 되돌림)\n    const resetDungeon = { ...currentDungeon, currentFloor: 1 };\n    setAvailableDungeons(prev => prev.map(d => \n      d.id === resetDungeon.id ? resetDungeon : d\n    ));\n    \n    setInDungeon(false);\n    setCurrentDungeon(null);\n    setCurrentTab('lobby');\n    setGameMode('lobby');\n    setShowDungeonChoice(false);\n    \n    // 체력과 마나 완전 회복\n    setCharacter(prev => ({ ...prev, hp: prev.maxHp, mp: prev.maxMp }));\n    addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n    \n    // 새로운 일반 몬스터 생성\n    setTimeout(() => {\n      spawnMonster();\n    }, 1000);\n  };\n\n\n  // 자동 전투\n  useEffect(() => {\n    if (isAutoFighting && currentMonster && currentMonster.hp > 0 && character.hp > 0) {\n      const autoAttackTimer = setTimeout(() => {\n        attack();\n      }, 2000);\n\n      return () => clearTimeout(autoAttackTimer);\n    }\n  }, [isAutoFighting, currentMonster, character.hp]);\n\n  // 스킬 쿨다운 및 MP 회복\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + 1),\n        skills: prev.skills.map(skill => ({\n          ...skill,\n          currentCooldown: Math.max(0, skill.currentCooldown - 100)\n        })),\n        buffs: {\n          attack: {\n            amount: prev.buffs.attack.duration > 0 ? prev.buffs.attack.amount : 0,\n            duration: Math.max(0, prev.buffs.attack.duration - 100)\n          },\n          defense: {\n            amount: prev.buffs.defense.duration > 0 ? prev.buffs.defense.amount : 0,\n            duration: Math.max(0, prev.buffs.defense.duration - 100)\n          },\n          speed: {\n            amount: prev.buffs.speed.duration > 0 ? prev.buffs.speed.amount : 0,\n            duration: Math.max(0, prev.buffs.speed.duration - 100)\n          }\n        }\n      }));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToCombatLog = (message: string) => {\n    setCombatLog(prev => {\n      const newLog = [...prev, message];\n      if (newLog.length > 50) newLog.shift();\n      return newLog;\n    });\n    \n    // Auto-scroll to bottom immediately and with backup timing\n    if (logRef.current) {\n      logRef.current.scrollTop = logRef.current.scrollHeight;\n    }\n    \n    // Additional scroll with slight delay to ensure content is rendered\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 10);\n    \n    // Final backup scroll\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  // 스탯 분배\n  const allocateStatPoint = (stat: keyof Omit<CharacterStats, 'availablePoints'>) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [stat]: prev.stats[stat] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      },\n      // 스탯에 따른 능력치 업데이트\n      attack: stat === 'strength' ? prev.attack + 2 : prev.attack,\n      defense: stat === 'vitality' ? prev.defense + 1 : prev.defense,\n      maxHp: stat === 'vitality' ? prev.maxHp + 10 : prev.maxHp,\n      maxMp: stat === 'intelligence' ? prev.maxMp + 5 : prev.maxMp,\n      speed: stat === 'agility' ? prev.speed + 1 : prev.speed\n    }));\n  };\n\n  // 아이템 장착\n  const equipItem = (item: Item) => {\n    // 소비 아이템은 장착할 수 없음\n    if (item.type === 'consumable') {\n      return;\n    }\n    \n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[item.type as keyof typeof newEquipment] = item;\n\n      // 장착한 아이템의 스탯 적용\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (item.stats.attack) newAttack += item.stats.attack;\n      if (item.stats.defense) newDefense += item.stats.defense;\n      if (item.stats.hp) newMaxHp += item.stats.hp;\n      if (item.stats.mp) newMaxMp += item.stats.mp;\n      if (item.stats.speed) newSpeed += item.stats.speed;\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: newAttack,\n        defense: newDefense,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        speed: newSpeed\n      };\n    });\n\n    // 인벤토리에서 아이템 제거\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 장착했습니다!`);\n  };\n\n  // 장비 해제\n  const unequipItem = (slot: keyof Equipment) => {\n    const equippedItem = character.equipment[slot];\n    if (!equippedItem) return;\n\n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = undefined;\n\n      // 장착 해제한 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (equippedItem.stats.attack) newAttack -= equippedItem.stats.attack;\n      if (equippedItem.stats.defense) newDefense -= equippedItem.stats.defense;\n      if (equippedItem.stats.hp) newMaxHp -= equippedItem.stats.hp;\n      if (equippedItem.stats.mp) newMaxMp -= equippedItem.stats.mp;\n      if (equippedItem.stats.speed) newSpeed -= equippedItem.stats.speed;\n\n      // HP가 maxHp를 초과하지 않도록 조정\n      const adjustedHp = Math.min(prev.hp, newMaxHp);\n      const adjustedMp = Math.min(prev.mp, newMaxMp);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: Math.max(1, newAttack), // 최소 공격력 1\n        defense: Math.max(0, newDefense),\n        maxHp: Math.max(100, newMaxHp), // 최소 체력 100\n        maxMp: Math.max(50, newMaxMp), // 최소 마나 50\n        speed: Math.max(1, newSpeed), // 최소 속도 1\n        hp: adjustedHp,\n        mp: adjustedMp\n      };\n    });\n\n    // 인벤토리에 아이템 추가\n    setInventory(prev => [...prev, equippedItem]);\n    addToCombatLog(`${equippedItem.name}을 해제했습니다!`);\n  };\n\n\n  // 아이템 판매\n  const sellItem = (item: Item) => {\n    const sellPrice = Math.floor(item.price * 0.7);\n    setCharacter(prev => ({ ...prev, gold: prev.gold + sellPrice }));\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);\n  };\n\n  // 아이템 구매\n  const buyItem = (item: Item) => {\n    if (character.gold < item.price) return;\n    \n    setCharacter(prev => ({ ...prev, gold: prev.gold - item.price }));\n    setInventory(prev => [...prev, { ...item, id: `${item.id}_${Date.now()}` }]);\n    addToCombatLog(`${item.name}을 구매했습니다!`);\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: '#9ca3af',\n      rare: '#3b82f6',\n      epic: '#8b5cf6',\n      legendary: '#f59e0b',\n      mythic: '#ef4444'\n    };\n    return colors[rarity as keyof typeof colors] || '#9ca3af';\n  };\n\n  // 던전 입장 함수\n  const enterDungeon = (dungeon: Dungeon) => {\n    if (character.level < dungeon.requiredLevel) {\n      addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);\n      return;\n    }\n    setCurrentDungeon(dungeon);\n    setInDungeon(true);\n    setGameMode('dungeon');\n    setCurrentTab('dungeon');\n    spawnDungeonMonster(dungeon);\n    \n    // 이벤트 로깅\n    onAction('dungeon_entered', {\n      dungeon_id: dungeon.id,\n      dungeon_name: dungeon.name,\n      character_level: character.level,\n      floor: dungeon.currentFloor,\n      character_attack: character.attack,\n      character_defense: character.defense,\n      character_hp: character.hp,\n      character_mp: character.mp,\n      entry_time: new Date().getTime()\n    });\n  };\n\n  // 던전 몬스터 스폰\n  const spawnDungeonMonster = (dungeon: Dungeon, forceSpawn = false) => {\n    // 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\n    if (currentMonster && !forceSpawn) return;\n    \n    // 강제 생성인 경우 기존 몬스터를 먼저 제거\n    if (forceSpawn && currentMonster) {\n      setCurrentMonster(null);\n    }\n    // 던전별 고유 몬스터 타입 정의\n    const getDungeonMonsters = (dungeonId: string) => {\n      switch (dungeonId) {\n        case 'forest': // 어둠의 숲\n          return [\n            { name: '늑대', baseHp: 40, baseAttack: 10, baseDefense: 3 },\n            { name: '곰', baseHp: 80, baseAttack: 16, baseDefense: 6 },\n            { name: '거대 거미', baseHp: 120, baseAttack: 22, baseDefense: 10 },\n            { name: '숲의 수호자', baseHp: 200, baseAttack: 35, baseDefense: 18 },\n            { name: '고대 엔트', baseHp: 350, baseAttack: 45, baseDefense: 25 }\n          ];\n        case 'cave': // 고블린 동굴\n          return [\n            { name: '고블린 전사', baseHp: 60, baseAttack: 14, baseDefense: 5 },\n            { name: '고블린 궁수', baseHp: 45, baseAttack: 18, baseDefense: 3 },\n            { name: '고블린 마법사', baseHp: 50, baseAttack: 20, baseDefense: 4 },\n            { name: '고블린 우두머리', baseHp: 180, baseAttack: 30, baseDefense: 15 },\n            { name: '고블린 왕', baseHp: 400, baseAttack: 50, baseDefense: 28 }\n          ];\n        case 'tower': // 마법사의 탑\n          return [\n            { name: '마법 골렘', baseHp: 100, baseAttack: 20, baseDefense: 12 },\n            { name: '스켈레톤 메이지', baseHp: 70, baseAttack: 25, baseDefense: 8 },\n            { name: '플레임 엘리멘탈', baseHp: 110, baseAttack: 28, baseDefense: 10 },\n            { name: '리치', baseHp: 250, baseAttack: 40, baseDefense: 20 },\n            { name: '고대 마법사', baseHp: 500, baseAttack: 60, baseDefense: 35 }\n          ];\n        default:\n          return [\n            { name: '슬라임', baseHp: 30, baseAttack: 8, baseDefense: 2 },\n            { name: '고블린', baseHp: 50, baseAttack: 12, baseDefense: 4 },\n            { name: '오크', baseHp: 100, baseAttack: 18, baseDefense: 8 },\n            { name: '트롤', baseHp: 150, baseAttack: 25, baseDefense: 12 },\n            { name: '드래곤', baseHp: 300, baseAttack: 40, baseDefense: 20 }\n          ];\n      }\n    };\n\n    const baseMonsters = getDungeonMonsters(dungeon.id);\n\n    // 층수에 따른 점진적 몬스터 선택 로직\n    const floorBasedMonsterIndex = () => {\n      const currentFloor = dungeon.currentFloor;\n      if (currentFloor <= 3) return 0; // 첫 번째 몬스터 (1~3층)\n      if (currentFloor <= 7) return 1; // 두 번째 몬스터 (4~7층)  \n      if (currentFloor <= 12) return 2; // 세 번째 몬스터 (8~12층)\n      if (currentFloor <= 18) return 3; // 네 번째 몬스터 (13~18층)\n      return 4; // 다섯 번째 몬스터 (19층 이상)\n    };\n    \n    // 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\n    const baseIndex = floorBasedMonsterIndex();\n    const randomVariation = Math.random() < 0.3 && baseIndex > 0 ? -1 : 0; // 30% 확률로 한 단계 낮은 몬스터\n    const selectedIndex = Math.max(0, baseIndex + randomVariation);\n    \n    const selectedMonster = baseMonsters[selectedIndex];\n    const levelMultiplier = 1 + (dungeon.level + dungeon.currentFloor - 1) * 0.2;\n\n    const monster: Monster = {\n      id: `dungeon_${dungeon.id}_${Date.now()}`,\n      name: selectedMonster.name,\n      level: dungeon.level + dungeon.currentFloor,\n      hp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      attack: Math.floor(selectedMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(selectedMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor((20 + dungeon.level * 8 + dungeon.currentFloor * 3) * levelMultiplier),\n      gold: Math.floor((10 + dungeon.level * 3) * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: dungeon.currentFloor % 5 === 0\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 2;\n      monster.maxHp *= 2;\n      monster.attack *= 1.5;\n      monster.exp *= 3;\n      monster.gold *= 2;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);\n  };\n\n  // 물약 사용 함수\n  const consumeItem = (item: Item) => {\n    if (item.type !== 'consumable' || !item.consumableEffect) return;\n\n    const effect = item.consumableEffect;\n\n    // 체력 회복\n    if (effect.healHp) {\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + effect.healHp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);\n    }\n\n    // 마나 회복\n    if (effect.healMp) {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + effect.healMp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);\n    }\n\n    // 버프 효과\n    if (effect.buffType && effect.buffAmount && effect.buffDuration) {\n      setCharacter(prev => ({\n        ...prev,\n        buffs: {\n          ...prev.buffs,\n          [effect.buffType!]: {\n            amount: effect.buffAmount!,\n            duration: effect.buffDuration!\n          }\n        }\n      }));\n      addToCombatLog(`${item.name}을 사용하여 ${effect.buffType === 'attack' ? '공격력' : effect.buffType === 'defense' ? '방어력' : '속도'} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);\n    }\n\n    // 인벤토리에서 물약 제거 또는 수량 감소\n    setInventory(prev => {\n      const itemIndex = prev.findIndex(invItem => invItem.id === item.id);\n      if (itemIndex !== -1) {\n        const newInventory = [...prev];\n        const currentItem = newInventory[itemIndex];\n        if (currentItem.quantity && currentItem.quantity > 1) {\n          newInventory[itemIndex] = { ...currentItem, quantity: currentItem.quantity - 1 };\n        } else {\n          newInventory.splice(itemIndex, 1);\n        }\n        return newInventory;\n      }\n      return prev;\n    });\n\n    // 이벤트 로깅\n    onAction('consumable_used', {\n      item_name: item.name,\n      item_type: item.type,\n      character_level: character.level,\n      heal_hp: effect.healHp || 0,\n      heal_mp: effect.healMp || 0,\n      buff_type: effect.buffType || 'none',\n      buff_amount: effect.buffAmount || 0,\n      character_hp_before: character.hp,\n      character_mp_before: character.mp,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스킬 사용 함수\n  const castSkill = (skill: Skill) => {\n    if (skill.currentCooldown > 0 || character.mp < skill.manaCost) return;\n\n    // 스킬 사용 로직\n    if (skill.id === 'heal') {\n      const healAmount = 30 + skill.level * 5;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${healAmount}만큼 회복했다!`);\n    } else {\n      // 공격 스킬\n      if (currentMonster) {\n        const damage = calculateDamage(skill.damage + skill.level * 3, currentMonster.defense);\n        const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n        setCurrentMonster(prev => prev ? {...prev, hp: newMonsterHp} : null);\n        setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n        addToCombatLog(`${skill.name}로 ${damage} 데미지!`);\n\n        // 몬스터가 죽지 않았으면 반격\n        if (newMonsterHp > 0) {\n          setTimeout(() => {\n            monsterAttack();\n          }, 1000);\n        } else {\n          // 몬스터가 죽었으면 처치 처리\n          setTimeout(() => {\n            defeatMonster();\n          }, 1500);\n        }\n      }\n    }\n    \n    // 쿨다운 적용\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? {...s, currentCooldown: s.cooldown} : s\n      )\n    }));\n\n    // 이벤트 로깅\n    onAction('skill_used', {\n      skill_name: skill.name,\n      skill_level: skill.level,\n      mana_cost: skill.manaCost,\n      character_level: character.level,\n      character_mp_before: character.mp,\n      character_mp_after: character.mp - skill.manaCost,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스탯 포인트 할당\n  const allocateStat = (statName: keyof CharacterStats) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [statName]: prev.stats[statName] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      }\n    }));\n\n    // 스탯에 따른 능력치 업데이트\n    let hpBonus = 0, mpBonus = 0, attackBonus = 0, defenseBonus = 0;\n    if (statName === 'vitality') hpBonus = 5;\n    if (statName === 'intelligence') mpBonus = 3;\n    if (statName === 'strength') attackBonus = 2;\n    if (statName === 'agility') { attackBonus = 1; defenseBonus = 1; }\n\n    setCharacter(prev => ({\n      ...prev,\n      maxHp: prev.maxHp + hpBonus,\n      hp: prev.hp + hpBonus,\n      maxMp: prev.maxMp + mpBonus,\n      mp: prev.mp + mpBonus,\n      attack: prev.attack + attackBonus,\n      defense: prev.defense + defenseBonus\n    }));\n\n    // 이벤트 로깅\n    onAction('stat_allocated', {\n      stat_name: statName,\n      stat_value: character.stats[statName] + 1,\n      character_level: character.level,\n      available_points: character.stats.availablePoints - 1\n    });\n  };\n\n  // 공통 캐릭터 정보 헤더 컴포넌트\n  const renderCharacterHeader = () => {\n    const expPercentage = (character.exp / character.maxExp) * 100;\n    \n    return (\n      <div style={{\n        background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n        borderRadius: '15px',\n        padding: '15px 20px',\n        marginBottom: '20px',\n        color: 'white'\n      }}>\n        {/* 기본 스탯 정보 */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n          gap: '15px',\n          marginBottom: '15px'\n        }}>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#ffffff' }}>\n              Lv.{character.level}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>레벨</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#fbbf24' }}>\n              {character.gold}G\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>골드</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#f87171' }}>\n              {character.attack}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>공격력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#60a5fa' }}>\n              {character.defense}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>방어력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#34d399' }}>\n              {character.hp}/{character.maxHp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>체력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#a78bfa' }}>\n              {character.mp}/{character.maxMp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>마나</div>\n          </div>\n        </div>\n\n        {/* 경험치 바 */}\n        <div style={{ marginTop: '15px' }}>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            marginBottom: '5px'\n          }}>\n            <span style={{ fontSize: '14px', color: '#e0e7ff' }}>경험치</span>\n            <span style={{ fontSize: '14px', color: '#ffffff', fontWeight: 'bold' }}>\n              {character.exp} / {character.maxExp} ({Math.floor(expPercentage)}%)\n            </span>\n          </div>\n          <div style={{\n            width: '100%',\n            height: '8px',\n            backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              width: `${expPercentage}%`,\n              height: '100%',\n              background: 'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',\n              borderRadius: '10px',\n              transition: 'width 0.3s ease'\n            }} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // 로비 렌더링\n  const renderLobbyTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>🏠 모험가 로비</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>던전을 선택하여 모험을 시작하세요!</p>\n      </div>\n\n      {/* 던전 목록 */}\n      <div style={{ marginBottom: '20px' }}>\n        <h3 style={{ color: 'white', marginBottom: '15px', fontSize: '20px' }}>🏰 던전 목록</h3>\n        <div style={{ display: 'grid', gap: '15px' }}>\n          {availableDungeons.map(dungeon => (\n            <div\n              key={dungeon.id}\n              style={{\n                background: dungeon.isUnlocked ? '#374151' : '#1f2937',\n                borderRadius: '10px',\n                padding: '20px',\n                border: dungeon.isUnlocked ? '2px solid #10b981' : '2px solid #4b5563',\n                opacity: dungeon.isUnlocked ? 1 : 0.6\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                  <h4 style={{ color: 'white', margin: '0 0 5px 0', fontSize: '18px' }}>\n                    {dungeon.name} (Lv.{dungeon.level})\n                  </h4>\n                  <p style={{ color: '#9ca3af', margin: '0 0 10px 0', fontSize: '14px' }}>\n                    {dungeon.description}\n                  </p>\n                  <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                    필요 레벨: {dungeon.requiredLevel} | 층수: {dungeon.floors}층 | 현재 층: {dungeon.currentFloor}층\n                  </div>\n                </div>\n                <button\n                  onClick={() => enterDungeon(dungeon)}\n                  disabled={!dungeon.isUnlocked || character.level < dungeon.requiredLevel}\n                  style={{\n                    background: dungeon.isUnlocked && character.level >= dungeon.requiredLevel\n                      ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)'\n                      : '#4b5563',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 20px',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    cursor: dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? 'pointer' : 'not-allowed',\n                    transition: 'all 0.3s ease'\n                  }}\n                >\n                  {dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? '입장' : '잠금'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 던전 탭 렌더링\n  const renderDungeonTab = () => {\n    if (!inDungeon || !currentDungeon) {\n      return (\n        <div style={{ padding: '100px 20px', textAlign: 'center', background: '#1f2937', color: '#9ca3af' }}>\n          <h3>던전에 입장하지 않았습니다</h3>\n          <p>로비에서 던전을 선택해주세요</p>\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n        {/* 공통 캐릭터 헤더 */}\n        {renderCharacterHeader()}\n\n        {/* 던전 정보 */}\n        <div style={{\n          background: 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white'\n        }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n            <div>\n              <h2 style={{ margin: '0 0 5px 0', fontSize: '24px' }}>\n                🏰 {currentDungeon.name}\n              </h2>\n              <p style={{ margin: 0, opacity: 0.9, fontSize: '14px' }}>\n                {currentDungeon.currentFloor}층 / {currentDungeon.floors}층\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                // 던전 나가기 이벤트 로깅\n                onAction('dungeon_exited', {\n                  dungeon_id: currentDungeon.id,\n                  dungeon_name: currentDungeon.name,\n                  current_floor: currentDungeon.currentFloor,\n                  total_floors: currentDungeon.floors,\n                  character_level: character.level,\n                  exit_reason: 'manual',\n                  time_spent: new Date().getTime()\n                });\n                setInDungeon(false);\n                setCurrentDungeon(null);\n                setCurrentTab('lobby');\n                setGameMode('lobby');\n              }}\n              style={{\n                background: '#374151',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '10px 15px',\n                cursor: 'pointer'\n              }}\n            >\n              던전 나가기\n            </button>\n          </div>\n          \n          {/* 층 진행 컨트롤 */}\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '15px',\n            background: 'rgba(0, 0, 0, 0.2)',\n            borderRadius: '10px'\n          }}>\n            <button\n              onClick={() => {\n                if (currentDungeon.currentFloor > 1) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor - 1 };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                }\n              }}\n              disabled={currentDungeon.currentFloor <= 1}\n              style={{\n                background: currentDungeon.currentFloor <= 1 ? '#6b7280' : '#3b82f6',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: currentDungeon.currentFloor <= 1 ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬆️ 이전 층\n            </button>\n            \n            <input\n              type=\"number\"\n              min=\"1\"\n              max={currentDungeon.floors}\n              value={currentDungeon.currentFloor}\n              placeholder=\"층\"\n              onChange={(e) => {\n                const targetFloor = parseInt(e.target.value);\n                if (targetFloor >= 1 && targetFloor <= currentDungeon.floors) {\n                  // Check if all previous floors are cleared\n                  let canMoveTo = true;\n                  for (let i = 1; i < targetFloor; i++) {\n                    if (!currentDungeon.clearedFloors.has(i)) {\n                      canMoveTo = false;\n                      addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);\n                      break;\n                    }\n                  }\n                  \n                  if (canMoveTo) {\n                    const updatedDungeon = { ...currentDungeon, currentFloor: targetFloor };\n                    setCurrentDungeon(updatedDungeon);\n                    setCurrentMonster(null);\n                    addToCombatLog(`${targetFloor}층으로 이동했습니다.`);\n                    setTimeout(() => {\n                      spawnDungeonMonster(updatedDungeon, true);\n                    }, 1000);\n                  }\n                }\n              }}\n              style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                textAlign: 'center',\n                width: '80px'\n              }}\n            />\n            \n            <button\n              onClick={() => {\n                const nextFloor = currentDungeon.currentFloor + 1;\n                const currentFloorCleared = currentDungeon.clearedFloors.has(currentDungeon.currentFloor);\n                \n                if (currentDungeon.currentFloor < currentDungeon.floors && currentFloorCleared) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: nextFloor };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                } else if (!currentFloorCleared) {\n                  addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);\n                }\n              }}\n              disabled={currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)}\n              style={{\n                background: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? '#6b7280' : '#10b981',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬇️ 다음 층\n            </button>\n          </div>\n        </div>\n\n        {/* 층 진행 상태 표시 */}\n      {showDungeonChoice && (\n        <div style={{\n          background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white',\n          textAlign: 'center'\n        }}>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '10px' }}>\n            🏃 다음 층으로 이동 중...\n          </div>\n          <div style={{\n            background: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            height: '8px',\n            overflow: 'hidden',\n            marginBottom: '10px'\n          }}>\n            <div style={{\n              background: 'linear-gradient(90deg, #10b981, #059669)',\n              height: '100%',\n              width: '100%',\n              borderRadius: '10px',\n              animation: 'progress 3s linear'\n            }} />\n          </div>\n          <div style={{ fontSize: '14px', opacity: 0.9 }}>\n            잠시만 기다려주세요...\n          </div>\n        </div>\n      )}\n\n      {/* 전투 영역 - 기존 renderCombatTab과 동일한 전투 시스템 */}\n        {currentMonster && (\n          <div style={{\n            background: '#374151',\n            borderRadius: '15px',\n            padding: '20px',\n            marginBottom: '20px'\n          }}>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>\n              {/* 캐릭터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  ⚔️\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {character.name} Lv.{character.level}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(character.hp / character.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {character.hp}/{character.maxHp}\n                  </div>\n                </div>\n              </div>\n\n              {/* 몬스터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  👹\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {currentMonster.name} Lv.{currentMonster.level}\n                  {currentMonster.isBoss && <span style={{ color: '#fbbf24' }}> 👑</span>}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(currentMonster.hp / currentMonster.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {currentMonster.hp}/{currentMonster.maxHp}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 전투 버튼들 */}\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginBottom: '20px' }}>\n              <button\n                onClick={attack}\n                disabled={character.hp <= 0}\n                style={{\n                  background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                  opacity: character.hp > 0 ? 1 : 0.5\n                }}\n              >\n                ⚔️ 공격\n              </button>\n              <button\n                onClick={() => setIsAutoFighting(!isAutoFighting)}\n                style={{\n                  background: isAutoFighting \n                    ? 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)'\n                    : 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: 'pointer'\n                }}\n              >\n                {isAutoFighting ? '⏸️ 자동 중지' : '▶️ 자동 전투'}\n              </button>\n            </div>\n\n            {/* 스킬 버튼들 */}\n            {character.skills.filter(skill => skill.type === 'active').length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  ✨ 스킬 사용 (MP: {character.mp}/{character.maxMp})\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {character.skills\n                    .filter(skill => skill.type === 'active')\n                    .map(skill => (\n                      <button\n                        key={skill.id}\n                        onClick={() => castSkill(skill)}\n                        disabled={character.hp <= 0 || skill.currentCooldown > 0 || character.mp < skill.manaCost}\n                        style={{\n                          background: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost\n                            ? 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)'\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '10px 16px',\n                          fontSize: '14px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${skill.description}\\n대미지: ${skill.damage + skill.level * 3} | 마나: ${skill.manaCost}`}\n                      >\n                        <div>{skill.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          MP: {skill.manaCost}\n                          {skill.currentCooldown > 0 && (\n                            <> | {(skill.currentCooldown/1000).toFixed(1)}s</>\n                          )}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 물약 버튼들 */}\n            {inventory.filter(item => item.type === 'consumable').length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  🧪 물약 사용\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {inventory\n                    .filter(item => item.type === 'consumable')\n                    .map(item => (\n                      <button\n                        key={item.id}\n                        onClick={() => consumeItem(item)}\n                        disabled={character.hp <= 0}\n                        style={{\n                          background: character.hp > 0\n                            ? `linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '8px 12px',\n                          fontSize: '12px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${item.name}\\n${item.consumableEffect?.healHp ? `HP +${item.consumableEffect.healHp}` : ''}${item.consumableEffect?.healMp ? `MP +${item.consumableEffect.healMp}` : ''}${item.consumableEffect?.buffType ? `${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}` : ''}`}\n                      >\n                        <div>{item.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          {item.quantity && item.quantity > 1 ? `x${item.quantity}` : ''}\n                          {item.consumableEffect?.healHp && ` HP+${item.consumableEffect.healHp}`}\n                          {item.consumableEffect?.healMp && ` MP+${item.consumableEffect.healMp}`}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 전투 로그 */}\n            <div style={{\n              background: '#1f2937',\n              borderRadius: '10px',\n              padding: '15px',\n              height: '200px',\n              overflowY: 'auto',\n              fontSize: '14px'\n            }}>\n              <div style={{ color: '#9ca3af', marginBottom: '10px', fontWeight: 'bold' }}>\n                전투 로그:\n              </div>\n              {combatLog.slice(-10).map((log, index) => (\n                <div key={index} style={{ color: '#e5e7eb', marginBottom: '5px', lineHeight: '1.4' }}>\n                  {log}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // 스킬 트리 렌더링\n  const renderSkillsTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>✨ 스킬 트리</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>스킬을 습득하고 레벨업하여 더욱 강해지세요!</p>\n      </div>\n\n      {/* 스킬 목록 */}\n      <div style={{ marginBottom: '20px' }}>\n        <h3 style={{ color: 'white', marginBottom: '15px', fontSize: '18px' }}>보유 스킬</h3>\n        <div style={{ display: 'grid', gap: '15px' }}>\n          {character.skills.map(skill => (\n            <div\n              key={skill.id}\n              style={{\n                background: '#374151',\n                borderRadius: '10px',\n                padding: '20px',\n                border: '2px solid #6366f1'\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                  <h4 style={{ color: 'white', margin: '0 0 5px 0', fontSize: '16px' }}>\n                    {skill.name} Lv.{skill.level}/{skill.maxLevel}\n                  </h4>\n                  <p style={{ color: '#9ca3af', margin: '0 0 10px 0', fontSize: '14px' }}>\n                    {skill.description}\n                  </p>\n                  <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                    {skill.type === 'active' ? (\n                      <>대미지: {skill.damage} | 마나: {skill.manaCost} | 쿨타임: {skill.cooldown/1000}초</>\n                    ) : (\n                      <>패시브 스킬</>\n                    )}\n                  </div>\n                  {skill.currentCooldown > 0 && (\n                    <div style={{ color: '#fbbf24', fontSize: '12px', marginTop: '5px' }}>\n                      쿨타임: {(skill.currentCooldown/1000).toFixed(1)}초\n                    </div>\n                  )}\n                </div>\n                <div style={{ display: 'flex', gap: '10px' }}>\n                  {skill.level < skill.maxLevel && (\n                    <button\n                      onClick={() => {\n                        const cost = skill.level * 100;\n                        if (character.gold >= cost) {\n                          setCharacter(prev => ({\n                            ...prev,\n                            gold: prev.gold - cost,\n                            skills: prev.skills.map(s => \n                              s.id === skill.id ? {...s, level: s.level + 1} : s\n                            )\n                          }));\n\n                          // 이벤트 로깅\n                          onAction('skill_upgraded', {\n                            skill_name: skill.name,\n                            old_level: skill.level,\n                            new_level: skill.level + 1,\n                            gold_cost: cost,\n                            character_level: character.level,\n                            character_gold_before: character.gold,\n                            character_gold_after: character.gold - cost\n                          });\n\n                          addToCombatLog(`${skill.name}을(를) 레벨업했다! (Lv.${skill.level + 1})`);\n                        }\n                      }}\n                      disabled={character.gold < skill.level * 100}\n                      style={{\n                        background: character.gold >= skill.level * 100\n                          ? 'linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)'\n                          : '#4b5563',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '8px',\n                        padding: '8px 12px',\n                        fontSize: '12px',\n                        cursor: character.gold >= skill.level * 100 ? 'pointer' : 'not-allowed'\n                      }}\n                    >\n                      업그레이드 ({skill.level * 100}G)\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCombatTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 캐릭터 정보 */}\n      <div style={{\n        background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white'\n      }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n          <div>\n            <h2 style={{ margin: '0 0 5px 0', fontSize: '24px' }}>{character.name}</h2>\n            <p style={{ margin: '0', opacity: 0.9 }}>Lv.{character.level} {character.class}</p>\n          </div>\n          <div style={{ textAlign: 'right' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold' }}>💰 {character.gold.toLocaleString()}</div>\n          </div>\n        </div>\n\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '15px' }}>\n          <div>\n            <div style={{ marginBottom: '8px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px' }}>\n                <span>HP</span>\n                <span>{character.hp}/{character.maxHp}</span>\n              </div>\n              <div style={{\n                background: 'rgba(255,255,255,0.2)',\n                borderRadius: '10px',\n                height: '8px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  background: '#ef4444',\n                  height: '100%',\n                  width: `${(character.hp / character.maxHp) * 100}%`,\n                  transition: 'width 0.3s ease'\n                }} />\n              </div>\n            </div>\n            <div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px' }}>\n                <span>MP</span>\n                <span>{character.mp}/{character.maxMp}</span>\n              </div>\n              <div style={{\n                background: 'rgba(255,255,255,0.2)',\n                borderRadius: '10px',\n                height: '8px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  background: '#3b82f6',\n                  height: '100%',\n                  width: `${(character.mp / character.maxMp) * 100}%`,\n                  transition: 'width 0.3s ease'\n                }} />\n              </div>\n            </div>\n          </div>\n          <div>\n            <div style={{ marginBottom: '8px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px' }}>\n                <span>EXP</span>\n                <span>{character.exp}/{character.maxExp}</span>\n              </div>\n              <div style={{\n                background: 'rgba(255,255,255,0.2)',\n                borderRadius: '10px',\n                height: '8px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  background: '#10b981',\n                  height: '100%',\n                  width: `${(character.exp / character.maxExp) * 100}%`,\n                  transition: 'width 0.3s ease'\n                }} />\n              </div>\n            </div>\n            <div style={{ display: 'flex', gap: '20px', fontSize: '14px' }}>\n              <span>⚔️ {character.attack}</span>\n              <span>🛡️ {character.defense}</span>\n              <span>💨 {character.speed}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 전투 영역 */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px',\n        marginBottom: '20px'\n      }}>\n        {/* 몬스터 정보 */}\n        <div style={{\n          background: '#374151',\n          borderRadius: '15px',\n          padding: '20px',\n          textAlign: 'center',\n          minHeight: '200px',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }}>\n          {currentMonster ? (\n            <>\n              <div style={{\n                fontSize: '48px',\n                marginBottom: '10px',\n                filter: currentMonster.isBoss ? 'drop-shadow(0 0 10px #fbbf24)' : 'none'\n              }}>\n                {currentMonster.isBoss ? '👑' : '👹'}\n              </div>\n              <h3 style={{ \n                color: currentMonster.isBoss ? '#fbbf24' : 'white', \n                margin: '0 0 10px 0' \n              }}>\n                {currentMonster.name} Lv.{currentMonster.level}\n              </h3>\n              <div style={{ color: '#9ca3af', marginBottom: '15px' }}>\n                HP: {currentMonster.hp}/{currentMonster.maxHp}\n              </div>\n              <div style={{\n                background: 'rgba(0,0,0,0.3)',\n                borderRadius: '10px',\n                height: '10px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  background: '#ef4444',\n                  height: '100%',\n                  width: `${(currentMonster.hp / currentMonster.maxHp) * 100}%`,\n                  transition: 'width 0.3s ease'\n                }} />\n              </div>\n            </>\n          ) : (\n            <div style={{ color: '#9ca3af' }}>몬스터를 찾는 중...</div>\n          )}\n        </div>\n\n        {/* 스킬 및 액션 */}\n        <div style={{\n          background: '#374151',\n          borderRadius: '15px',\n          padding: '20px'\n        }}>\n          <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>액션</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n            <button\n              onClick={attack}\n              disabled={!currentMonster || character.hp <= 0}\n              style={{\n                background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '10px',\n                padding: '12px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                opacity: character.hp > 0 ? 1 : 0.5\n              }}\n            >\n              ⚔️ 공격\n            </button>\n            \n            <button\n              onClick={() => setIsAutoFighting(!isAutoFighting)}\n              disabled={character.hp <= 0}\n              style={{\n                background: isAutoFighting \n                  ? 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)'\n                  : 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '10px',\n                padding: '12px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                opacity: character.hp > 0 ? 1 : 0.5\n              }}\n            >\n              {isAutoFighting ? '⏹️ 자동 중지' : '▶️ 자동 전투'}\n            </button>\n\n            <div style={{ marginTop: '10px' }}>\n              <h4 style={{ color: 'white', margin: '0 0 10px 0', fontSize: '14px' }}>스킬</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n                {character.skills.map(skill => (\n                  <button\n                    key={skill.id}\n                    onClick={() => {\n                      if (character.mp < skill.manaCost || skill.currentCooldown > 0) return;\n\n                      setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n\n                      if (skill.id === 'heal') {\n                        const healAmount = Math.floor(character.maxHp * 0.3);\n                        setCharacter(prev => ({ \n                          ...prev, \n                          hp: Math.min(prev.maxHp, prev.hp + healAmount) \n                        }));\n                        addToCombatLog(`치유 스킬 사용! HP +${healAmount}`);\n                      } else {\n                        // 공격 스킬\n                        if (currentMonster) {\n                          const damage = skill.damage + Math.floor(character.attack * 0.5);\n                          const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n                          setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n                          addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);\n\n                          if (newMonsterHp <= 0) {\n                            defeatMonster();\n                          }\n                        }\n                      }\n\n                      // 쿨다운 설정\n                      setCharacter(prev => ({\n                        ...prev,\n                        skills: prev.skills.map(s => \n                          s.id === skill.id ? { ...s, currentCooldown: skill.cooldown } : s\n                        )\n                      }));\n                    }}\n                    disabled={character.mp < skill.manaCost || skill.currentCooldown > 0}\n                    style={{\n                      background: skill.currentCooldown > 0 || character.mp < skill.manaCost \n                        ? '#6b7280' \n                        : 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '8px',\n                      padding: '8px 12px',\n                      fontSize: '14px',\n                      cursor: (character.mp >= skill.manaCost && skill.currentCooldown === 0) ? 'pointer' : 'not-allowed',\n                      opacity: (character.mp >= skill.manaCost && skill.currentCooldown === 0) ? 1 : 0.6\n                    }}\n                  >\n                    {skill.name} (MP: {skill.manaCost})\n                    {skill.currentCooldown > 0 && ` (${Math.ceil(skill.currentCooldown / 1000)}s)`}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 전투 로그 */}\n      <div style={{\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      }}>\n        <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>전투 로그</h3>\n        <div\n          ref={logRef}\n          style={{\n            height: '150px',\n            overflowY: 'auto',\n            background: '#1f2937',\n            borderRadius: '10px',\n            padding: '15px',\n            fontFamily: 'monospace',\n            fontSize: '14px'\n          }}\n        >\n          {combatLog.map((log, index) => (\n            <div\n              key={index}\n              style={{\n                color: log.includes('레벨업') ? '#10b981' :\n                       log.includes('치명타') ? '#ef4444' :\n                       log.includes('획득') ? '#fbbf24' : '#d1d5db',\n                marginBottom: '2px',\n                lineHeight: '1.4'\n              }}\n            >\n              {log}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCharacterTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '20px'\n      }}>\n        {/* 스탯 */}\n        <div style={{\n          background: '#374151',\n          borderRadius: '15px',\n          padding: '20px'\n        }}>\n          <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>스탯</h3>\n          <div style={{ color: 'white', marginBottom: '15px' }}>\n            사용 가능한 포인트: <span style={{ color: '#fbbf24', fontWeight: 'bold' }}>{character.stats.availablePoints}</span>\n          </div>\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n            {Object.entries(character.stats).map(([key, value]) => {\n              if (key === 'availablePoints') return null;\n              \n              const statNames = {\n                strength: '힘',\n                agility: '민첩',\n                intelligence: '지능',\n                vitality: '체력',\n                luck: '운'\n              };\n              \n              return (\n                <div key={key} style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  background: '#1f2937',\n                  padding: '10px 15px',\n                  borderRadius: '10px'\n                }}>\n                  <span style={{ color: '#ffffff', fontWeight: '500' }}>\n                    {statNames[key as keyof typeof statNames]}: <span style={{ color: '#fbbf24' }}>{value}</span>\n                  </span>\n                  <button\n                    onClick={() => allocateStat(key as keyof CharacterStats)}\n                    disabled={character.stats.availablePoints <= 0}\n                    style={{\n                      background: character.stats.availablePoints > 0 ? '#10b981' : '#6b7280',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      padding: '5px 10px',\n                      cursor: character.stats.availablePoints > 0 ? 'pointer' : 'not-allowed'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* 장비 */}\n        <div style={{\n          background: '#374151',\n          borderRadius: '15px',\n          padding: '20px'\n        }}>\n          <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>장비</h3>\n          \n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '10px'\n          }}>\n            {['weapon', 'helmet', 'armor', 'boots', 'ring', 'amulet'].map(slot => {\n              const item = character.equipment[slot as keyof Equipment];\n              const slotNames = {\n                weapon: '무기',\n                helmet: '투구',\n                armor: '갑옷',\n                boots: '신발',\n                ring: '반지',\n                amulet: '목걸이'\n              };\n\n              return (\n                <div\n                  key={slot}\n                  onClick={() => {\n                    if (item) {\n                      unequipItem(slot as keyof Equipment);\n                    }\n                  }}\n                  style={{\n                    background: item ? getRarityColor(item.rarity) : '#1f2937',\n                    borderRadius: '10px',\n                    padding: '15px',\n                    textAlign: 'center',\n                    minHeight: '80px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    border: `2px solid ${item ? getRarityColor(item.rarity) : '#4b5563'}`,\n                    cursor: item ? 'pointer' : 'default',\n                    transition: 'all 0.3s ease',\n                    opacity: item ? 1 : 0.7\n                  }}\n                  onMouseEnter={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = 'scale(1.05)';\n                      e.currentTarget.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.3)';\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (item) {\n                      e.currentTarget.style.transform = 'scale(1)';\n                      e.currentTarget.style.boxShadow = 'none';\n                    }\n                  }}\n                >\n                  <div style={{ fontSize: '12px', color: '#9ca3af', marginBottom: '5px' }}>\n                    {slotNames[slot as keyof typeof slotNames]}\n                  </div>\n                  {item ? (\n                    <>\n                      <div style={{ color: 'white', fontSize: '14px', fontWeight: 'bold' }}>\n                        {item.name}\n                      </div>\n                      {item.enhancement > 0 && (\n                        <div style={{ color: '#fbbf24', fontSize: '12px' }}>\n                          +{item.enhancement}\n                        </div>\n                      )}\n                      <div style={{ fontSize: '10px', color: '#9ca3af', marginTop: '5px' }}>\n                        클릭하여 해제\n                      </div>\n                    </>\n                  ) : (\n                    <div style={{ color: '#6b7280', fontSize: '12px' }}>빈 슬롯</div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderInventoryTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      }}>\n        <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>인벤토리 ({inventory.length}개)</h3>\n        \n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n          gap: '15px'\n        }}>\n          {inventory.map(item => (\n            <div\n              key={item.id}\n              style={{\n                background: '#1f2937',\n                border: `2px solid ${getRarityColor(item.rarity)}`,\n                borderRadius: '10px',\n                padding: '15px'\n              }}\n            >\n              <div style={{\n                color: getRarityColor(item.rarity),\n                fontWeight: 'bold',\n                marginBottom: '5px'\n              }}>\n                {item.name}\n              </div>\n              \n              <div style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '10px' }}>\n                {item.type} • Lv.{item.level}\n              </div>\n\n              <div style={{ color: '#d1d5db', fontSize: '12px', marginBottom: '10px' }}>\n                {Object.entries(item.stats).map(([key, value]) => \n                  value > 0 && (\n                    <div key={key}>\n                      {key === 'attack' ? '⚔️' :\n                       key === 'defense' ? '🛡️' :\n                       key === 'hp' ? '❤️' :\n                       key === 'mp' ? '💙' :\n                       key === 'speed' ? '💨' :\n                       key === 'critRate' ? '💥' : '⭐'} +{value}\n                    </div>\n                  )\n                )}\n              </div>\n\n              <div style={{ display: 'flex', gap: '5px' }}>\n                {item.type !== 'consumable' && (\n                  <button\n                    onClick={() => equipItem(item)}\n                    style={{\n                      background: '#10b981',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      padding: '8px 12px',\n                      fontSize: '12px',\n                      cursor: 'pointer',\n                      flex: 1\n                    }}\n                  >\n                    장착\n                  </button>\n                )}\n                {item.type === 'consumable' && (\n                  <button\n                    onClick={() => consumeItem(item)}\n                    style={{\n                      background: '#3b82f6',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      padding: '8px 12px',\n                      fontSize: '12px',\n                      cursor: 'pointer',\n                      flex: 1\n                    }}\n                  >\n                    사용\n                  </button>\n                )}\n                <button\n                  onClick={() => sellItem(item)}\n                  style={{\n                    background: '#ef4444',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px',\n                    padding: '8px 12px',\n                    fontSize: '12px',\n                    cursor: 'pointer',\n                    flex: 1\n                  }}\n                >\n                  판매 ({Math.floor(item.price * 0.7)}G)\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderShopTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      }}>\n        <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>상점</h3>\n        \n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '15px'\n        }}>\n          {shop.map(item => (\n            <div\n              key={item.id}\n              style={{\n                background: '#1f2937',\n                border: `2px solid ${getRarityColor(item.rarity)}`,\n                borderRadius: '10px',\n                padding: '15px'\n              }}\n            >\n              <div style={{\n                color: getRarityColor(item.rarity),\n                fontWeight: 'bold',\n                marginBottom: '5px'\n              }}>\n                {item.name}\n              </div>\n              \n              <div style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '10px' }}>\n                {item.type} • Lv.{item.level} • {item.rarity}\n              </div>\n\n              <div style={{ color: '#d1d5db', fontSize: '12px', marginBottom: '15px' }}>\n                {Object.entries(item.stats).map(([key, value]) => \n                  value > 0 && (\n                    <div key={key}>\n                      {key === 'attack' ? '⚔️' :\n                       key === 'defense' ? '🛡️' :\n                       key === 'hp' ? '❤️' :\n                       key === 'mp' ? '💙' :\n                       key === 'speed' ? '💨' :\n                       key === 'critRate' ? '💥' : '⭐'} +{value}\n                    </div>\n                  )\n                )}\n              </div>\n\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}>\n                <div style={{ color: '#fbbf24', fontWeight: 'bold' }}>\n                  💰 {item.price.toLocaleString()}G\n                </div>\n                <button\n                  onClick={() => buyItem(item)}\n                  disabled={character.gold < item.price}\n                  style={{\n                    background: character.gold >= item.price ? '#10b981' : '#6b7280',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px',\n                    padding: '8px 16px',\n                    fontSize: '12px',\n                    cursor: character.gold >= item.price ? 'pointer' : 'not-allowed',\n                    opacity: character.gold >= item.price ? 1 : 0.6\n                  }}\n                >\n                  구매\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTabs = () => (\n    <div style={{\n      background: '#374151',\n      display: 'flex',\n      borderRadius: '15px 15px 0 0',\n      overflow: 'hidden'\n    }}>\n      {[\n        { id: 'lobby', name: t('rpg.tabs.lobby'), icon: '🏠' },\n        { id: 'character', name: t('rpg.tabs.character'), icon: '👤' },\n        { id: 'inventory', name: t('rpg.tabs.inventory'), icon: '🎒' },\n        { id: 'skills', name: t('rpg.tabs.skills'), icon: '✨' },\n        { id: 'dungeon', name: t('rpg.tabs.dungeon'), icon: '🏰' },\n        { id: 'shop', name: t('rpg.tabs.shop'), icon: '🛒' }\n      ].map(tab => (\n        <button\n          key={tab.id}\n          onClick={() => setCurrentTab(tab.id as any)}\n          style={{\n            background: currentTab === tab.id \n              ? colors.accent\n              : 'transparent',\n            color: colors.text,\n            border: 'none',\n            padding: '15px 20px',\n            fontSize: '14px',\n            cursor: 'pointer',\n            flex: 1,\n            transition: 'all 0.3s ease'\n          }}\n        >\n          <div>{tab.icon}</div>\n          <div style={{ fontSize: '12px', marginTop: '5px' }}>{tab.name}</div>\n        </button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{\n      width: '100%',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      background: colors.cardBg,\n      borderRadius: '20px',\n      overflow: 'hidden',\n      boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      border: `1px solid ${colors.cardBorder}`\n    }}>\n      {/* 게임 타이틀 */}\n      <div style={{\n        background: colors.backgroundSecondary,\n        padding: '20px',\n        textAlign: 'center',\n        position: 'relative',\n        overflow: 'hidden'\n      }}>\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'\n        }} />\n        <h1 style={{\n          margin: 0,\n          fontSize: '32px',\n          fontWeight: 'bold',\n          color: colors.text,\n          textShadow: '0 4px 20px rgba(147, 51, 234, 0.5)',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.title')}\n        </h1>\n        <p style={{\n          margin: '10px 0 0 0',\n          color: colors.textSecondary,\n          fontSize: '16px',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.subtitle')}\n        </p>\n      </div>\n\n      {/* 탭 메뉴 */}\n      {renderTabs()}\n\n      {/* 현재 탭 컨텐츠 */}\n      {currentTab === 'lobby' && renderLobbyTab()}\n      {currentTab === 'dungeon' && renderDungeonTab()}\n      {currentTab === 'character' && renderCharacterTab()}\n      {currentTab === 'inventory' && renderInventoryTab()}\n      {currentTab === 'skills' && renderSkillsTab()}\n      {currentTab === 'shop' && renderShopTab()}\n\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}