{"ast":null,"code":"/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nconst toKebabCase = string => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef((_ref, ref) => {\n    let {\n      color = \"currentColor\",\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      className = \"\",\n      children,\n      ...rest\n    } = _ref;\n    return createElement(\"svg\", {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\n      ...rest\n    }, [...iconNode.map(_ref2 => {\n      let [tag, attrs] = _ref2;\n      return createElement(tag, attrs);\n    }), ...(Array.isArray(children) ? children : [children])]);\n  });\n  Component.displayName = `${iconName}`;\n  return Component;\n};\nexport { createLucideIcon as default, toKebabCase };","map":{"version":3,"names":["toKebabCase","string","replace","toLowerCase","trim","createLucideIcon","iconName","iconNode","Component","forwardRef","_ref","ref","color","size","strokeWidth","absoluteStrokeWidth","className","children","rest","createElement","defaultAttributes","width","height","stroke","Number","join","map","_ref2","tag","attrs","Array","isArray","displayName"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/node_modules/lucide-react/src/createLucideIcon.ts"],"sourcesContent":["import {\n  forwardRef,\n  createElement,\n  ReactSVG,\n  SVGProps,\n  ForwardRefExoticComponent,\n  RefAttributes,\n} from 'react';\nimport defaultAttributes from './defaultAttributes';\n\nexport type IconNode = [elementName: keyof ReactSVG, attrs: Record<string, string>][];\n\nexport type SVGAttributes = Partial<SVGProps<SVGSVGElement>>;\ntype ComponentAttributes = RefAttributes<SVGSVGElement> & SVGAttributes;\n\nexport interface LucideProps extends ComponentAttributes {\n  size?: string | number;\n  absoluteStrokeWidth?: boolean;\n}\n\nexport type LucideIcon = ForwardRefExoticComponent<LucideProps>;\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) =>\n  string\n    .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n    .toLowerCase()\n    .trim();\n\nconst createLucideIcon = (iconName: string, iconNode: IconNode): LucideIcon => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(\n    ({ color = 'currentColor', size = 24, strokeWidth = 2, absoluteStrokeWidth, className = '', children, ...rest }, ref) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: ['lucide', `lucide-${toKebabCase(iconName)}`, className].join(' '),\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ]\n      )\n  );\n\n  Component.displayName = `${iconName}`;\n\n  return Component;\n};\n\nexport default createLucideIcon;\n"],"mappings":";;;;;;;;;AA6Ba,MAAAA,WAAA,GAAeC,MAAA,IAC1BA,MACG,CAAAC,OAAA,CAAQ,sBAAsB,OAAO,EACrCC,WAAY,GACZC,IAAK;AAEJ,MAAAC,gBAAA,GAAmBA,CAACC,QAAA,EAAkBC,QAAmC;EAC7E,MAAMC,SAAY,GAAAC,UAAA,CAChB,CAAAC,IAAA,EAAiHC,GAC/G;IAAA,IADD;MAAEC,KAAQ;MAAgBC,IAAA,GAAO,EAAI;MAAAC,WAAA,GAAc,CAAG;MAAAC,mBAAA;MAAqBC,SAAY;MAAIC,QAAa;MAAA,GAAAC;IAAA,IAAAR,IAAA;IAAA,OACvGS,aAAA,CACE,OACA;MACER,GAAA;MACA,GAAGS,iBAAA;MACHC,KAAO,EAAAR,IAAA;MACPS,MAAQ,EAAAT,IAAA;MACRU,MAAQ,EAAAX,KAAA;MACRE,WAAA,EAAaC,mBAAA,GAAsBS,MAAO,CAAAV,WAAW,IAAI,EAAK,GAAAU,MAAA,CAAOX,IAAI,CAAI,GAAAC,WAAA;MAC7EE,SAAA,EAAW,CAAC,UAAU,UAAUhB,WAAA,CAAYM,QAAQ,CAAK,IAAAU,SAAS,CAAE,CAAAS,IAAA,CAAK,GAAG;MAC5E,GAAGP;IACL,GACA,CACE,GAAGX,QAAS,CAAAmB,GAAA,CAAIC,KAAA;MAAA,IAAC,CAACC,GAAK,EAAAC,KAAK,CAAM,GAAAF,KAAA;MAAA,OAAAR,aAAA,CAAcS,GAAK,EAAAC,KAAK,CAAC;IAAA,IAC3D,IAAIC,KAAM,CAAAC,OAAA,CAAQd,QAAQ,CAAI,GAAAA,QAAA,GAAW,CAACA,QAAQ,GAEtD;EAAA,EACJ;EAEAT,SAAA,CAAUwB,WAAA,GAAc,GAAG1B,QAAA;EAEpB,OAAAE,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}