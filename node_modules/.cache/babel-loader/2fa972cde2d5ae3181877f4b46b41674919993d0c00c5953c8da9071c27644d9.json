{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ActionRPGGame=_ref=>{let{onAction,playerStats,setPlayerStats,currentUser}=_ref;const canvasRef=useRef(null);const gameLoopRef=useRef();const keysRef=useRef(new Set());// Game state\nconst[gameState,setGameState]=useState({scene:'playing',cameraX:0,cameraY:0,worldWidth:1200,worldHeight:800});// Player state\nconst[player,setPlayer]=useState({x:300,y:250,width:32,height:32,health:playerStats.health||100,maxHealth:100,direction:'down',isMoving:false,animationFrame:0,attackCooldown:0});// Enemies state\nconst[enemies,setEnemies]=useState([]);// Items state\nconst[items,setItems]=useState([]);// Animation frame counter\nconst[frameCount,setFrameCount]=useState(0);// Initialize game world\nuseEffect(()=>{generateEnemies();generateItems();},[]);const generateEnemies=()=>{const newEnemies=[];const enemyTypes=['slime','orc','goblin','skeleton'];for(let i=0;i<8;i++){newEnemies.push({id:`enemy_${i}`,x:Math.random()*(gameState.worldWidth-100)+50,y:Math.random()*(gameState.worldHeight-100)+50,width:28,height:28,health:30+Math.random()*40,maxHealth:50,type:enemyTypes[Math.floor(Math.random()*enemyTypes.length)],lastAttack:0,direction:Math.random()*Math.PI*2,speed:0.5+Math.random()*1,alive:true});}setEnemies(newEnemies);};const generateItems=()=>{const newItems=[];const itemTypes=['potion','gold','gem'];for(let i=0;i<12;i++){newItems.push({id:`item_${i}`,x:Math.random()*(gameState.worldWidth-100)+50,y:Math.random()*(gameState.worldHeight-100)+50,type:itemTypes[Math.floor(Math.random()*itemTypes.length)],collected:false});}setItems(newItems);};// Keyboard handling\nuseEffect(()=>{const handleKeyDown=e=>{keysRef.current.add(e.key.toLowerCase());};const handleKeyUp=e=>{keysRef.current.delete(e.key.toLowerCase());};window.addEventListener('keydown',handleKeyDown);window.addEventListener('keyup',handleKeyUp);return()=>{window.removeEventListener('keydown',handleKeyDown);window.removeEventListener('keyup',handleKeyUp);};},[]);// Game logic\nconst updatePlayer=useCallback(()=>{setPlayer(prev=>{const newPlayer={...prev};const keys=keysRef.current;const speed=3;let moving=false;let newX=newPlayer.x;let newY=newPlayer.y;// Movement\nif(keys.has('w')||keys.has('arrowup')){newY-=speed;newPlayer.direction='up';moving=true;}if(keys.has('s')||keys.has('arrowdown')){newY+=speed;newPlayer.direction='down';moving=true;}if(keys.has('a')||keys.has('arrowleft')){newX-=speed;newPlayer.direction='left';moving=true;}if(keys.has('d')||keys.has('arrowright')){newX+=speed;newPlayer.direction='right';moving=true;}// Boundary checking\nnewX=Math.max(16,Math.min(gameState.worldWidth-16,newX));newY=Math.max(16,Math.min(gameState.worldHeight-16,newY));newPlayer.x=newX;newPlayer.y=newY;newPlayer.isMoving=moving;// Attack\nif(keys.has(' ')&&newPlayer.attackCooldown<=0){newPlayer.attackCooldown=30;// 30 frames cooldown\nperformAttack(newPlayer);}if(newPlayer.attackCooldown>0){newPlayer.attackCooldown--;}// Animation\nif(moving){newPlayer.animationFrame=(newPlayer.animationFrame+1)%60;}else{newPlayer.animationFrame=0;}return newPlayer;});},[gameState.worldWidth,gameState.worldHeight]);const performAttack=playerState=>{const attackRange=50;const attackDamage=15+Math.random()*10;setEnemies(prev=>prev.map(enemy=>{if(!enemy.alive)return enemy;const dx=enemy.x-playerState.x;const dy=enemy.y-playerState.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<=attackRange){const newHealth=Math.max(0,enemy.health-attackDamage);const killed=newHealth<=0;if(killed){// Enemy defeated\nconst expGain=25+Math.random()*15;const goldGain=10+Math.random()*20;setPlayerStats(prev=>({...prev,experience:prev.experience+expGain,gold:prev.gold+goldGain}));onAction('enemy_defeated',{enemy_type:enemy.type,enemy_id:enemy.id,damage_dealt:attackDamage,exp_gained:expGain,gold_gained:goldGain,player_x:playerState.x,player_y:playerState.y,enemy_x:enemy.x,enemy_y:enemy.y});return{...enemy,health:0,alive:false};}else{onAction('enemy_attacked',{enemy_type:enemy.type,enemy_id:enemy.id,damage_dealt:attackDamage,enemy_health_remaining:newHealth,player_x:playerState.x,player_y:playerState.y});return{...enemy,health:newHealth};}}return enemy;}));};const updateEnemies=useCallback(()=>{setEnemies(prev=>prev.map(enemy=>{if(!enemy.alive)return enemy;const dx=player.x-enemy.x;const dy=player.y-enemy.y;const distance=Math.sqrt(dx*dx+dy*dy);// AI behavior\nif(distance<100){// Chase player\nconst angle=Math.atan2(dy,dx);enemy.x+=Math.cos(angle)*enemy.speed;enemy.y+=Math.sin(angle)*enemy.speed;// Attack player if close enough\nif(distance<35&&Date.now()-enemy.lastAttack>1500){const damage=8+Math.random()*12;setPlayer(prev=>({...prev,health:Math.max(0,prev.health-damage)}));setPlayerStats(prev=>({...prev,health:Math.max(0,prev.health-damage)}));onAction('player_damaged',{damage_taken:damage,enemy_type:enemy.type,enemy_id:enemy.id,player_health_remaining:Math.max(0,player.health-damage)});enemy.lastAttack=Date.now();}}else{// Wander randomly\nenemy.direction+=(Math.random()-0.5)*0.2;enemy.x+=Math.cos(enemy.direction)*enemy.speed*0.3;enemy.y+=Math.sin(enemy.direction)*enemy.speed*0.3;}// Keep enemies in bounds\nenemy.x=Math.max(14,Math.min(gameState.worldWidth-14,enemy.x));enemy.y=Math.max(14,Math.min(gameState.worldHeight-14,enemy.y));return enemy;}));},[player.x,player.y,player.health,gameState.worldWidth,gameState.worldHeight,onAction,setPlayerStats]);const checkItemCollisions=useCallback(()=>{setItems(prev=>prev.map(item=>{if(item.collected)return item;const dx=item.x-player.x;const dy=item.y-player.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<25){// Collect item\nlet goldGain=0;let healthGain=0;switch(item.type){case'gold':goldGain=15+Math.random()*25;setPlayerStats(prev=>({...prev,gold:prev.gold+goldGain}));break;case'potion':healthGain=30+Math.random()*20;setPlayerStats(prev=>({...prev,health:Math.min(100,prev.health+healthGain)}));break;case'gem':goldGain=50+Math.random()*50;setPlayerStats(prev=>({...prev,gold:prev.gold+goldGain}));break;}onAction('item_collected',{item_type:item.type,item_id:item.id,gold_gained:goldGain,health_gained:healthGain,player_x:player.x,player_y:player.y,item_x:item.x,item_y:item.y});return{...item,collected:true};}return item;}));},[player.x,player.y,onAction,setPlayerStats]);// Drawing functions\nconst drawPlayer=(ctx,x,y)=>{const size=player.width;// Body\nctx.fillStyle='#4a90e2';ctx.fillRect(x-size/2,y-size/2,size,size);// Direction indicator\nctx.fillStyle='#2c5aa0';const dirOffset=8;switch(player.direction){case'up':ctx.fillRect(x-4,y-size/2-dirOffset,8,6);break;case'down':ctx.fillRect(x-4,y+size/2+dirOffset-6,8,6);break;case'left':ctx.fillRect(x-size/2-dirOffset,y-4,6,8);break;case'right':ctx.fillRect(x+size/2+dirOffset-6,y-4,6,8);break;}// Animation effect when moving\nif(player.isMoving){const wobble=Math.sin(player.animationFrame*0.3)*2;ctx.fillStyle='rgba(74, 144, 226, 0.3)';ctx.fillRect(x-size/2+wobble,y-size/2,size,size);}// Health bar\nconst barWidth=40;const barHeight=6;const healthPercent=player.health/player.maxHealth;ctx.fillStyle='#ff4757';ctx.fillRect(x-barWidth/2,y-size/2-15,barWidth,barHeight);ctx.fillStyle='#2ed573';ctx.fillRect(x-barWidth/2,y-size/2-15,barWidth*healthPercent,barHeight);};const drawEnemy=(ctx,enemy)=>{if(!enemy.alive)return;const colors={slime:'#47c83e',orc:'#8b4513',goblin:'#9b59b6',skeleton:'#95a5a6'};const x=enemy.x-gameState.cameraX;const y=enemy.y-gameState.cameraY;const size=enemy.width;// Enemy body\nctx.fillStyle=colors[enemy.type];ctx.fillRect(x-size/2,y-size/2,size,size);// Enemy eyes\nctx.fillStyle='#ff4757';ctx.fillRect(x-6,y-8,4,4);ctx.fillRect(x+2,y-8,4,4);// Health bar\nconst barWidth=30;const barHeight=4;const healthPercent=enemy.health/enemy.maxHealth;ctx.fillStyle='#ff4757';ctx.fillRect(x-barWidth/2,y-size/2-10,barWidth,barHeight);ctx.fillStyle='#2ed573';ctx.fillRect(x-barWidth/2,y-size/2-10,barWidth*healthPercent,barHeight);};const drawItem=(ctx,item)=>{if(item.collected)return;const x=item.x-gameState.cameraX;const y=item.y-gameState.cameraY;const colors={potion:'#e74c3c',gold:'#f1c40f',gem:'#9b59b6'};// Item glow effect\nconst glowIntensity=Math.sin(frameCount*0.1)*0.3+0.7;ctx.fillStyle=colors[item.type];ctx.globalAlpha=glowIntensity;ctx.fillRect(x-8,y-8,16,16);ctx.globalAlpha=1;// Item core\nctx.fillStyle=colors[item.type];ctx.fillRect(x-6,y-6,12,12);};const draw=useCallback(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Clear canvas\nctx.fillStyle='#2d5016';ctx.fillRect(0,0,canvas.width,canvas.height);// Update camera to follow player\nconst targetCameraX=player.x-canvas.width/2;const targetCameraY=player.y-canvas.height/2;setGameState(prev=>({...prev,cameraX:Math.max(0,Math.min(prev.worldWidth-canvas.width,targetCameraX)),cameraY:Math.max(0,Math.min(prev.worldHeight-canvas.height,targetCameraY))}));// Draw grid\nctx.strokeStyle='rgba(255, 255, 255, 0.1)';ctx.lineWidth=1;for(let x=0;x<gameState.worldWidth;x+=50){const screenX=x-gameState.cameraX;if(screenX>=-50&&screenX<=canvas.width+50){ctx.beginPath();ctx.moveTo(screenX,0);ctx.lineTo(screenX,canvas.height);ctx.stroke();}}for(let y=0;y<gameState.worldHeight;y+=50){const screenY=y-gameState.cameraY;if(screenY>=-50&&screenY<=canvas.height+50){ctx.beginPath();ctx.moveTo(0,screenY);ctx.lineTo(canvas.width,screenY);ctx.stroke();}}// Draw items\nitems.forEach(item=>drawItem(ctx,item));// Draw enemies\nenemies.forEach(enemy=>drawEnemy(ctx,enemy));// Draw player\ndrawPlayer(ctx,player.x-gameState.cameraX,player.y-gameState.cameraY);// Draw UI\ndrawUI(ctx,canvas);},[player,enemies,items,gameState,frameCount]);const drawUI=(ctx,canvas)=>{// Stats panel\nctx.fillStyle='rgba(0, 0, 0, 0.7)';ctx.fillRect(10,10,200,120);ctx.fillStyle='#ffffff';ctx.font='14px Arial';ctx.fillText(`Level: ${playerStats.level}`,20,30);ctx.fillText(`Health: ${player.health}/100`,20,50);ctx.fillText(`Gold: ${playerStats.gold}`,20,70);ctx.fillText(`Experience: ${playerStats.experience}`,20,90);// Controls\nctx.fillStyle='#ffffff';ctx.font='12px Arial';ctx.fillText('WASD: Move',20,110);ctx.fillText('Space: Attack',20,125);// Enemy count\nconst aliveEnemies=enemies.filter(e=>e.alive).length;ctx.fillText(`Enemies: ${aliveEnemies}`,20,145);};// Game loop\nuseEffect(()=>{const gameLoop=()=>{updatePlayer();updateEnemies();checkItemCollisions();draw();setFrameCount(prev=>prev+1);gameLoopRef.current=requestAnimationFrame(gameLoop);};gameLoopRef.current=requestAnimationFrame(gameLoop);return()=>{if(gameLoopRef.current){cancelAnimationFrame(gameLoopRef.current);}};},[updatePlayer,updateEnemies,checkItemCollisions,draw]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',background:'#1a1a1a',borderRadius:'12px',padding:'16px'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:600,height:400,style:{border:'2px solid #444',borderRadius:'8px',background:'#2d5016',cursor:'crosshair'},tabIndex:0}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px',color:'#ffffff',fontSize:'14px',textAlign:'center',maxWidth:'600px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDFAE \",/*#__PURE__*/_jsx(\"strong\",{children:\"2D Action RPG\"}),\" - WASD\\uB85C \\uC774\\uB3D9, Space\\uB85C \\uACF5\\uACA9!\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uBAAC\\uC2A4\\uD130\\uB97C \\uCC98\\uCE58\\uD558\\uACE0 \\uC544\\uC774\\uD15C\\uC744 \\uC218\\uC9D1\\uD558\\uBA74\\uC11C \\uB808\\uBCA8\\uC5C5\\uD558\\uC138\\uC694!\"})]})]});};","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","ActionRPGGame","_ref","onAction","playerStats","setPlayerStats","currentUser","canvasRef","gameLoopRef","keysRef","Set","gameState","setGameState","scene","cameraX","cameraY","worldWidth","worldHeight","player","setPlayer","x","y","width","height","health","maxHealth","direction","isMoving","animationFrame","attackCooldown","enemies","setEnemies","items","setItems","frameCount","setFrameCount","generateEnemies","generateItems","newEnemies","enemyTypes","i","push","id","Math","random","type","floor","length","lastAttack","PI","speed","alive","newItems","itemTypes","collected","handleKeyDown","e","current","add","key","toLowerCase","handleKeyUp","delete","window","addEventListener","removeEventListener","updatePlayer","prev","newPlayer","keys","moving","newX","newY","has","max","min","performAttack","playerState","attackRange","attackDamage","map","enemy","dx","dy","distance","sqrt","newHealth","killed","expGain","goldGain","experience","gold","enemy_type","enemy_id","damage_dealt","exp_gained","gold_gained","player_x","player_y","enemy_x","enemy_y","enemy_health_remaining","updateEnemies","angle","atan2","cos","sin","Date","now","damage","damage_taken","player_health_remaining","checkItemCollisions","item","healthGain","item_type","item_id","health_gained","item_x","item_y","drawPlayer","ctx","size","fillStyle","fillRect","dirOffset","wobble","barWidth","barHeight","healthPercent","drawEnemy","colors","slime","orc","goblin","skeleton","drawItem","potion","gem","glowIntensity","globalAlpha","draw","canvas","getContext","targetCameraX","targetCameraY","strokeStyle","lineWidth","screenX","beginPath","moveTo","lineTo","stroke","screenY","forEach","drawUI","font","fillText","level","aliveEnemies","filter","gameLoop","requestAnimationFrame","cancelAnimationFrame","style","display","flexDirection","alignItems","background","borderRadius","padding","children","ref","border","cursor","tabIndex","marginTop","color","fontSize","textAlign","maxWidth"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/ActionRPGGame.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface GameProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  playerStats: any;\n  setPlayerStats: (stats: any) => void;\n  currentUser: any;\n}\n\ninterface Player {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  health: number;\n  maxHealth: number;\n  direction: 'up' | 'down' | 'left' | 'right';\n  isMoving: boolean;\n  animationFrame: number;\n  attackCooldown: number;\n}\n\ninterface Enemy {\n  id: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  health: number;\n  maxHealth: number;\n  type: 'slime' | 'orc' | 'goblin' | 'skeleton';\n  lastAttack: number;\n  direction: number;\n  speed: number;\n  alive: boolean;\n}\n\ninterface GameItem {\n  id: string;\n  x: number;\n  y: number;\n  type: 'potion' | 'gold' | 'gem';\n  collected: boolean;\n}\n\nexport const ActionRPGGame: React.FC<GameProps> = ({\n  onAction,\n  playerStats,\n  setPlayerStats,\n  currentUser\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number>();\n  const keysRef = useRef<Set<string>>(new Set());\n  \n  // Game state\n  const [gameState, setGameState] = useState({\n    scene: 'playing' as 'playing' | 'paused' | 'inventory',\n    cameraX: 0,\n    cameraY: 0,\n    worldWidth: 1200,\n    worldHeight: 800,\n  });\n\n  // Player state\n  const [player, setPlayer] = useState<Player>({\n    x: 300,\n    y: 250,\n    width: 32,\n    height: 32,\n    health: playerStats.health || 100,\n    maxHealth: 100,\n    direction: 'down',\n    isMoving: false,\n    animationFrame: 0,\n    attackCooldown: 0,\n  });\n\n  // Enemies state\n  const [enemies, setEnemies] = useState<Enemy[]>([]);\n  \n  // Items state\n  const [items, setItems] = useState<GameItem[]>([]);\n\n  // Animation frame counter\n  const [frameCount, setFrameCount] = useState(0);\n\n  // Initialize game world\n  useEffect(() => {\n    generateEnemies();\n    generateItems();\n  }, []);\n\n  const generateEnemies = () => {\n    const newEnemies: Enemy[] = [];\n    const enemyTypes: Enemy['type'][] = ['slime', 'orc', 'goblin', 'skeleton'];\n    \n    for (let i = 0; i < 8; i++) {\n      newEnemies.push({\n        id: `enemy_${i}`,\n        x: Math.random() * (gameState.worldWidth - 100) + 50,\n        y: Math.random() * (gameState.worldHeight - 100) + 50,\n        width: 28,\n        height: 28,\n        health: 30 + Math.random() * 40,\n        maxHealth: 50,\n        type: enemyTypes[Math.floor(Math.random() * enemyTypes.length)],\n        lastAttack: 0,\n        direction: Math.random() * Math.PI * 2,\n        speed: 0.5 + Math.random() * 1,\n        alive: true,\n      });\n    }\n    setEnemies(newEnemies);\n  };\n\n  const generateItems = () => {\n    const newItems: GameItem[] = [];\n    const itemTypes: GameItem['type'][] = ['potion', 'gold', 'gem'];\n    \n    for (let i = 0; i < 12; i++) {\n      newItems.push({\n        id: `item_${i}`,\n        x: Math.random() * (gameState.worldWidth - 100) + 50,\n        y: Math.random() * (gameState.worldHeight - 100) + 50,\n        type: itemTypes[Math.floor(Math.random() * itemTypes.length)],\n        collected: false,\n      });\n    }\n    setItems(newItems);\n  };\n\n  // Keyboard handling\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      keysRef.current.add(e.key.toLowerCase());\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      keysRef.current.delete(e.key.toLowerCase());\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  // Game logic\n  const updatePlayer = useCallback(() => {\n    setPlayer(prev => {\n      const newPlayer = { ...prev };\n      const keys = keysRef.current;\n      const speed = 3;\n      \n      let moving = false;\n      let newX = newPlayer.x;\n      let newY = newPlayer.y;\n\n      // Movement\n      if (keys.has('w') || keys.has('arrowup')) {\n        newY -= speed;\n        newPlayer.direction = 'up';\n        moving = true;\n      }\n      if (keys.has('s') || keys.has('arrowdown')) {\n        newY += speed;\n        newPlayer.direction = 'down';\n        moving = true;\n      }\n      if (keys.has('a') || keys.has('arrowleft')) {\n        newX -= speed;\n        newPlayer.direction = 'left';\n        moving = true;\n      }\n      if (keys.has('d') || keys.has('arrowright')) {\n        newX += speed;\n        newPlayer.direction = 'right';\n        moving = true;\n      }\n\n      // Boundary checking\n      newX = Math.max(16, Math.min(gameState.worldWidth - 16, newX));\n      newY = Math.max(16, Math.min(gameState.worldHeight - 16, newY));\n\n      newPlayer.x = newX;\n      newPlayer.y = newY;\n      newPlayer.isMoving = moving;\n\n      // Attack\n      if (keys.has(' ') && newPlayer.attackCooldown <= 0) {\n        newPlayer.attackCooldown = 30; // 30 frames cooldown\n        performAttack(newPlayer);\n      }\n\n      if (newPlayer.attackCooldown > 0) {\n        newPlayer.attackCooldown--;\n      }\n\n      // Animation\n      if (moving) {\n        newPlayer.animationFrame = (newPlayer.animationFrame + 1) % 60;\n      } else {\n        newPlayer.animationFrame = 0;\n      }\n\n      return newPlayer;\n    });\n  }, [gameState.worldWidth, gameState.worldHeight]);\n\n  const performAttack = (playerState: Player) => {\n    const attackRange = 50;\n    const attackDamage = 15 + Math.random() * 10;\n\n    setEnemies(prev => prev.map(enemy => {\n      if (!enemy.alive) return enemy;\n\n      const dx = enemy.x - playerState.x;\n      const dy = enemy.y - playerState.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance <= attackRange) {\n        const newHealth = Math.max(0, enemy.health - attackDamage);\n        const killed = newHealth <= 0;\n\n        if (killed) {\n          // Enemy defeated\n          const expGain = 25 + Math.random() * 15;\n          const goldGain = 10 + Math.random() * 20;\n          \n          setPlayerStats((prev: any) => ({\n            ...prev,\n            experience: prev.experience + expGain,\n            gold: prev.gold + goldGain,\n          }));\n\n          onAction('enemy_defeated', {\n            enemy_type: enemy.type,\n            enemy_id: enemy.id,\n            damage_dealt: attackDamage,\n            exp_gained: expGain,\n            gold_gained: goldGain,\n            player_x: playerState.x,\n            player_y: playerState.y,\n            enemy_x: enemy.x,\n            enemy_y: enemy.y,\n          });\n\n          return { ...enemy, health: 0, alive: false };\n        } else {\n          onAction('enemy_attacked', {\n            enemy_type: enemy.type,\n            enemy_id: enemy.id,\n            damage_dealt: attackDamage,\n            enemy_health_remaining: newHealth,\n            player_x: playerState.x,\n            player_y: playerState.y,\n          });\n\n          return { ...enemy, health: newHealth };\n        }\n      }\n\n      return enemy;\n    }));\n  };\n\n  const updateEnemies = useCallback(() => {\n    setEnemies(prev => prev.map(enemy => {\n      if (!enemy.alive) return enemy;\n\n      const dx = player.x - enemy.x;\n      const dy = player.y - enemy.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      // AI behavior\n      if (distance < 100) {\n        // Chase player\n        const angle = Math.atan2(dy, dx);\n        enemy.x += Math.cos(angle) * enemy.speed;\n        enemy.y += Math.sin(angle) * enemy.speed;\n\n        // Attack player if close enough\n        if (distance < 35 && Date.now() - enemy.lastAttack > 1500) {\n          const damage = 8 + Math.random() * 12;\n          setPlayer(prev => ({\n            ...prev,\n            health: Math.max(0, prev.health - damage)\n          }));\n\n          setPlayerStats((prev: any) => ({\n            ...prev,\n            health: Math.max(0, prev.health - damage)\n          }));\n\n          onAction('player_damaged', {\n            damage_taken: damage,\n            enemy_type: enemy.type,\n            enemy_id: enemy.id,\n            player_health_remaining: Math.max(0, player.health - damage),\n          });\n\n          enemy.lastAttack = Date.now();\n        }\n      } else {\n        // Wander randomly\n        enemy.direction += (Math.random() - 0.5) * 0.2;\n        enemy.x += Math.cos(enemy.direction) * enemy.speed * 0.3;\n        enemy.y += Math.sin(enemy.direction) * enemy.speed * 0.3;\n      }\n\n      // Keep enemies in bounds\n      enemy.x = Math.max(14, Math.min(gameState.worldWidth - 14, enemy.x));\n      enemy.y = Math.max(14, Math.min(gameState.worldHeight - 14, enemy.y));\n\n      return enemy;\n    }));\n  }, [player.x, player.y, player.health, gameState.worldWidth, gameState.worldHeight, onAction, setPlayerStats]);\n\n  const checkItemCollisions = useCallback(() => {\n    setItems(prev => prev.map(item => {\n      if (item.collected) return item;\n\n      const dx = item.x - player.x;\n      const dy = item.y - player.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance < 25) {\n        // Collect item\n        let goldGain = 0;\n        let healthGain = 0;\n\n        switch (item.type) {\n          case 'gold':\n            goldGain = 15 + Math.random() * 25;\n            setPlayerStats((prev: any) => ({\n              ...prev,\n              gold: prev.gold + goldGain,\n            }));\n            break;\n          case 'potion':\n            healthGain = 30 + Math.random() * 20;\n            setPlayerStats((prev: any) => ({\n              ...prev,\n              health: Math.min(100, prev.health + healthGain),\n            }));\n            break;\n          case 'gem':\n            goldGain = 50 + Math.random() * 50;\n            setPlayerStats((prev: any) => ({\n              ...prev,\n              gold: prev.gold + goldGain,\n            }));\n            break;\n        }\n\n        onAction('item_collected', {\n          item_type: item.type,\n          item_id: item.id,\n          gold_gained: goldGain,\n          health_gained: healthGain,\n          player_x: player.x,\n          player_y: player.y,\n          item_x: item.x,\n          item_y: item.y,\n        });\n\n        return { ...item, collected: true };\n      }\n\n      return item;\n    }));\n  }, [player.x, player.y, onAction, setPlayerStats]);\n\n  // Drawing functions\n  const drawPlayer = (ctx: CanvasRenderingContext2D, x: number, y: number) => {\n    const size = player.width;\n    \n    // Body\n    ctx.fillStyle = '#4a90e2';\n    ctx.fillRect(x - size/2, y - size/2, size, size);\n    \n    // Direction indicator\n    ctx.fillStyle = '#2c5aa0';\n    const dirOffset = 8;\n    switch (player.direction) {\n      case 'up':\n        ctx.fillRect(x - 4, y - size/2 - dirOffset, 8, 6);\n        break;\n      case 'down':\n        ctx.fillRect(x - 4, y + size/2 + dirOffset - 6, 8, 6);\n        break;\n      case 'left':\n        ctx.fillRect(x - size/2 - dirOffset, y - 4, 6, 8);\n        break;\n      case 'right':\n        ctx.fillRect(x + size/2 + dirOffset - 6, y - 4, 6, 8);\n        break;\n    }\n\n    // Animation effect when moving\n    if (player.isMoving) {\n      const wobble = Math.sin(player.animationFrame * 0.3) * 2;\n      ctx.fillStyle = 'rgba(74, 144, 226, 0.3)';\n      ctx.fillRect(x - size/2 + wobble, y - size/2, size, size);\n    }\n\n    // Health bar\n    const barWidth = 40;\n    const barHeight = 6;\n    const healthPercent = player.health / player.maxHealth;\n    \n    ctx.fillStyle = '#ff4757';\n    ctx.fillRect(x - barWidth/2, y - size/2 - 15, barWidth, barHeight);\n    ctx.fillStyle = '#2ed573';\n    ctx.fillRect(x - barWidth/2, y - size/2 - 15, barWidth * healthPercent, barHeight);\n  };\n\n  const drawEnemy = (ctx: CanvasRenderingContext2D, enemy: Enemy) => {\n    if (!enemy.alive) return;\n\n    const colors = {\n      slime: '#47c83e',\n      orc: '#8b4513',\n      goblin: '#9b59b6',\n      skeleton: '#95a5a6'\n    };\n\n    const x = enemy.x - gameState.cameraX;\n    const y = enemy.y - gameState.cameraY;\n    const size = enemy.width;\n\n    // Enemy body\n    ctx.fillStyle = colors[enemy.type];\n    ctx.fillRect(x - size/2, y - size/2, size, size);\n\n    // Enemy eyes\n    ctx.fillStyle = '#ff4757';\n    ctx.fillRect(x - 6, y - 8, 4, 4);\n    ctx.fillRect(x + 2, y - 8, 4, 4);\n\n    // Health bar\n    const barWidth = 30;\n    const barHeight = 4;\n    const healthPercent = enemy.health / enemy.maxHealth;\n    \n    ctx.fillStyle = '#ff4757';\n    ctx.fillRect(x - barWidth/2, y - size/2 - 10, barWidth, barHeight);\n    ctx.fillStyle = '#2ed573';\n    ctx.fillRect(x - barWidth/2, y - size/2 - 10, barWidth * healthPercent, barHeight);\n  };\n\n  const drawItem = (ctx: CanvasRenderingContext2D, item: GameItem) => {\n    if (item.collected) return;\n\n    const x = item.x - gameState.cameraX;\n    const y = item.y - gameState.cameraY;\n\n    const colors = {\n      potion: '#e74c3c',\n      gold: '#f1c40f',\n      gem: '#9b59b6'\n    };\n\n    // Item glow effect\n    const glowIntensity = Math.sin(frameCount * 0.1) * 0.3 + 0.7;\n    ctx.fillStyle = colors[item.type];\n    ctx.globalAlpha = glowIntensity;\n    ctx.fillRect(x - 8, y - 8, 16, 16);\n    ctx.globalAlpha = 1;\n\n    // Item core\n    ctx.fillStyle = colors[item.type];\n    ctx.fillRect(x - 6, y - 6, 12, 12);\n  };\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#2d5016';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Update camera to follow player\n    const targetCameraX = player.x - canvas.width / 2;\n    const targetCameraY = player.y - canvas.height / 2;\n    \n    setGameState(prev => ({\n      ...prev,\n      cameraX: Math.max(0, Math.min(prev.worldWidth - canvas.width, targetCameraX)),\n      cameraY: Math.max(0, Math.min(prev.worldHeight - canvas.height, targetCameraY))\n    }));\n\n    // Draw grid\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.lineWidth = 1;\n    for (let x = 0; x < gameState.worldWidth; x += 50) {\n      const screenX = x - gameState.cameraX;\n      if (screenX >= -50 && screenX <= canvas.width + 50) {\n        ctx.beginPath();\n        ctx.moveTo(screenX, 0);\n        ctx.lineTo(screenX, canvas.height);\n        ctx.stroke();\n      }\n    }\n    for (let y = 0; y < gameState.worldHeight; y += 50) {\n      const screenY = y - gameState.cameraY;\n      if (screenY >= -50 && screenY <= canvas.height + 50) {\n        ctx.beginPath();\n        ctx.moveTo(0, screenY);\n        ctx.lineTo(canvas.width, screenY);\n        ctx.stroke();\n      }\n    }\n\n    // Draw items\n    items.forEach(item => drawItem(ctx, item));\n\n    // Draw enemies\n    enemies.forEach(enemy => drawEnemy(ctx, enemy));\n\n    // Draw player\n    drawPlayer(ctx, player.x - gameState.cameraX, player.y - gameState.cameraY);\n\n    // Draw UI\n    drawUI(ctx, canvas);\n  }, [player, enemies, items, gameState, frameCount]);\n\n  const drawUI = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Stats panel\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillRect(10, 10, 200, 120);\n    \n    ctx.fillStyle = '#ffffff';\n    ctx.font = '14px Arial';\n    ctx.fillText(`Level: ${playerStats.level}`, 20, 30);\n    ctx.fillText(`Health: ${player.health}/100`, 20, 50);\n    ctx.fillText(`Gold: ${playerStats.gold}`, 20, 70);\n    ctx.fillText(`Experience: ${playerStats.experience}`, 20, 90);\n    \n    // Controls\n    ctx.fillStyle = '#ffffff';\n    ctx.font = '12px Arial';\n    ctx.fillText('WASD: Move', 20, 110);\n    ctx.fillText('Space: Attack', 20, 125);\n\n    // Enemy count\n    const aliveEnemies = enemies.filter(e => e.alive).length;\n    ctx.fillText(`Enemies: ${aliveEnemies}`, 20, 145);\n  };\n\n  // Game loop\n  useEffect(() => {\n    const gameLoop = () => {\n      updatePlayer();\n      updateEnemies();\n      checkItemCollisions();\n      draw();\n      setFrameCount(prev => prev + 1);\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    };\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n    };\n  }, [updatePlayer, updateEnemies, checkItemCollisions, draw]);\n\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column', \n      alignItems: 'center',\n      background: '#1a1a1a',\n      borderRadius: '12px',\n      padding: '16px',\n    }}>\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={400}\n        style={{\n          border: '2px solid #444',\n          borderRadius: '8px',\n          background: '#2d5016',\n          cursor: 'crosshair',\n        }}\n        tabIndex={0}\n      />\n      \n      <div style={{\n        marginTop: '12px',\n        color: '#ffffff',\n        fontSize: '14px',\n        textAlign: 'center',\n        maxWidth: '600px',\n      }}>\n        <p>🎮 <strong>2D Action RPG</strong> - WASD로 이동, Space로 공격!</p>\n        <p>몬스터를 처치하고 아이템을 수집하면서 레벨업하세요!</p>\n      </div>\n    </div>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBA+CxE,MAAO,MAAM,CAAAC,aAAkC,CAAGC,IAAA,EAK5C,IAL6C,CACjDC,QAAQ,CACRC,WAAW,CACXC,cAAc,CACdC,WACF,CAAC,CAAAJ,IAAA,CACC,KAAM,CAAAK,SAAS,CAAGd,MAAM,CAAoB,IAAI,CAAC,CACjD,KAAM,CAAAe,WAAW,CAAGf,MAAM,CAAS,CAAC,CACpC,KAAM,CAAAgB,OAAO,CAAGhB,MAAM,CAAc,GAAI,CAAAiB,GAAG,CAAC,CAAC,CAAC,CAE9C;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,CACzCkB,KAAK,CAAE,SAA+C,CACtDC,OAAO,CAAE,CAAC,CACVC,OAAO,CAAE,CAAC,CACVC,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,GACf,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGxB,QAAQ,CAAS,CAC3CyB,CAAC,CAAE,GAAG,CACNC,CAAC,CAAE,GAAG,CACNC,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAEpB,WAAW,CAACoB,MAAM,EAAI,GAAG,CACjCC,SAAS,CAAE,GAAG,CACdC,SAAS,CAAE,MAAM,CACjBC,QAAQ,CAAE,KAAK,CACfC,cAAc,CAAE,CAAC,CACjBC,cAAc,CAAE,CAClB,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGpC,QAAQ,CAAU,EAAE,CAAC,CAEnD;AACA,KAAM,CAACqC,KAAK,CAAEC,QAAQ,CAAC,CAAGtC,QAAQ,CAAa,EAAE,CAAC,CAElD;AACA,KAAM,CAACuC,UAAU,CAAEC,aAAa,CAAC,CAAGxC,QAAQ,CAAC,CAAC,CAAC,CAE/C;AACAD,SAAS,CAAC,IAAM,CACd0C,eAAe,CAAC,CAAC,CACjBC,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAD,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAE,UAAmB,CAAG,EAAE,CAC9B,KAAM,CAAAC,UAA2B,CAAG,CAAC,OAAO,CAAE,KAAK,CAAE,QAAQ,CAAE,UAAU,CAAC,CAE1E,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC1BF,UAAU,CAACG,IAAI,CAAC,CACdC,EAAE,CAAE,SAASF,CAAC,EAAE,CAChBpB,CAAC,CAAEuB,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIjC,SAAS,CAACK,UAAU,CAAG,GAAG,CAAC,CAAG,EAAE,CACpDK,CAAC,CAAEsB,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIjC,SAAS,CAACM,WAAW,CAAG,GAAG,CAAC,CAAG,EAAE,CACrDK,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,EAAE,CAAGmB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAC/BnB,SAAS,CAAE,EAAE,CACboB,IAAI,CAAEN,UAAU,CAACI,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGL,UAAU,CAACQ,MAAM,CAAC,CAAC,CAC/DC,UAAU,CAAE,CAAC,CACbtB,SAAS,CAAEiB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGD,IAAI,CAACM,EAAE,CAAG,CAAC,CACtCC,KAAK,CAAE,GAAG,CAAGP,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,CAC9BO,KAAK,CAAE,IACT,CAAC,CAAC,CACJ,CACApB,UAAU,CAACO,UAAU,CAAC,CACxB,CAAC,CAED,KAAM,CAAAD,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAe,QAAoB,CAAG,EAAE,CAC/B,KAAM,CAAAC,SAA6B,CAAG,CAAC,QAAQ,CAAE,MAAM,CAAE,KAAK,CAAC,CAE/D,IAAK,GAAI,CAAAb,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CAC3BY,QAAQ,CAACX,IAAI,CAAC,CACZC,EAAE,CAAE,QAAQF,CAAC,EAAE,CACfpB,CAAC,CAAEuB,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIjC,SAAS,CAACK,UAAU,CAAG,GAAG,CAAC,CAAG,EAAE,CACpDK,CAAC,CAAEsB,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIjC,SAAS,CAACM,WAAW,CAAG,GAAG,CAAC,CAAG,EAAE,CACrD4B,IAAI,CAAEQ,SAAS,CAACV,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGS,SAAS,CAACN,MAAM,CAAC,CAAC,CAC7DO,SAAS,CAAE,KACb,CAAC,CAAC,CACJ,CACArB,QAAQ,CAACmB,QAAQ,CAAC,CACpB,CAAC,CAED;AACA1D,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6D,aAAa,CAAIC,CAAgB,EAAK,CAC1C/C,OAAO,CAACgD,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIL,CAAgB,EAAK,CACxC/C,OAAO,CAACgD,OAAO,CAACK,MAAM,CAACN,CAAC,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAC7C,CAAC,CAEDG,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAET,aAAa,CAAC,CACjDQ,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAEH,WAAW,CAAC,CAE7C,MAAO,IAAM,CACXE,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAEV,aAAa,CAAC,CACpDQ,MAAM,CAACE,mBAAmB,CAAC,OAAO,CAAEJ,WAAW,CAAC,CAClD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAK,YAAY,CAAGtE,WAAW,CAAC,IAAM,CACrCuB,SAAS,CAACgD,IAAI,EAAI,CAChB,KAAM,CAAAC,SAAS,CAAG,CAAE,GAAGD,IAAK,CAAC,CAC7B,KAAM,CAAAE,IAAI,CAAG5D,OAAO,CAACgD,OAAO,CAC5B,KAAM,CAAAP,KAAK,CAAG,CAAC,CAEf,GAAI,CAAAoB,MAAM,CAAG,KAAK,CAClB,GAAI,CAAAC,IAAI,CAAGH,SAAS,CAAChD,CAAC,CACtB,GAAI,CAAAoD,IAAI,CAAGJ,SAAS,CAAC/C,CAAC,CAEtB;AACA,GAAIgD,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,EAAIJ,IAAI,CAACI,GAAG,CAAC,SAAS,CAAC,CAAE,CACxCD,IAAI,EAAItB,KAAK,CACbkB,SAAS,CAAC1C,SAAS,CAAG,IAAI,CAC1B4C,MAAM,CAAG,IAAI,CACf,CACA,GAAID,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,EAAIJ,IAAI,CAACI,GAAG,CAAC,WAAW,CAAC,CAAE,CAC1CD,IAAI,EAAItB,KAAK,CACbkB,SAAS,CAAC1C,SAAS,CAAG,MAAM,CAC5B4C,MAAM,CAAG,IAAI,CACf,CACA,GAAID,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,EAAIJ,IAAI,CAACI,GAAG,CAAC,WAAW,CAAC,CAAE,CAC1CF,IAAI,EAAIrB,KAAK,CACbkB,SAAS,CAAC1C,SAAS,CAAG,MAAM,CAC5B4C,MAAM,CAAG,IAAI,CACf,CACA,GAAID,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,EAAIJ,IAAI,CAACI,GAAG,CAAC,YAAY,CAAC,CAAE,CAC3CF,IAAI,EAAIrB,KAAK,CACbkB,SAAS,CAAC1C,SAAS,CAAG,OAAO,CAC7B4C,MAAM,CAAG,IAAI,CACf,CAEA;AACAC,IAAI,CAAG5B,IAAI,CAAC+B,GAAG,CAAC,EAAE,CAAE/B,IAAI,CAACgC,GAAG,CAAChE,SAAS,CAACK,UAAU,CAAG,EAAE,CAAEuD,IAAI,CAAC,CAAC,CAC9DC,IAAI,CAAG7B,IAAI,CAAC+B,GAAG,CAAC,EAAE,CAAE/B,IAAI,CAACgC,GAAG,CAAChE,SAAS,CAACM,WAAW,CAAG,EAAE,CAAEuD,IAAI,CAAC,CAAC,CAE/DJ,SAAS,CAAChD,CAAC,CAAGmD,IAAI,CAClBH,SAAS,CAAC/C,CAAC,CAAGmD,IAAI,CAClBJ,SAAS,CAACzC,QAAQ,CAAG2C,MAAM,CAE3B;AACA,GAAID,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,EAAIL,SAAS,CAACvC,cAAc,EAAI,CAAC,CAAE,CAClDuC,SAAS,CAACvC,cAAc,CAAG,EAAE,CAAE;AAC/B+C,aAAa,CAACR,SAAS,CAAC,CAC1B,CAEA,GAAIA,SAAS,CAACvC,cAAc,CAAG,CAAC,CAAE,CAChCuC,SAAS,CAACvC,cAAc,EAAE,CAC5B,CAEA;AACA,GAAIyC,MAAM,CAAE,CACVF,SAAS,CAACxC,cAAc,CAAG,CAACwC,SAAS,CAACxC,cAAc,CAAG,CAAC,EAAI,EAAE,CAChE,CAAC,IAAM,CACLwC,SAAS,CAACxC,cAAc,CAAG,CAAC,CAC9B,CAEA,MAAO,CAAAwC,SAAS,CAClB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACzD,SAAS,CAACK,UAAU,CAAEL,SAAS,CAACM,WAAW,CAAC,CAAC,CAEjD,KAAM,CAAA2D,aAAa,CAAIC,WAAmB,EAAK,CAC7C,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtB,KAAM,CAAAC,YAAY,CAAG,EAAE,CAAGpC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAE5Cb,UAAU,CAACoC,IAAI,EAAIA,IAAI,CAACa,GAAG,CAACC,KAAK,EAAI,CACnC,GAAI,CAACA,KAAK,CAAC9B,KAAK,CAAE,MAAO,CAAA8B,KAAK,CAE9B,KAAM,CAAAC,EAAE,CAAGD,KAAK,CAAC7D,CAAC,CAAGyD,WAAW,CAACzD,CAAC,CAClC,KAAM,CAAA+D,EAAE,CAAGF,KAAK,CAAC5D,CAAC,CAAGwD,WAAW,CAACxD,CAAC,CAClC,KAAM,CAAA+D,QAAQ,CAAGzC,IAAI,CAAC0C,IAAI,CAACH,EAAE,CAAGA,EAAE,CAAGC,EAAE,CAAGA,EAAE,CAAC,CAE7C,GAAIC,QAAQ,EAAIN,WAAW,CAAE,CAC3B,KAAM,CAAAQ,SAAS,CAAG3C,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAEO,KAAK,CAACzD,MAAM,CAAGuD,YAAY,CAAC,CAC1D,KAAM,CAAAQ,MAAM,CAAGD,SAAS,EAAI,CAAC,CAE7B,GAAIC,MAAM,CAAE,CACV;AACA,KAAM,CAAAC,OAAO,CAAG,EAAE,CAAG7C,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CACvC,KAAM,CAAA6C,QAAQ,CAAG,EAAE,CAAG9C,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAExCvC,cAAc,CAAE8D,IAAS,GAAM,CAC7B,GAAGA,IAAI,CACPuB,UAAU,CAAEvB,IAAI,CAACuB,UAAU,CAAGF,OAAO,CACrCG,IAAI,CAAExB,IAAI,CAACwB,IAAI,CAAGF,QACpB,CAAC,CAAC,CAAC,CAEHtF,QAAQ,CAAC,gBAAgB,CAAE,CACzByF,UAAU,CAAEX,KAAK,CAACpC,IAAI,CACtBgD,QAAQ,CAAEZ,KAAK,CAACvC,EAAE,CAClBoD,YAAY,CAAEf,YAAY,CAC1BgB,UAAU,CAAEP,OAAO,CACnBQ,WAAW,CAAEP,QAAQ,CACrBQ,QAAQ,CAAEpB,WAAW,CAACzD,CAAC,CACvB8E,QAAQ,CAAErB,WAAW,CAACxD,CAAC,CACvB8E,OAAO,CAAElB,KAAK,CAAC7D,CAAC,CAChBgF,OAAO,CAAEnB,KAAK,CAAC5D,CACjB,CAAC,CAAC,CAEF,MAAO,CAAE,GAAG4D,KAAK,CAAEzD,MAAM,CAAE,CAAC,CAAE2B,KAAK,CAAE,KAAM,CAAC,CAC9C,CAAC,IAAM,CACLhD,QAAQ,CAAC,gBAAgB,CAAE,CACzByF,UAAU,CAAEX,KAAK,CAACpC,IAAI,CACtBgD,QAAQ,CAAEZ,KAAK,CAACvC,EAAE,CAClBoD,YAAY,CAAEf,YAAY,CAC1BsB,sBAAsB,CAAEf,SAAS,CACjCW,QAAQ,CAAEpB,WAAW,CAACzD,CAAC,CACvB8E,QAAQ,CAAErB,WAAW,CAACxD,CACxB,CAAC,CAAC,CAEF,MAAO,CAAE,GAAG4D,KAAK,CAAEzD,MAAM,CAAE8D,SAAU,CAAC,CACxC,CACF,CAEA,MAAO,CAAAL,KAAK,CACd,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAqB,aAAa,CAAG1G,WAAW,CAAC,IAAM,CACtCmC,UAAU,CAACoC,IAAI,EAAIA,IAAI,CAACa,GAAG,CAACC,KAAK,EAAI,CACnC,GAAI,CAACA,KAAK,CAAC9B,KAAK,CAAE,MAAO,CAAA8B,KAAK,CAE9B,KAAM,CAAAC,EAAE,CAAGhE,MAAM,CAACE,CAAC,CAAG6D,KAAK,CAAC7D,CAAC,CAC7B,KAAM,CAAA+D,EAAE,CAAGjE,MAAM,CAACG,CAAC,CAAG4D,KAAK,CAAC5D,CAAC,CAC7B,KAAM,CAAA+D,QAAQ,CAAGzC,IAAI,CAAC0C,IAAI,CAACH,EAAE,CAAGA,EAAE,CAAGC,EAAE,CAAGA,EAAE,CAAC,CAE7C;AACA,GAAIC,QAAQ,CAAG,GAAG,CAAE,CAClB;AACA,KAAM,CAAAmB,KAAK,CAAG5D,IAAI,CAAC6D,KAAK,CAACrB,EAAE,CAAED,EAAE,CAAC,CAChCD,KAAK,CAAC7D,CAAC,EAAIuB,IAAI,CAAC8D,GAAG,CAACF,KAAK,CAAC,CAAGtB,KAAK,CAAC/B,KAAK,CACxC+B,KAAK,CAAC5D,CAAC,EAAIsB,IAAI,CAAC+D,GAAG,CAACH,KAAK,CAAC,CAAGtB,KAAK,CAAC/B,KAAK,CAExC;AACA,GAAIkC,QAAQ,CAAG,EAAE,EAAIuB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG3B,KAAK,CAACjC,UAAU,CAAG,IAAI,CAAE,CACzD,KAAM,CAAA6D,MAAM,CAAG,CAAC,CAAGlE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CACrCzB,SAAS,CAACgD,IAAI,GAAK,CACjB,GAAGA,IAAI,CACP3C,MAAM,CAAEmB,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAEP,IAAI,CAAC3C,MAAM,CAAGqF,MAAM,CAC1C,CAAC,CAAC,CAAC,CAEHxG,cAAc,CAAE8D,IAAS,GAAM,CAC7B,GAAGA,IAAI,CACP3C,MAAM,CAAEmB,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAEP,IAAI,CAAC3C,MAAM,CAAGqF,MAAM,CAC1C,CAAC,CAAC,CAAC,CAEH1G,QAAQ,CAAC,gBAAgB,CAAE,CACzB2G,YAAY,CAAED,MAAM,CACpBjB,UAAU,CAAEX,KAAK,CAACpC,IAAI,CACtBgD,QAAQ,CAAEZ,KAAK,CAACvC,EAAE,CAClBqE,uBAAuB,CAAEpE,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAExD,MAAM,CAACM,MAAM,CAAGqF,MAAM,CAC7D,CAAC,CAAC,CAEF5B,KAAK,CAACjC,UAAU,CAAG2D,IAAI,CAACC,GAAG,CAAC,CAAC,CAC/B,CACF,CAAC,IAAM,CACL;AACA3B,KAAK,CAACvD,SAAS,EAAI,CAACiB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAI,GAAG,CAC9CqC,KAAK,CAAC7D,CAAC,EAAIuB,IAAI,CAAC8D,GAAG,CAACxB,KAAK,CAACvD,SAAS,CAAC,CAAGuD,KAAK,CAAC/B,KAAK,CAAG,GAAG,CACxD+B,KAAK,CAAC5D,CAAC,EAAIsB,IAAI,CAAC+D,GAAG,CAACzB,KAAK,CAACvD,SAAS,CAAC,CAAGuD,KAAK,CAAC/B,KAAK,CAAG,GAAG,CAC1D,CAEA;AACA+B,KAAK,CAAC7D,CAAC,CAAGuB,IAAI,CAAC+B,GAAG,CAAC,EAAE,CAAE/B,IAAI,CAACgC,GAAG,CAAChE,SAAS,CAACK,UAAU,CAAG,EAAE,CAAEiE,KAAK,CAAC7D,CAAC,CAAC,CAAC,CACpE6D,KAAK,CAAC5D,CAAC,CAAGsB,IAAI,CAAC+B,GAAG,CAAC,EAAE,CAAE/B,IAAI,CAACgC,GAAG,CAAChE,SAAS,CAACM,WAAW,CAAG,EAAE,CAAEgE,KAAK,CAAC5D,CAAC,CAAC,CAAC,CAErE,MAAO,CAAA4D,KAAK,CACd,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,CAAC/D,MAAM,CAACE,CAAC,CAAEF,MAAM,CAACG,CAAC,CAAEH,MAAM,CAACM,MAAM,CAAEb,SAAS,CAACK,UAAU,CAAEL,SAAS,CAACM,WAAW,CAAEd,QAAQ,CAAEE,cAAc,CAAC,CAAC,CAE9G,KAAM,CAAA2G,mBAAmB,CAAGpH,WAAW,CAAC,IAAM,CAC5CqC,QAAQ,CAACkC,IAAI,EAAIA,IAAI,CAACa,GAAG,CAACiC,IAAI,EAAI,CAChC,GAAIA,IAAI,CAAC3D,SAAS,CAAE,MAAO,CAAA2D,IAAI,CAE/B,KAAM,CAAA/B,EAAE,CAAG+B,IAAI,CAAC7F,CAAC,CAAGF,MAAM,CAACE,CAAC,CAC5B,KAAM,CAAA+D,EAAE,CAAG8B,IAAI,CAAC5F,CAAC,CAAGH,MAAM,CAACG,CAAC,CAC5B,KAAM,CAAA+D,QAAQ,CAAGzC,IAAI,CAAC0C,IAAI,CAACH,EAAE,CAAGA,EAAE,CAAGC,EAAE,CAAGA,EAAE,CAAC,CAE7C,GAAIC,QAAQ,CAAG,EAAE,CAAE,CACjB;AACA,GAAI,CAAAK,QAAQ,CAAG,CAAC,CAChB,GAAI,CAAAyB,UAAU,CAAG,CAAC,CAElB,OAAQD,IAAI,CAACpE,IAAI,EACf,IAAK,MAAM,CACT4C,QAAQ,CAAG,EAAE,CAAG9C,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAClCvC,cAAc,CAAE8D,IAAS,GAAM,CAC7B,GAAGA,IAAI,CACPwB,IAAI,CAAExB,IAAI,CAACwB,IAAI,CAAGF,QACpB,CAAC,CAAC,CAAC,CACH,MACF,IAAK,QAAQ,CACXyB,UAAU,CAAG,EAAE,CAAGvE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CACpCvC,cAAc,CAAE8D,IAAS,GAAM,CAC7B,GAAGA,IAAI,CACP3C,MAAM,CAAEmB,IAAI,CAACgC,GAAG,CAAC,GAAG,CAAER,IAAI,CAAC3C,MAAM,CAAG0F,UAAU,CAChD,CAAC,CAAC,CAAC,CACH,MACF,IAAK,KAAK,CACRzB,QAAQ,CAAG,EAAE,CAAG9C,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAClCvC,cAAc,CAAE8D,IAAS,GAAM,CAC7B,GAAGA,IAAI,CACPwB,IAAI,CAAExB,IAAI,CAACwB,IAAI,CAAGF,QACpB,CAAC,CAAC,CAAC,CACH,MACJ,CAEAtF,QAAQ,CAAC,gBAAgB,CAAE,CACzBgH,SAAS,CAAEF,IAAI,CAACpE,IAAI,CACpBuE,OAAO,CAAEH,IAAI,CAACvE,EAAE,CAChBsD,WAAW,CAAEP,QAAQ,CACrB4B,aAAa,CAAEH,UAAU,CACzBjB,QAAQ,CAAE/E,MAAM,CAACE,CAAC,CAClB8E,QAAQ,CAAEhF,MAAM,CAACG,CAAC,CAClBiG,MAAM,CAAEL,IAAI,CAAC7F,CAAC,CACdmG,MAAM,CAAEN,IAAI,CAAC5F,CACf,CAAC,CAAC,CAEF,MAAO,CAAE,GAAG4F,IAAI,CAAE3D,SAAS,CAAE,IAAK,CAAC,CACrC,CAEA,MAAO,CAAA2D,IAAI,CACb,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,CAAC/F,MAAM,CAACE,CAAC,CAAEF,MAAM,CAACG,CAAC,CAAElB,QAAQ,CAAEE,cAAc,CAAC,CAAC,CAElD;AACA,KAAM,CAAAmH,UAAU,CAAGA,CAACC,GAA6B,CAAErG,CAAS,CAAEC,CAAS,GAAK,CAC1E,KAAM,CAAAqG,IAAI,CAAGxG,MAAM,CAACI,KAAK,CAEzB;AACAmG,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAGsG,IAAI,CAAC,CAAC,CAAErG,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAEA,IAAI,CAAEA,IAAI,CAAC,CAEhD;AACAD,GAAG,CAACE,SAAS,CAAG,SAAS,CACzB,KAAM,CAAAE,SAAS,CAAG,CAAC,CACnB,OAAQ3G,MAAM,CAACQ,SAAS,EACtB,IAAK,IAAI,CACP+F,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAGG,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,CACjD,MACF,IAAK,MAAM,CACTJ,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAGG,SAAS,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrD,MACF,IAAK,MAAM,CACTJ,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAGsG,IAAI,CAAC,CAAC,CAAGG,SAAS,CAAExG,CAAC,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACjD,MACF,IAAK,OAAO,CACVoG,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAGsG,IAAI,CAAC,CAAC,CAAGG,SAAS,CAAG,CAAC,CAAExG,CAAC,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrD,MACJ,CAEA;AACA,GAAIH,MAAM,CAACS,QAAQ,CAAE,CACnB,KAAM,CAAAmG,MAAM,CAAGnF,IAAI,CAAC+D,GAAG,CAACxF,MAAM,CAACU,cAAc,CAAG,GAAG,CAAC,CAAG,CAAC,CACxD6F,GAAG,CAACE,SAAS,CAAG,yBAAyB,CACzCF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAGsG,IAAI,CAAC,CAAC,CAAGI,MAAM,CAAEzG,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAEA,IAAI,CAAEA,IAAI,CAAC,CAC3D,CAEA;AACA,KAAM,CAAAK,QAAQ,CAAG,EAAE,CACnB,KAAM,CAAAC,SAAS,CAAG,CAAC,CACnB,KAAM,CAAAC,aAAa,CAAG/G,MAAM,CAACM,MAAM,CAAGN,MAAM,CAACO,SAAS,CAEtDgG,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG2G,QAAQ,CAAC,CAAC,CAAE1G,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAG,EAAE,CAAEK,QAAQ,CAAEC,SAAS,CAAC,CAClEP,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG2G,QAAQ,CAAC,CAAC,CAAE1G,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAG,EAAE,CAAEK,QAAQ,CAAGE,aAAa,CAAED,SAAS,CAAC,CACpF,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGA,CAACT,GAA6B,CAAExC,KAAY,GAAK,CACjE,GAAI,CAACA,KAAK,CAAC9B,KAAK,CAAE,OAElB,KAAM,CAAAgF,MAAM,CAAG,CACbC,KAAK,CAAE,SAAS,CAChBC,GAAG,CAAE,SAAS,CACdC,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,SACZ,CAAC,CAED,KAAM,CAAAnH,CAAC,CAAG6D,KAAK,CAAC7D,CAAC,CAAGT,SAAS,CAACG,OAAO,CACrC,KAAM,CAAAO,CAAC,CAAG4D,KAAK,CAAC5D,CAAC,CAAGV,SAAS,CAACI,OAAO,CACrC,KAAM,CAAA2G,IAAI,CAAGzC,KAAK,CAAC3D,KAAK,CAExB;AACAmG,GAAG,CAACE,SAAS,CAAGQ,MAAM,CAAClD,KAAK,CAACpC,IAAI,CAAC,CAClC4E,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAGsG,IAAI,CAAC,CAAC,CAAErG,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAEA,IAAI,CAAEA,IAAI,CAAC,CAEhD;AACAD,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChCoG,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAEhC;AACA,KAAM,CAAA0G,QAAQ,CAAG,EAAE,CACnB,KAAM,CAAAC,SAAS,CAAG,CAAC,CACnB,KAAM,CAAAC,aAAa,CAAGhD,KAAK,CAACzD,MAAM,CAAGyD,KAAK,CAACxD,SAAS,CAEpDgG,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG2G,QAAQ,CAAC,CAAC,CAAE1G,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAG,EAAE,CAAEK,QAAQ,CAAEC,SAAS,CAAC,CAClEP,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG2G,QAAQ,CAAC,CAAC,CAAE1G,CAAC,CAAGqG,IAAI,CAAC,CAAC,CAAG,EAAE,CAAEK,QAAQ,CAAGE,aAAa,CAAED,SAAS,CAAC,CACpF,CAAC,CAED,KAAM,CAAAQ,QAAQ,CAAGA,CAACf,GAA6B,CAAER,IAAc,GAAK,CAClE,GAAIA,IAAI,CAAC3D,SAAS,CAAE,OAEpB,KAAM,CAAAlC,CAAC,CAAG6F,IAAI,CAAC7F,CAAC,CAAGT,SAAS,CAACG,OAAO,CACpC,KAAM,CAAAO,CAAC,CAAG4F,IAAI,CAAC5F,CAAC,CAAGV,SAAS,CAACI,OAAO,CAEpC,KAAM,CAAAoH,MAAM,CAAG,CACbM,MAAM,CAAE,SAAS,CACjB9C,IAAI,CAAE,SAAS,CACf+C,GAAG,CAAE,SACP,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGhG,IAAI,CAAC+D,GAAG,CAACxE,UAAU,CAAG,GAAG,CAAC,CAAG,GAAG,CAAG,GAAG,CAC5DuF,GAAG,CAACE,SAAS,CAAGQ,MAAM,CAAClB,IAAI,CAACpE,IAAI,CAAC,CACjC4E,GAAG,CAACmB,WAAW,CAAGD,aAAa,CAC/BlB,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAG,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CAClCoG,GAAG,CAACmB,WAAW,CAAG,CAAC,CAEnB;AACAnB,GAAG,CAACE,SAAS,CAAGQ,MAAM,CAAClB,IAAI,CAACpE,IAAI,CAAC,CACjC4E,GAAG,CAACG,QAAQ,CAACxG,CAAC,CAAG,CAAC,CAAEC,CAAC,CAAG,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CACpC,CAAC,CAED,KAAM,CAAAwH,IAAI,CAAGjJ,WAAW,CAAC,IAAM,CAC7B,KAAM,CAAAkJ,MAAM,CAAGvI,SAAS,CAACkD,OAAO,CAChC,GAAI,CAACqF,MAAM,CAAE,OAEb,KAAM,CAAArB,GAAG,CAAGqB,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC,CACnC,GAAI,CAACtB,GAAG,CAAE,OAEV;AACAA,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAEkB,MAAM,CAACxH,KAAK,CAAEwH,MAAM,CAACvH,MAAM,CAAC,CAE/C;AACA,KAAM,CAAAyH,aAAa,CAAG9H,MAAM,CAACE,CAAC,CAAG0H,MAAM,CAACxH,KAAK,CAAG,CAAC,CACjD,KAAM,CAAA2H,aAAa,CAAG/H,MAAM,CAACG,CAAC,CAAGyH,MAAM,CAACvH,MAAM,CAAG,CAAC,CAElDX,YAAY,CAACuD,IAAI,GAAK,CACpB,GAAGA,IAAI,CACPrD,OAAO,CAAE6B,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAE/B,IAAI,CAACgC,GAAG,CAACR,IAAI,CAACnD,UAAU,CAAG8H,MAAM,CAACxH,KAAK,CAAE0H,aAAa,CAAC,CAAC,CAC7EjI,OAAO,CAAE4B,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAE/B,IAAI,CAACgC,GAAG,CAACR,IAAI,CAAClD,WAAW,CAAG6H,MAAM,CAACvH,MAAM,CAAE0H,aAAa,CAAC,CAChF,CAAC,CAAC,CAAC,CAEH;AACAxB,GAAG,CAACyB,WAAW,CAAG,0BAA0B,CAC5CzB,GAAG,CAAC0B,SAAS,CAAG,CAAC,CACjB,IAAK,GAAI,CAAA/H,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGT,SAAS,CAACK,UAAU,CAAEI,CAAC,EAAI,EAAE,CAAE,CACjD,KAAM,CAAAgI,OAAO,CAAGhI,CAAC,CAAGT,SAAS,CAACG,OAAO,CACrC,GAAIsI,OAAO,EAAI,CAAC,EAAE,EAAIA,OAAO,EAAIN,MAAM,CAACxH,KAAK,CAAG,EAAE,CAAE,CAClDmG,GAAG,CAAC4B,SAAS,CAAC,CAAC,CACf5B,GAAG,CAAC6B,MAAM,CAACF,OAAO,CAAE,CAAC,CAAC,CACtB3B,GAAG,CAAC8B,MAAM,CAACH,OAAO,CAAEN,MAAM,CAACvH,MAAM,CAAC,CAClCkG,GAAG,CAAC+B,MAAM,CAAC,CAAC,CACd,CACF,CACA,IAAK,GAAI,CAAAnI,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGV,SAAS,CAACM,WAAW,CAAEI,CAAC,EAAI,EAAE,CAAE,CAClD,KAAM,CAAAoI,OAAO,CAAGpI,CAAC,CAAGV,SAAS,CAACI,OAAO,CACrC,GAAI0I,OAAO,EAAI,CAAC,EAAE,EAAIA,OAAO,EAAIX,MAAM,CAACvH,MAAM,CAAG,EAAE,CAAE,CACnDkG,GAAG,CAAC4B,SAAS,CAAC,CAAC,CACf5B,GAAG,CAAC6B,MAAM,CAAC,CAAC,CAAEG,OAAO,CAAC,CACtBhC,GAAG,CAAC8B,MAAM,CAACT,MAAM,CAACxH,KAAK,CAAEmI,OAAO,CAAC,CACjChC,GAAG,CAAC+B,MAAM,CAAC,CAAC,CACd,CACF,CAEA;AACAxH,KAAK,CAAC0H,OAAO,CAACzC,IAAI,EAAIuB,QAAQ,CAACf,GAAG,CAAER,IAAI,CAAC,CAAC,CAE1C;AACAnF,OAAO,CAAC4H,OAAO,CAACzE,KAAK,EAAIiD,SAAS,CAACT,GAAG,CAAExC,KAAK,CAAC,CAAC,CAE/C;AACAuC,UAAU,CAACC,GAAG,CAAEvG,MAAM,CAACE,CAAC,CAAGT,SAAS,CAACG,OAAO,CAAEI,MAAM,CAACG,CAAC,CAAGV,SAAS,CAACI,OAAO,CAAC,CAE3E;AACA4I,MAAM,CAAClC,GAAG,CAAEqB,MAAM,CAAC,CACrB,CAAC,CAAE,CAAC5H,MAAM,CAAEY,OAAO,CAAEE,KAAK,CAAErB,SAAS,CAAEuB,UAAU,CAAC,CAAC,CAEnD,KAAM,CAAAyH,MAAM,CAAGA,CAAClC,GAA6B,CAAEqB,MAAyB,GAAK,CAC3E;AACArB,GAAG,CAACE,SAAS,CAAG,oBAAoB,CACpCF,GAAG,CAACG,QAAQ,CAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,GAAG,CAAC,CAE9BH,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACmC,IAAI,CAAG,YAAY,CACvBnC,GAAG,CAACoC,QAAQ,CAAC,UAAUzJ,WAAW,CAAC0J,KAAK,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACnDrC,GAAG,CAACoC,QAAQ,CAAC,WAAW3I,MAAM,CAACM,MAAM,MAAM,CAAE,EAAE,CAAE,EAAE,CAAC,CACpDiG,GAAG,CAACoC,QAAQ,CAAC,SAASzJ,WAAW,CAACuF,IAAI,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACjD8B,GAAG,CAACoC,QAAQ,CAAC,eAAezJ,WAAW,CAACsF,UAAU,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAE7D;AACA+B,GAAG,CAACE,SAAS,CAAG,SAAS,CACzBF,GAAG,CAACmC,IAAI,CAAG,YAAY,CACvBnC,GAAG,CAACoC,QAAQ,CAAC,YAAY,CAAE,EAAE,CAAE,GAAG,CAAC,CACnCpC,GAAG,CAACoC,QAAQ,CAAC,eAAe,CAAE,EAAE,CAAE,GAAG,CAAC,CAEtC;AACA,KAAM,CAAAE,YAAY,CAAGjI,OAAO,CAACkI,MAAM,CAACxG,CAAC,EAAIA,CAAC,CAACL,KAAK,CAAC,CAACJ,MAAM,CACxD0E,GAAG,CAACoC,QAAQ,CAAC,YAAYE,YAAY,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CACnD,CAAC,CAED;AACArK,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuK,QAAQ,CAAGA,CAAA,GAAM,CACrB/F,YAAY,CAAC,CAAC,CACdoC,aAAa,CAAC,CAAC,CACfU,mBAAmB,CAAC,CAAC,CACrB6B,IAAI,CAAC,CAAC,CACN1G,aAAa,CAACgC,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC/B3D,WAAW,CAACiD,OAAO,CAAGyG,qBAAqB,CAACD,QAAQ,CAAC,CACvD,CAAC,CAEDzJ,WAAW,CAACiD,OAAO,CAAGyG,qBAAqB,CAACD,QAAQ,CAAC,CAErD,MAAO,IAAM,CACX,GAAIzJ,WAAW,CAACiD,OAAO,CAAE,CACvB0G,oBAAoB,CAAC3J,WAAW,CAACiD,OAAO,CAAC,CAC3C,CACF,CAAC,CACH,CAAC,CAAE,CAACS,YAAY,CAAEoC,aAAa,CAAEU,mBAAmB,CAAE6B,IAAI,CAAC,CAAC,CAE5D,mBACE7I,KAAA,QAAKoK,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,UAAU,CAAE,SAAS,CACrBC,YAAY,CAAE,MAAM,CACpBC,OAAO,CAAE,MACX,CAAE,CAAAC,QAAA,eACA7K,IAAA,WACE8K,GAAG,CAAErK,SAAU,CACfe,KAAK,CAAE,GAAI,CACXC,MAAM,CAAE,GAAI,CACZ6I,KAAK,CAAE,CACLS,MAAM,CAAE,gBAAgB,CACxBJ,YAAY,CAAE,KAAK,CACnBD,UAAU,CAAE,SAAS,CACrBM,MAAM,CAAE,WACV,CAAE,CACFC,QAAQ,CAAE,CAAE,CACb,CAAC,cAEF/K,KAAA,QAAKoK,KAAK,CAAE,CACVY,SAAS,CAAE,MAAM,CACjBC,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,QAAQ,CACnBC,QAAQ,CAAE,OACZ,CAAE,CAAAT,QAAA,eACA3K,KAAA,MAAA2K,QAAA,EAAG,eAAG,cAAA7K,IAAA,WAAA6K,QAAA,CAAQ,eAAa,CAAQ,CAAC,wDAAuB,EAAG,CAAC,cAC/D7K,IAAA,MAAA6K,QAAA,CAAG,iJAA4B,CAAG,CAAC,EAChC,CAAC,EACH,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}