{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useTheme}from'../contexts/ThemeContext';import{useLanguage}from'../contexts/LanguageContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const AdvancedIdleRPG=_ref=>{let{onAction,isSimulating,currentAction,userStats,setUserStats,currentUser}=_ref;const{colors}=useTheme();const{t}=useLanguage();// 스킬 데미지 계산 함수\nconst calculateSkillDamage=(skill,character)=>{if(skill.level===0||!skill.isLearned)return 0;let damage=skill.baseDamage;// 레벨에 따른 데미지 증가\ndamage+=skill.baseDamage*skill.damageMultiplier*(skill.level-1);// 스탯에 따른 데미지 증가\nif(skill.statMultiplier.attack){damage+=character.attack*skill.statMultiplier.attack*skill.level;}if(skill.statMultiplier.defense){damage+=character.defense*skill.statMultiplier.defense*skill.level;}if(skill.statMultiplier.hp){damage+=character.maxHp*skill.statMultiplier.hp*skill.level;}if(skill.statMultiplier.mp){damage+=character.maxMp*skill.statMultiplier.mp*skill.level;}return Math.floor(damage);};// CSS 애니메이션 추가\nReact.useEffect(()=>{const style=document.createElement('style');style.textContent=`\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;document.head.appendChild(style);return()=>{document.head.removeChild(style);};},[]);const[character,setCharacter]=useState({id:'1',name:'용사',level:1,exp:0,maxExp:100,hp:100,maxHp:100,mp:50,maxMp:50,attack:20,defense:10,speed:15,gold:100,class:'전사',skills:[],equipment:{},stats:{strength:10,agility:8,intelligence:5,vitality:12,luck:7,availablePoints:0},prestige:0,rebirth:0,buffs:{attack:{amount:0,duration:0},defense:{amount:0,duration:0},speed:{amount:0,duration:0}}});const[currentTab,setCurrentTab]=useState('lobby');const[gameMode,setGameMode]=useState('lobby');const[isAutoFighting,setIsAutoFighting]=useState(false);const[currentMonster,setCurrentMonster]=useState(null);const[combatLog,setCombatLog]=useState([]);const[selectedDungeon,setSelectedDungeon]=useState(null);const[inventory,setInventory]=useState([]);const[availableDungeons,setAvailableDungeons]=useState([]);const[currentDungeon,setCurrentDungeon]=useState(null);const[inDungeon,setInDungeon]=useState(false);const[guild,setGuild]=useState(null);const[shop,setShop]=useState([]);const[achievements,setAchievements]=useState([]);const[monstersDefeated,setMonstersDefeated]=useState(0);const[totalGoldEarned,setTotalGoldEarned]=useState(0);const[showDungeonChoice,setShowDungeonChoice]=useState(false);const logRef=useRef(null);// 게임 초기화\nuseEffect(()=>{initializeGame();},[]);// 캐릭터 상태가 변경될 때마다 userStats 업데이트\nuseEffect(()=>{setUserStats({level:character.level,gold:character.gold,attack:character.attack,defense:character.defense,hp:character.hp,maxHp:character.maxHp,exp:character.exp,maxExp:character.maxExp,monsters_defeated:monstersDefeated,character_class:character.class,total_gold_earned:totalGoldEarned,inventory_items:inventory.map(item=>({id:item.id,name:item.name,type:item.type,rarity:item.rarity,quantity:item.quantity||1,stats:item.stats})),skills:character.skills.map(skill=>({id:skill.id,name:skill.name,level:skill.level,type:skill.type})),current_buffs:Object.entries(character.buffs).filter(_ref2=>{let[_,buff]=_ref2;return buff.duration>0;}).map(_ref3=>{let[type,buff]=_ref3;return{type,amount:buff.amount,duration:Math.ceil(buff.duration/1000)};})});},[character,inventory,monstersDefeated,totalGoldEarned,setUserStats]);const initializeGame=()=>{// 언어별 텍스트 정의\nconst translations={ko:{character:{name:'용사',class:'전사'},skills:{slash:{name:'강력한 베기',description:'강력한 일격을 가합니다.'},heal:{name:'치유',description:'HP를 회복합니다.'},critical:{name:'치명타 숙련',description:'치명타 확률을 증가시킵니다.'}},dungeons:{forest:{name:'어둠의 숲',description:'초보자를 위한 던전입니다.'},cave:{name:'고블린 동굴',description:'고블린들이 서식하는 위험한 동굴입니다.'},tower:{name:'마법사의 탑',description:'강력한 마법 몬스터들이 있는 탑입니다.'}},items:{sword1:'강철 검',armor1:'가죽 갑옷',helmet1:'철제 투구',health_potion:'체력 물약',mana_potion:'마나 물약',greater_health_potion:'고급 체력 물약',strength_potion:'힘의 물약',defense_potion:'방어의 물약'},monsters:{slime:'슬라임',goblin:'고블린',orc:'오크',troll:'트롤',dragon:'드래곤'},combat:{appeared:'이 나타났다!',attack:'의 공격!',damage:'데미지!',critical:'치명타!',levelUp:'🎉 레벨업! Lv.',defeated:'를 물리쳤다! EXP +',gold:', 골드 +',itemObtained:'✨ 을 획득했습니다!',dungeonCleared:'🎉  던전을 클리어했습니다!',nextFloor:'층으로 자동 진행합니다!',dungeonExited:'던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',hpMpRecovered:'체력과 마나가 완전히 회복되었습니다!',defeat:'전투에서 패배했습니다...'}},en:{character:{name:'Hero',class:'Warrior'},skills:{slash:{name:'Power Slash',description:'Delivers a powerful strike.'},heal:{name:'Heal',description:'Restores HP.'},critical:{name:'Critical Mastery',description:'Increases critical hit chance.'}},dungeons:{forest:{name:'Dark Forest',description:'A dungeon for beginners.'},cave:{name:'Goblin Cave',description:'A dangerous cave inhabited by goblins.'},tower:{name:'Mage Tower',description:'A tower with powerful magic monsters.'}},items:{sword1:'Steel Sword',armor1:'Leather Armor',helmet1:'Iron Helmet',health_potion:'Health Potion',mana_potion:'Mana Potion',greater_health_potion:'Greater Health Potion',strength_potion:'Strength Potion',defense_potion:'Defense Potion'},monsters:{slime:'Slime',goblin:'Goblin',orc:'Orc',troll:'Troll',dragon:'Dragon'},combat:{appeared:' appeared!',attack:\"'s attack!\",damage:' damage!',critical:' (Critical!)',levelUp:'🎉 Level up! Lv.',defeated:' defeated! EXP +',gold:', Gold +',itemObtained:'✨ obtained!',dungeonCleared:'🎉  dungeon cleared!',nextFloor:'Proceeding to floor  automatically!',dungeonExited:'Automatically exited dungeon. HP and MP fully restored!',hpMpRecovered:'HP and MP fully restored!',defeat:'Defeated in battle...'}},zh:{character:{name:'勇者',class:'战士'},skills:{slash:{name:'强力斩击',description:'发动强力一击。'},heal:{name:'治疗',description:'恢复生命值。'},critical:{name:'暴击精通',description:'增加暴击几率。'}},dungeons:{forest:{name:'黑暗森林',description:'适合新手的地下城。'},cave:{name:'哥布林洞穴',description:'哥布林栖息的危险洞穴。'},tower:{name:'法师塔',description:'有强力魔法怪物的塔。'}},items:{sword1:'钢铁剑',armor1:'皮甲',helmet1:'铁盔',health_potion:'生命药水',mana_potion:'魔法药水',greater_health_potion:'高级生命药水',strength_potion:'力量药水',defense_potion:'防御药水'},monsters:{slime:'史莱姆',goblin:'哥布林',orc:'兽人',troll:'巨魔',dragon:'龙'},combat:{appeared:'出现了！',attack:'的攻击！',damage:'伤害！',critical:'暴击！',levelUp:'🎉 升级！Lv.',defeated:'被击败！经验 +',gold:'，金币 +',itemObtained:'✨ 获得了！',dungeonCleared:'🎉 地下城通关！',nextFloor:'自动前往第 层！',dungeonExited:'自动离开地下城。生命值和魔法值完全恢复！',hpMpRecovered:'生命值和魔法值完全恢复！',defeat:'战斗失败...'}}};// 현재 언어 가져오기 (기본값: 한국어)\nconst currentLang=localStorage.getItem('language')||'ko';const texts=translations[currentLang]||translations.ko;// 모든 스킬 정의 함수 (공통 사용)\nconst getAllSkills=(currentLevel,existingSkills)=>{var _existingSkills$find;const allSkills=[// 전투 스킬 (레벨 1)\n{id:'slash',name:'강력한 베기',level:(existingSkills===null||existingSkills===void 0?void 0:(_existingSkills$find=existingSkills.find(s=>s.id==='slash'))===null||_existingSkills$find===void 0?void 0:_existingSkills$find.level)||0,maxLevel:10,baseDamage:20,damageMultiplier:0.5,statMultiplier:{attack:2.0},manaCost:10,cooldown:3000,currentCooldown:0,type:'active',category:'combat',description:'강력한 일격을 가합니다. (기본 데미지 + 공격력 x 2.0)',requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},{id:'heal',name:'치유',level:0,maxLevel:10,baseDamage:30,damageMultiplier:0.3,statMultiplier:{mp:1.5},manaCost:15,cooldown:5000,currentCooldown:0,type:'active',category:'support',description:'HP를 회복합니다. (기본 회복량 + 마나 x 1.5)',requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},{id:'critical',name:'치명타 숙련',level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:'passive',category:'passive',description:'치명타 확률을 증가시킵니다. (레벨당 +2%)',requiredLevel:1,isUnlocked:currentLevel>=1,isLearned:false},// 레벨 5 스킬\n{id:'double_strike',name:'이중 공격',level:0,maxLevel:10,baseDamage:25,damageMultiplier:0.4,statMultiplier:{attack:1.5},manaCost:20,cooldown:4000,currentCooldown:0,type:'active',category:'combat',description:'연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)',requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},{id:'mana_shield',name:'마나 방패',level:0,maxLevel:10,baseDamage:20,damageMultiplier:0.2,statMultiplier:{mp:1.0,defense:0.5},manaCost:25,cooldown:8000,currentCooldown:0,type:'active',category:'magic',description:'마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)',requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},{id:'defense_mastery',name:'방어 숙련',level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:'passive',category:'passive',description:'방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)',requiredLevel:5,isUnlocked:currentLevel>=5,isLearned:false},// 레벨 10 스킬\n{id:'whirlwind',name:'회오리 공격',level:0,maxLevel:10,baseDamage:40,damageMultiplier:0.6,statMultiplier:{attack:1.8},manaCost:35,cooldown:6000,currentCooldown:0,type:'active',category:'combat',description:'주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)',requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},{id:'regeneration',name:'재생',level:0,maxLevel:10,baseDamage:50,damageMultiplier:0.4,statMultiplier:{hp:0.1,mp:2.0},manaCost:40,cooldown:12000,currentCooldown:0,type:'active',category:'support',description:'지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)',requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},{id:'mp_efficiency',name:'마나 효율',level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:'passive',category:'passive',description:'모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)',requiredLevel:10,isUnlocked:currentLevel>=10,isLearned:false},// 레벨 15 스킬\n{id:'meteor',name:'메테오',level:0,maxLevel:10,baseDamage:80,damageMultiplier:1.0,statMultiplier:{mp:3.0,attack:1.0},manaCost:60,cooldown:10000,currentCooldown:0,type:'active',category:'magic',description:'강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)',requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false},{id:'time_stop',name:'시간 정지',level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{mp:1.0},manaCost:80,cooldown:15000,currentCooldown:0,type:'active',category:'magic',description:'모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)',requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false},{id:'exp_boost',name:'경험치 증폭',level:0,maxLevel:10,baseDamage:0,damageMultiplier:0,statMultiplier:{},manaCost:0,cooldown:0,currentCooldown:0,type:'passive',category:'passive',description:'획득하는 경험치를 증가시킵니다. (레벨당 +10%)',requiredLevel:15,isUnlocked:currentLevel>=15,isLearned:false}];// 해금된 스킬만 반환\nreturn allSkills.filter(skill=>skill.isUnlocked);};const initialSkills=getAllSkills(1);// 던전 초기화\nconst initialDungeons=[{id:'forest',name:'어둠의 숲',level:1,description:'초보자를 위한 던전입니다.',floors:10,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[10,25],expRange:[15,30],itemDropChance:0.1},requiredLevel:1,isUnlocked:true},{id:'cave',name:'고블린 동굴',level:5,description:'고블린들이 서식하는 위험한 동굴입니다.',floors:15,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[25,50],expRange:[40,75],itemDropChance:0.15},requiredLevel:5,isUnlocked:false},{id:'tower',name:'마법사의 탑',level:10,description:'강력한 마법 몬스터들이 있는 탑입니다.',floors:20,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[50,100],expRange:[80,150],itemDropChance:0.2},requiredLevel:10,isUnlocked:false},{id:'abyss',name:'심연의 던전',level:20,description:'업데이트 예정 - 최강의 도전자들을 위한 던전입니다.',floors:50,currentFloor:1,clearedFloors:new Set(),monsters:[],rewards:{goldRange:[100,200],expRange:[200,300],itemDropChance:0.3},requiredLevel:20,isUnlocked:false,isComingSoon:true// 업데이트 예정 플래그\n}];// 상점 아이템 초기화 (기본 아이템들)\nconst getShopItems=()=>{var _availableDungeons$fi;const baseItems=[{id:'sword1',name:'강철 검',type:'weapon',rarity:'common',level:1,stats:{attack:15},price:200,enhancement:0},{id:'armor1',name:'가죽 갑옷',type:'armor',rarity:'common',level:1,stats:{defense:10,hp:20},price:150,enhancement:0},{id:'helmet1',name:'철제 투구',type:'helmet',rarity:'common',level:1,stats:{defense:5,hp:15},price:100,enhancement:0},// 기본 물약들\n{id:'health_potion',name:'체력 물약',type:'consumable',rarity:'common',level:1,stats:{},price:50,enhancement:0,consumableEffect:{healHp:50},quantity:1},{id:'mana_potion',name:'마나 물약',type:'consumable',rarity:'common',level:1,stats:{},price:40,enhancement:0,consumableEffect:{healMp:30},quantity:1}];// 고블린 동굴이 해금되면 고급 아이템 추가\nconst goblinCaveUnlocked=(_availableDungeons$fi=availableDungeons.find(d=>d.id==='goblin_cave'))===null||_availableDungeons$fi===void 0?void 0:_availableDungeons$fi.isUnlocked;if(goblinCaveUnlocked){baseItems.push(// 고급 장비\n{id:'steel_sword',name:'강화 강철 검',type:'weapon',rarity:'rare',level:3,stats:{attack:25},price:500,enhancement:0},{id:'plate_armor',name:'판금 갑옷',type:'armor',rarity:'rare',level:3,stats:{defense:20,hp:40},price:400,enhancement:0},{id:'steel_helmet',name:'강철 투구',type:'helmet',rarity:'rare',level:3,stats:{defense:12,hp:25},price:300,enhancement:0},// 고급 물약들\n{id:'greater_health_potion',name:'고급 체력 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:120,enhancement:0,consumableEffect:{healHp:120},quantity:1},{id:'greater_mana_potion',name:'고급 마나 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:100,enhancement:0,consumableEffect:{healMp:80},quantity:1},{id:'strength_potion',name:'힘의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:'attack',buffAmount:10,buffDuration:30000},quantity:1},{id:'defense_potion',name:'방어의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:'defense',buffAmount:8,buffDuration:30000},quantity:1});}return baseItems;};const shopItems=getShopItems();setCharacter(prev=>({...prev,name:texts.character.name,class:texts.character.class,skills:initialSkills}));setAvailableDungeons(initialDungeons);setShop(shopItems);// Store texts globally for other functions to use\nwindow.gameTexts=texts;// 던전에 있지 않을 때만 일반 몬스터 생성\nif(!inDungeon){spawnMonster();}};// 던전 해금 상태에 따른 상점 업데이트\nuseEffect(()=>{const updateShop=()=>{const getShopItems=()=>{var _availableDungeons$fi2,_availableDungeons$fi3;const baseItems=[{id:'sword1',name:'강철 검',type:'weapon',rarity:'common',level:1,stats:{attack:15},price:200,enhancement:0},{id:'armor1',name:'가죽 갑옷',type:'armor',rarity:'common',level:1,stats:{defense:10,hp:20},price:150,enhancement:0},{id:'helmet1',name:'철제 투구',type:'helmet',rarity:'common',level:1,stats:{defense:5,hp:15},price:100,enhancement:0},// 기본 물약들\n{id:'health_potion',name:'체력 물약',type:'consumable',rarity:'common',level:1,stats:{},price:50,enhancement:0,consumableEffect:{healHp:50},quantity:1},{id:'mana_potion',name:'마나 물약',type:'consumable',rarity:'common',level:1,stats:{},price:40,enhancement:0,consumableEffect:{healMp:30},quantity:1}];// 고블린 동굴이 해금되면 고급 아이템 추가\nconst goblinCaveUnlocked=(_availableDungeons$fi2=availableDungeons.find(d=>d.id==='goblin_cave'))===null||_availableDungeons$fi2===void 0?void 0:_availableDungeons$fi2.isUnlocked;if(goblinCaveUnlocked){// 중복 방지: 이미 있는 아이템은 추가하지 않음\nconst existingIds=baseItems.map(item=>item.id);const newItems=[{id:'steel_sword',name:'강화 강철 검',type:'weapon',rarity:'rare',level:3,stats:{attack:25},price:500,enhancement:0},{id:'plate_armor',name:'판금 갑옷',type:'armor',rarity:'rare',level:3,stats:{defense:20,hp:40},price:400,enhancement:0},{id:'steel_helmet',name:'강철 투구',type:'helmet',rarity:'rare',level:3,stats:{defense:12,hp:25},price:300,enhancement:0},{id:'greater_health_potion',name:'고급 체력 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:120,enhancement:0,consumableEffect:{healHp:120},quantity:1},{id:'greater_mana_potion',name:'고급 마나 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:100,enhancement:0,consumableEffect:{healMp:80},quantity:1},{id:'strength_potion',name:'힘의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:'attack',buffAmount:10,buffDuration:30000},quantity:1},{id:'defense_potion',name:'방어의 물약',type:'consumable',rarity:'rare',level:2,stats:{},price:150,enhancement:0,consumableEffect:{buffType:'defense',buffAmount:8,buffDuration:30000},quantity:1}].filter(item=>!existingIds.includes(item.id));baseItems.push(...newItems);}// 마법사의 탑이 해금되면 최고급 아이템 추가\nconst wizardTowerUnlocked=(_availableDungeons$fi3=availableDungeons.find(d=>d.id==='wizard_tower'))===null||_availableDungeons$fi3===void 0?void 0:_availableDungeons$fi3.isUnlocked;if(wizardTowerUnlocked){const existingIds=baseItems.map(item=>item.id);const wizardItems=[{id:'enchanted_sword',name:'마법 부여 검',type:'weapon',rarity:'epic',level:5,stats:{attack:40,mp:20},price:1200,enhancement:0},{id:'dragon_armor',name:'드래곤 갑옷',type:'armor',rarity:'epic',level:5,stats:{defense:35,hp:80},price:1000,enhancement:0},{id:'mystic_helmet',name:'신비의 투구',type:'helmet',rarity:'epic',level:5,stats:{defense:20,hp:40,mp:30},price:800,enhancement:0},{id:'supreme_health_potion',name:'최고급 체력 물약',type:'consumable',rarity:'epic',level:3,stats:{},price:300,enhancement:0,consumableEffect:{healHp:250},quantity:1},{id:'supreme_mana_potion',name:'최고급 마나 물약',type:'consumable',rarity:'epic',level:3,stats:{},price:250,enhancement:0,consumableEffect:{healMp:200},quantity:1},{id:'berserker_potion',name:'광전사의 물약',type:'consumable',rarity:'epic',level:3,stats:{},price:400,enhancement:0,consumableEffect:{buffType:'attack',buffAmount:25,buffDuration:60000},quantity:1},{id:'guardian_potion',name:'수호자의 물약',type:'consumable',rarity:'epic',level:3,stats:{},price:400,enhancement:0,consumableEffect:{buffType:'defense',buffAmount:20,buffDuration:60000},quantity:1}].filter(item=>!existingIds.includes(item.id));baseItems.push(...wizardItems);}return baseItems;};setShop(getShopItems());};updateShop();},[availableDungeons]);// 레벨업 시 스킬 업데이트\nuseEffect(()=>{const updateSkills=()=>{setCharacter(prev=>{// 기존 스킬들의 해금 상태만 업데이트\nconst updatedSkills=prev.skills.map(skill=>({...skill,isUnlocked:prev.level>=(skill.requiredLevel||1)}));return{...prev,skills:updatedSkills};});};updateSkills();},[character.level]);// 스킬 사용 함수 (수정된 데미지 계산 포함)\nconst executeSkill=skill=>{if(!skill.isLearned||skill.level===0){addToCombatLog('스킬을 먼저 배워야 합니다!');return;}if(character.mp<skill.manaCost){addToCombatLog('마나가 부족합니다!');return;}if(skill.currentCooldown>0){addToCombatLog('스킬이 재사용 대기 중입니다!');return;}const damage=calculateSkillDamage(skill,character);// 스킬 사용 로직\nif(skill.id==='heal'||skill.id==='regeneration'){// 힐링 스킬\nconst healAmount=damage;setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount),mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);}else if(currentMonster){// 공격 스킬\nconst newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);if(newMonsterHp===0){setTimeout(defeatMonster,500);}}// 쿨다운 설정\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:skill.cooldown}:s)}));};// 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\nconst learnSkill=skill=>{if(skill.level>0){addToCombatLog('이미 배운 스킬입니다!');return;}const cost=100;// 스킬 배우기 비용\nif(character.gold<cost){addToCombatLog('골드가 부족합니다!');return;}setCharacter(prev=>({...prev,gold:prev.gold-cost,skills:prev.skills.map(s=>s.id===skill.id?{...s,level:1,isLearned:true}:s)}));addToCombatLog(`${skill.name}을(를) 배웠습니다!`);};// 스킬 렌더링 함수 (분류별)\nconst renderSkillsByCategory=category=>{const filteredSkills=character.skills.filter(skill=>skill.category===category&&skill.isUnlocked);return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:colors.text,marginBottom:'10px',fontSize:'18px',fontWeight:'bold'},children:category==='combat'?'전투 스킬':category==='magic'?'마법 스킬':category==='support'?'지원 스킬':'패시브 스킬'}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(300px, 1fr))',gap:'10px'},children:filteredSkills.map(skill=>{const cost=skill.level===0?100:skill.level*100;const calculatedDamage=calculateSkillDamage(skill,character);const canUpgrade=character.gold>=cost&&skill.level<skill.maxLevel;return/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255, 255, 255, 0.1)',border:`1px solid ${skill.isLearned?'#10b981':'#6b7280'}`,borderRadius:'8px',padding:'15px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'flex-start'},children:/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:skill.isLearned?'#10b981':'#9ca3af',margin:'0 0 5px 0',fontSize:'16px',fontWeight:'bold'},children:[skill.name,\" Lv.\",skill.level]}),/*#__PURE__*/_jsx(\"p\",{style:{color:colors.text,margin:'0 0 10px 0',fontSize:'12px',lineHeight:'1.4'},children:skill.description}),skill.level>0&&/*#__PURE__*/_jsx(\"p\",{style:{color:'#fbbf24',margin:'0 0 10px 0',fontSize:'12px',fontWeight:'bold'},children:skill.type==='active'?`데미지: ${calculatedDamage}`:'패시브 효과 활성'}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'11px',color:'#9ca3af',marginBottom:'10px'},children:[skill.type==='active'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uB9C8\\uB098 \\uC18C\\uBAA8: \",skill.manaCost]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uCFE8\\uB2E4\\uC6B4: \",skill.cooldown/1000,\"\\uCD08\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uCD5C\\uB300 \\uB808\\uBCA8: \",skill.maxLevel]})]})]})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'10px'},children:skill.level===0?/*#__PURE__*/_jsx(\"button\",{onClick:()=>learnSkill(skill),disabled:character.gold<100,style:{background:character.gold>=100?'linear-gradient(135deg, #10b981 0%, #059669 100%)':'#6b7280',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',fontSize:'12px',cursor:character.gold>=100?'pointer':'not-allowed',fontWeight:'bold'},children:\"\\uBC30\\uC6B0\\uAE30 (100\\uACE8\\uB4DC)\"}):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(character.gold>=cost){setCharacter(prev=>({...prev,gold:prev.gold-cost,skills:prev.skills.map(s=>s.id===skill.id?{...s,level:s.level+1}:s)}));addToCombatLog(`${skill.name}을(를) 레벨업했다! (Lv.${skill.level+1})`);}},disabled:!canUpgrade,style:{background:canUpgrade?'linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)':'#6b7280',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',fontSize:'12px',cursor:canUpgrade?'pointer':'not-allowed'},children:[\"\\uC5C5\\uADF8\\uB808\\uC774\\uB4DC (\",cost,\"\\uACE8\\uB4DC)\"]})})]},skill.id);})})]});};// 스킬 탭 내부의 서브 탭 상태\nconst[skillSubTab,setSkillSubTab]=React.useState('combat');// 스킬 탭 컨텐츠 렌더링 (탭 분리)\nconst renderSkillsTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'24px'},children:\"\\u2728 \\uC2A4\\uD0AC \\uD2B8\\uB9AC\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,opacity:0.9},children:\"\\uC2A4\\uD0AC\\uC744 \\uBC30\\uC6B0\\uACE0 \\uB808\\uBCA8\\uC5C5\\uD558\\uC5EC \\uB354\\uC6B1 \\uAC15\\uD574\\uC9C0\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',background:'rgba(255, 255, 255, 0.1)',borderRadius:'10px',marginBottom:'20px',overflow:'hidden'},children:[{id:'combat',label:'⚔️ 전투 스킬',color:'#dc2626'},{id:'support',label:'💚 지원 스킬',color:'#10b981'},{id:'passive',label:'🛡️ 패시브 스킬',color:'#f59e0b'}].map(tab=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSkillSubTab(tab.id),style:{flex:1,padding:'15px 20px',background:skillSubTab===tab.id?`linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)`:'transparent',color:skillSubTab===tab.id?'white':'#9ca3af',border:'none',cursor:'pointer',fontSize:'14px',fontWeight:skillSubTab===tab.id?'bold':'normal',transition:'all 0.3s ease'},children:tab.label},tab.id))}),skillSubTab==='combat'&&renderSkillsByCategory('combat'),skillSubTab==='combat'&&renderSkillsByCategory('magic'),\" \",skillSubTab==='support'&&renderSkillsByCategory('support'),skillSubTab==='passive'&&renderSkillsByCategory('passive')]});// 몬스터 생성\nconst spawnMonster=()=>{// 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\nif(currentMonster||inDungeon){return;}const gameTexts=window.gameTexts||{monsters:{slime:'슬라임',goblin:'고블린',orc:'오크',troll:'트롤',dragon:'드래곤'},combat:{appeared:'이 나타났다!'}};const monsters=[{name:gameTexts.monsters.slime,baseHp:40,baseAttack:8,baseDefense:2,exp:15,gold:10},{name:gameTexts.monsters.goblin,baseHp:60,baseAttack:12,baseDefense:4,exp:25,gold:18},{name:gameTexts.monsters.orc,baseHp:100,baseAttack:18,baseDefense:8,exp:40,gold:30},{name:gameTexts.monsters.troll,baseHp:150,baseAttack:25,baseDefense:12,exp:60,gold:45},{name:gameTexts.monsters.dragon,baseHp:300,baseAttack:40,baseDefense:20,exp:120,gold:100}];const randomMonster=monsters[Math.floor(Math.random()*monsters.length)];const levelMultiplier=1+(character.level-1)*0.3;const monster={id:`monster_${Date.now()}`,name:randomMonster.name,level:Math.max(1,character.level+Math.floor(Math.random()*3-1)),hp:Math.floor(randomMonster.baseHp*levelMultiplier),maxHp:Math.floor(randomMonster.baseHp*levelMultiplier),attack:Math.floor(randomMonster.baseAttack*levelMultiplier),defense:Math.floor(randomMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor(randomMonster.exp*levelMultiplier),gold:Math.floor(randomMonster.gold*levelMultiplier),dropItems:generateDropItems(),isBoss:Math.random()<0.1// 10% 보스 확률\n};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=3;monster.maxHp*=3;monster.attack*=2;monster.defense*=2;monster.exp*=5;monster.gold*=3;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);};// 드롭 아이템 생성\nconst generateDropItems=()=>{const dropChance=Math.random();if(dropChance<0.1){// 10% 확률로 아이템 드롭\nconst rarities=['common','rare','epic','legendary','mythic'];const rarity=rarities[Math.floor(Math.random()*rarities.length)];const itemTypes=['weapon','armor','helmet','boots','ring','amulet'];const itemType=itemTypes[Math.floor(Math.random()*itemTypes.length)];return[{id:`drop_${Date.now()}`,name:generateItemName(rarity,itemType),type:itemType,rarity,level:character.level,stats:generateItemStats(rarity),price:calculateItemPrice(rarity,character.level),enhancement:0}];}return[];};const generateItemName=(rarity,itemType)=>{const prefixes={common:['낡은','일반적인','기본'],rare:['날카로운','튼튼한','마법의'],epic:['전설적인','고대의','신성한'],legendary:['전설의','영웅의','불멸의'],mythic:['신화의','창조의','절대의']};const itemNames={weapon:['검','도끼','창','활','지팡이'],armor:['갑옷','로브','사슬갑옷','가죽갑옷'],helmet:['투구','모자','관','헬름'],boots:['신발','부츠','장화','샌들'],ring:['반지','링','밴드'],amulet:['목걸이','부적','펜던트']};const prefix=prefixes[rarity][Math.floor(Math.random()*3)];const itemTypeNames=itemNames[itemType]||['아이템'];const item=itemTypeNames[Math.floor(Math.random()*itemTypeNames.length)];return`${prefix} ${item}`;};const generateItemStats=rarity=>{const multipliers={common:1,rare:1.5,epic:2.5,legendary:4,mythic:7};const base=multipliers[rarity];return{attack:Math.floor(Math.random()*20*base),defense:Math.floor(Math.random()*15*base),hp:Math.floor(Math.random()*50*base),mp:Math.floor(Math.random()*30*base),speed:Math.floor(Math.random()*10*base),critRate:Math.floor(Math.random()*10*base),critDamage:Math.floor(Math.random()*20*base)};};const calculateItemPrice=(rarity,level)=>{const basePrice={common:50,rare:150,epic:500,legendary:2000,mythic:10000};return Math.floor(basePrice[rarity]*(1+level*0.2));};// 전투 시스템\nconst attack=()=>{if(!currentMonster)return;const buffedAttack=character.attack+character.buffs.attack.amount;const damage=calculateDamage(buffedAttack,currentMonster.defense);const isCritical=Math.random()<0.1+character.stats.luck*0.01;const finalDamage=isCritical?Math.floor(damage*1.5):damage;const newMonsterHp=Math.max(0,currentMonster.hp-finalDamage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);const gameTexts=window.gameTexts||{combat:{attack:'의 공격!',damage:'데미지!',critical:'치명타!'}};addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical?` (${gameTexts.combat.critical})`:''} ${gameTexts.combat.damage}`);onAction('combat_attack',{user_id:currentUser.user_id,damage:finalDamage,is_critical:isCritical,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,character_attack:character.attack,monster_hp_remaining:newMonsterHp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});if(newMonsterHp<=0){defeatMonster();}else{// 몬스터 반격\nsetTimeout(()=>monsterAttack(),1000);}};const monsterAttack=()=>{if(!currentMonster||currentMonster.hp<=0)return;const buffedDefense=character.defense+character.buffs.defense.amount;const damage=calculateDamage(currentMonster.attack,buffedDefense);const newHp=Math.max(0,character.hp-damage);setCharacter(prev=>({...prev,hp:newHp}));const gameTexts=window.gameTexts||{combat:{attack:'의 공격!',damage:'데미지!'}};addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);if(newHp<=0){const gameTexts=window.gameTexts||{combat:{defeat:'전투에서 패배했습니다...'}};addToCombatLog(gameTexts.combat.defeat);setIsAutoFighting(false);// 전투 실패 이벤트 로깅\nonAction('combat_defeat',{monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,dungeon_id:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.id)||'field',dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||'field',damage_taken:currentMonster.attack,character_defense:character.defense});// 던전에서 나가고 체력/마나 완전 회복\nsetTimeout(()=>{setCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));if(inDungeon&&currentDungeon){// 던전에서 나가기 (죽음으로 인한 자동 퇴장)\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'death',time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');}else{// 일반 필드에서는 새 몬스터 스폰\naddToCombatLog('체력과 마나가 완전히 회복되었습니다!');spawnMonster();}},2000);}};const calculateDamage=(attack,defense)=>{const baseDamage=Math.max(1,attack-Math.floor(defense*0.5));return Math.floor(baseDamage*(0.8+Math.random()*0.4));};const defeatMonster=()=>{if(!currentMonster)return;const expGained=currentMonster.exp;const goldGained=currentMonster.gold;setCharacter(prev=>{let newExp=prev.exp+expGained;const newGold=prev.gold+goldGained;let newLevel=prev.level;let newMaxExp=prev.maxExp;let newHp=prev.hp;let newMp=prev.mp;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let availablePoints=prev.stats.availablePoints;// 레벨업 체크\nwhile(newExp>=newMaxExp){newLevel+=1;newExp-=newMaxExp;newMaxExp=Math.floor(newMaxExp*1.5);newMaxHp+=20;newMaxMp+=10;newHp=newMaxHp;// 레벨업 시 체력 완전 회복\nnewMp=newMaxMp;// 레벨업 시 마나 완전 회복\navailablePoints+=5;addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);onAction('level_up',{user_id:currentUser.user_id,new_level:newLevel,character_class:prev.class,stat_points_gained:5});// 던전 해금 체크\nsetAvailableDungeons(prevDungeons=>prevDungeons.map(dungeon=>({...dungeon,isUnlocked:dungeon.isUnlocked||newLevel>=dungeon.requiredLevel})));}return{...prev,exp:newExp,gold:newGold,level:newLevel,maxExp:newMaxExp,hp:newHp,mp:newMp,maxHp:newMaxHp,maxMp:newMaxMp,stats:{...prev.stats,availablePoints}};});// 아이템 드롭 처리\nif(currentMonster.dropItems.length>0){setInventory(prev=>[...prev,...currentMonster.dropItems]);addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);}addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);// 추적 카운터 업데이트\nsetMonstersDefeated(prev=>prev+1);setTotalGoldEarned(prev=>prev+goldGained);onAction('monster_defeated',{user_id:currentUser.user_id,monster_name:currentMonster.name,monster_level:currentMonster.level,character_level:character.level,exp_gained:expGained,gold_gained:goldGained,items_dropped:currentMonster.dropItems.length,character_attack:character.attack,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null,dungeon_floor:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.currentFloor)||null});// 현재 몬스터 제거\nsetCurrentMonster(null);// 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\nif(inDungeon&&currentDungeon){// 현재 층을 클리어한 것으로 마킹\nconst updatedDungeon={...currentDungeon,clearedFloors:new Set([...Array.from(currentDungeon.clearedFloors),currentDungeon.currentFloor])};setCurrentDungeon(updatedDungeon);// 던전 리스트에서도 업데이트\nsetAvailableDungeons(prev=>prev.map(d=>d.id===updatedDungeon.id?updatedDungeon:d));// 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\naddToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},2000);}else{// 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\nif(!inDungeon){setTimeout(()=>{spawnMonster();},2000);}}};// 다음 층으로 진행\nconst proceedToNextFloor=()=>{if(!currentDungeon)return;const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor+1};setCurrentDungeon(updatedDungeon);setShowDungeonChoice(false);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);// 강제 스폰\naddToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);},500);};// 던전 나가기\nconst exitDungeonAfterVictory=()=>{if(!currentDungeon)return;// 던전 나가기 이벤트 로깅\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'victory_choice',time_spent:new Date().getTime()});// 던전 리셋 (현재 층을 1층으로 되돌림)\nconst resetDungeon={...currentDungeon,currentFloor:1};setAvailableDungeons(prev=>prev.map(d=>d.id===resetDungeon.id?resetDungeon:d));setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');setShowDungeonChoice(false);// 체력과 마나 완전 회복\nsetCharacter(prev=>({...prev,hp:prev.maxHp,mp:prev.maxMp}));addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');// 새로운 일반 몬스터 생성\nsetTimeout(()=>{spawnMonster();},1000);};// 자동 전투\nuseEffect(()=>{if(isAutoFighting&&currentMonster&&currentMonster.hp>0&&character.hp>0){const autoAttackTimer=setTimeout(()=>{attack();},2000);return()=>clearTimeout(autoAttackTimer);}},[isAutoFighting,currentMonster,character.hp]);// 스킬 쿨다운 및 MP 회복\nuseEffect(()=>{const interval=setInterval(()=>{setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+1),skills:prev.skills.map(skill=>({...skill,currentCooldown:Math.max(0,skill.currentCooldown-100)})),buffs:{attack:{amount:prev.buffs.attack.duration>0?prev.buffs.attack.amount:0,duration:Math.max(0,prev.buffs.attack.duration-100)},defense:{amount:prev.buffs.defense.duration>0?prev.buffs.defense.amount:0,duration:Math.max(0,prev.buffs.defense.duration-100)},speed:{amount:prev.buffs.speed.duration>0?prev.buffs.speed.amount:0,duration:Math.max(0,prev.buffs.speed.duration-100)}}}));},100);return()=>clearInterval(interval);},[]);const addToCombatLog=message=>{setCombatLog(prev=>{const newLog=[...prev,message];if(newLog.length>50)newLog.shift();return newLog;});// Auto-scroll to bottom immediately and with backup timing\nif(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}// Additional scroll with slight delay to ensure content is rendered\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},10);// Final backup scroll\nsetTimeout(()=>{if(logRef.current){logRef.current.scrollTop=logRef.current.scrollHeight;}},100);};// 스탯 분배\nconst allocateStatPoint=stat=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[stat]:prev.stats[stat]+1,availablePoints:prev.stats.availablePoints-1},// 스탯에 따른 능력치 업데이트\nattack:stat==='strength'?prev.attack+2:prev.attack,defense:stat==='vitality'?prev.defense+1:prev.defense,maxHp:stat==='vitality'?prev.maxHp+10:prev.maxHp,maxMp:stat==='intelligence'?prev.maxMp+5:prev.maxMp,speed:stat==='agility'?prev.speed+1:prev.speed}));};// 아이템 장착\nconst equipItem=item=>{// 소비 아이템은 장착할 수 없음\nif(item.type==='consumable'){return;}// 기존에 장착된 아이템이 있는지 확인\nconst slot=item.type;const currentEquippedItem=character.equipment[slot];setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[slot]=item;// 기존 아이템의 스탯 제거\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(currentEquippedItem){if(currentEquippedItem.stats.attack)newAttack-=currentEquippedItem.stats.attack;if(currentEquippedItem.stats.defense)newDefense-=currentEquippedItem.stats.defense;if(currentEquippedItem.stats.hp)newMaxHp-=currentEquippedItem.stats.hp;if(currentEquippedItem.stats.mp)newMaxMp-=currentEquippedItem.stats.mp;if(currentEquippedItem.stats.speed)newSpeed-=currentEquippedItem.stats.speed;}// 새 아이템의 스탯 적용\nif(item.stats.attack)newAttack+=item.stats.attack;if(item.stats.defense)newDefense+=item.stats.defense;if(item.stats.hp)newMaxHp+=item.stats.hp;if(item.stats.mp)newMaxMp+=item.stats.mp;if(item.stats.speed)newSpeed+=item.stats.speed;// 스탯이 최소값 이하로 내려가지 않도록 보정\nnewAttack=Math.max(1,newAttack);newDefense=Math.max(0,newDefense);newMaxHp=Math.max(100,newMaxHp);newMaxMp=Math.max(50,newMaxMp);newSpeed=Math.max(1,newSpeed);return{...prev,equipment:newEquipment,attack:newAttack,defense:newDefense,maxHp:newMaxHp,maxMp:newMaxMp,speed:newSpeed,hp:Math.min(prev.hp,newMaxHp),// 최대 체력이 줄어들 경우 현재 체력도 조정\nmp:Math.min(prev.mp,newMaxMp)// 최대 마나가 줄어들 경우 현재 마나도 조정\n};});// 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\nif(currentEquippedItem){setInventory(prev=>[...prev,currentEquippedItem]);addToCombatLog(`기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`);}else{addToCombatLog(`${item.name}을 장착했습니다!`);}// 인벤토리에서 새 아이템 제거\nsetInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));};// 장비 해제\nconst unequipItem=slot=>{const equippedItem=character.equipment[slot];if(!equippedItem)return;setCharacter(prev=>{const newEquipment={...prev.equipment};newEquipment[slot]=undefined;// 장착 해제한 아이템의 스탯 제거\nlet newAttack=prev.attack;let newDefense=prev.defense;let newMaxHp=prev.maxHp;let newMaxMp=prev.maxMp;let newSpeed=prev.speed;if(equippedItem.stats.attack)newAttack-=equippedItem.stats.attack;if(equippedItem.stats.defense)newDefense-=equippedItem.stats.defense;if(equippedItem.stats.hp)newMaxHp-=equippedItem.stats.hp;if(equippedItem.stats.mp)newMaxMp-=equippedItem.stats.mp;if(equippedItem.stats.speed)newSpeed-=equippedItem.stats.speed;// HP가 maxHp를 초과하지 않도록 조정\nconst adjustedHp=Math.min(prev.hp,newMaxHp);const adjustedMp=Math.min(prev.mp,newMaxMp);return{...prev,equipment:newEquipment,attack:Math.max(1,newAttack),// 최소 공격력 1\ndefense:Math.max(0,newDefense),maxHp:Math.max(100,newMaxHp),// 최소 체력 100\nmaxMp:Math.max(50,newMaxMp),// 최소 마나 50\nspeed:Math.max(1,newSpeed),// 최소 속도 1\nhp:adjustedHp,mp:adjustedMp};});// 인벤토리에 아이템 추가\nsetInventory(prev=>[...prev,equippedItem]);addToCombatLog(`${equippedItem.name}을 해제했습니다!`);};// 아이템 판매\nconst sellItem=item=>{const sellPrice=Math.floor(item.price*0.7);setCharacter(prev=>({...prev,gold:prev.gold+sellPrice}));setInventory(prev=>prev.filter(invItem=>invItem.id!==item.id));addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);};// 아이템 구매\nconst buyItem=item=>{if(character.gold<item.price)return;setCharacter(prev=>({...prev,gold:prev.gold-item.price}));setInventory(prev=>[...prev,{...item,id:`${item.id}_${Date.now()}`}]);addToCombatLog(`${item.name}을 구매했습니다!`);};const getRarityColor=rarity=>{const colors={common:'#9ca3af',rare:'#3b82f6',epic:'#8b5cf6',legendary:'#f59e0b',mythic:'#ef4444'};return colors[rarity]||'#9ca3af';};// 던전 입장 함수\nconst enterDungeon=dungeon=>{if(dungeon.isComingSoon){addToCombatLog('이 던전은 아직 업데이트 예정입니다!');return;}if(character.level<dungeon.requiredLevel){addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);return;}setCurrentDungeon(dungeon);setInDungeon(true);setGameMode('dungeon');setCurrentTab('dungeon');spawnDungeonMonster(dungeon);// 이벤트 로깅\nonAction('dungeon_entered',{dungeon_id:dungeon.id,dungeon_name:dungeon.name,character_level:character.level,floor:dungeon.currentFloor,character_attack:character.attack,character_defense:character.defense,character_hp:character.hp,character_mp:character.mp,entry_time:new Date().getTime()});};// 던전 몬스터 스폰\nconst spawnDungeonMonster=function(dungeon){let forceSpawn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;// 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\nif(currentMonster&&!forceSpawn)return;// 강제 생성인 경우 기존 몬스터를 먼저 제거\nif(forceSpawn&&currentMonster){setCurrentMonster(null);}// 던전별 고유 몬스터 타입 정의\nconst getDungeonMonsters=dungeonId=>{switch(dungeonId){case'forest':// 어둠의 숲\nreturn[{name:'늑대',baseHp:40,baseAttack:10,baseDefense:3},{name:'곰',baseHp:80,baseAttack:16,baseDefense:6},{name:'거대 거미',baseHp:120,baseAttack:22,baseDefense:10},{name:'숲의 수호자',baseHp:200,baseAttack:35,baseDefense:18},{name:'고대 엔트',baseHp:350,baseAttack:45,baseDefense:25}];case'cave':// 고블린 동굴\nreturn[{name:'고블린 전사',baseHp:60,baseAttack:14,baseDefense:5},{name:'고블린 궁수',baseHp:45,baseAttack:18,baseDefense:3},{name:'고블린 마법사',baseHp:50,baseAttack:20,baseDefense:4},{name:'고블린 우두머리',baseHp:180,baseAttack:30,baseDefense:15},{name:'고블린 왕',baseHp:400,baseAttack:50,baseDefense:28}];case'tower':// 마법사의 탑\nreturn[{name:'마법 골렘',baseHp:100,baseAttack:20,baseDefense:12},{name:'스켈레톤 메이지',baseHp:70,baseAttack:25,baseDefense:8},{name:'플레임 엘리멘탈',baseHp:110,baseAttack:28,baseDefense:10},{name:'리치',baseHp:250,baseAttack:40,baseDefense:20},{name:'고대 마법사',baseHp:500,baseAttack:60,baseDefense:35}];default:return[{name:'슬라임',baseHp:30,baseAttack:8,baseDefense:2},{name:'고블린',baseHp:50,baseAttack:12,baseDefense:4},{name:'오크',baseHp:100,baseAttack:18,baseDefense:8},{name:'트롤',baseHp:150,baseAttack:25,baseDefense:12},{name:'드래곤',baseHp:300,baseAttack:40,baseDefense:20}];}};const baseMonsters=getDungeonMonsters(dungeon.id);// 층수에 따른 점진적 몬스터 선택 로직\nconst floorBasedMonsterIndex=()=>{const currentFloor=dungeon.currentFloor;if(currentFloor<=3)return 0;// 첫 번째 몬스터 (1~3층)\nif(currentFloor<=7)return 1;// 두 번째 몬스터 (4~7층)  \nif(currentFloor<=12)return 2;// 세 번째 몬스터 (8~12층)\nif(currentFloor<=18)return 3;// 네 번째 몬스터 (13~18층)\nreturn 4;// 다섯 번째 몬스터 (19층 이상)\n};// 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\nconst baseIndex=floorBasedMonsterIndex();const randomVariation=Math.random()<0.3&&baseIndex>0?-1:0;// 30% 확률로 한 단계 낮은 몬스터\nconst selectedIndex=Math.max(0,baseIndex+randomVariation);const selectedMonster=baseMonsters[selectedIndex];const levelMultiplier=1+(dungeon.level+dungeon.currentFloor-1)*0.2;const monster={id:`dungeon_${dungeon.id}_${Date.now()}`,name:selectedMonster.name,level:dungeon.level+dungeon.currentFloor,hp:Math.floor(selectedMonster.baseHp*levelMultiplier),maxHp:Math.floor(selectedMonster.baseHp*levelMultiplier),attack:Math.floor(selectedMonster.baseAttack*levelMultiplier),defense:Math.floor(selectedMonster.baseDefense*levelMultiplier),speed:10,exp:Math.floor((20+dungeon.level*8+dungeon.currentFloor*3)*levelMultiplier),gold:Math.floor((10+dungeon.level*3)*levelMultiplier),dropItems:generateDropItems(),isBoss:dungeon.currentFloor%5===0};if(monster.isBoss){monster.name=`보스 ${monster.name}`;monster.hp*=2;monster.maxHp*=2;monster.attack*=1.5;monster.exp*=3;monster.gold*=2;}setCurrentMonster(monster);addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);};// 물약 사용 함수\nconst consumeItem=item=>{if(item.type!=='consumable'||!item.consumableEffect)return;const effect=item.consumableEffect;// 체력 회복\nif(effect.healHp){setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+effect.healHp)}));addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);}// 마나 회복\nif(effect.healMp){setCharacter(prev=>({...prev,mp:Math.min(prev.maxMp,prev.mp+effect.healMp)}));addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);}// 버프 효과\nif(effect.buffType&&effect.buffAmount&&effect.buffDuration){setCharacter(prev=>({...prev,buffs:{...prev.buffs,[effect.buffType]:{amount:effect.buffAmount,duration:effect.buffDuration}}}));addToCombatLog(`${item.name}을 사용하여 ${effect.buffType==='attack'?'공격력':effect.buffType==='defense'?'방어력':'속도'} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);}// 인벤토리에서 물약 제거 또는 수량 감소\nsetInventory(prev=>{const itemIndex=prev.findIndex(invItem=>invItem.id===item.id);if(itemIndex!==-1){const newInventory=[...prev];const currentItem=newInventory[itemIndex];if(currentItem.quantity&&currentItem.quantity>1){newInventory[itemIndex]={...currentItem,quantity:currentItem.quantity-1};}else{newInventory.splice(itemIndex,1);}return newInventory;}return prev;});// 이벤트 로깅\nonAction('consumable_used',{item_name:item.name,item_type:item.type,character_level:character.level,heal_hp:effect.healHp||0,heal_mp:effect.healMp||0,buff_type:effect.buffType||'none',buff_amount:effect.buffAmount||0,character_hp_before:character.hp,character_mp_before:character.mp,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스킬 사용 함수\nconst castSkill=skill=>{if(!skill.isLearned||skill.level===0){addToCombatLog('스킬을 먼저 배워야 합니다!');return;}if(skill.currentCooldown>0||character.mp<skill.manaCost)return;// 스킬 사용 로직\nif(skill.id==='heal'){const healAmount=30+skill.level*5;setCharacter(prev=>({...prev,hp:Math.min(prev.maxHp,prev.hp+healAmount),mp:prev.mp-skill.manaCost}));addToCombatLog(`${healAmount}만큼 회복했다!`);}else{// 공격 스킬\nif(currentMonster){const damage=calculateSkillDamage(skill,character);const newMonsterHp=Math.max(0,currentMonster.hp-damage);setCurrentMonster(prev=>prev?{...prev,hp:newMonsterHp}:null);setCharacter(prev=>({...prev,mp:prev.mp-skill.manaCost}));addToCombatLog(`${skill.name}로 ${damage} 데미지!`);// 몬스터가 죽지 않았으면 반격\nif(newMonsterHp>0){setTimeout(()=>{monsterAttack();},1000);}else{// 몬스터가 죽었으면 처치 처리\nsetTimeout(()=>{defeatMonster();},1500);}}}// 쿨다운 적용\nsetCharacter(prev=>({...prev,skills:prev.skills.map(s=>s.id===skill.id?{...s,currentCooldown:s.cooldown}:s)}));// 이벤트 로깅\nonAction('skill_used',{skill_name:skill.name,skill_level:skill.level,mana_cost:skill.manaCost,character_level:character.level,character_mp_before:character.mp,character_mp_after:character.mp-skill.manaCost,dungeon_name:(currentDungeon===null||currentDungeon===void 0?void 0:currentDungeon.name)||null});};// 스탯 포인트 할당\nconst allocateStat=statName=>{if(character.stats.availablePoints<=0)return;setCharacter(prev=>({...prev,stats:{...prev.stats,[statName]:prev.stats[statName]+1,availablePoints:prev.stats.availablePoints-1}}));// 스탯에 따른 능력치 업데이트\nlet hpBonus=0,mpBonus=0,attackBonus=0,defenseBonus=0;if(statName==='vitality')hpBonus=5;if(statName==='intelligence')mpBonus=3;if(statName==='strength')attackBonus=2;if(statName==='agility'){attackBonus=1;defenseBonus=1;}setCharacter(prev=>({...prev,maxHp:prev.maxHp+hpBonus,hp:prev.hp+hpBonus,maxMp:prev.maxMp+mpBonus,mp:prev.mp+mpBonus,attack:prev.attack+attackBonus,defense:prev.defense+defenseBonus}));// 이벤트 로깅\nonAction('stat_allocated',{stat_name:statName,stat_value:character.stats[statName]+1,character_level:character.level,available_points:character.stats.availablePoints-1});};// 공통 캐릭터 정보 헤더 컴포넌트\nconst renderCharacterHeader=()=>{const expPercentage=character.exp/character.maxExp*100;return/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',borderRadius:'15px',padding:'15px 20px',marginBottom:'20px',color:'white'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(120px, 1fr))',gap:'15px',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'20px',fontWeight:'bold',color:'#ffffff'},children:[\"Lv.\",character.level]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uB808\\uBCA8\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'20px',fontWeight:'bold',color:'#fbbf24'},children:[character.gold,\"G\"]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uACE8\\uB4DC\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#f87171'},children:character.attack}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uACF5\\uACA9\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#60a5fa'},children:character.defense}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uBC29\\uC5B4\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#34d399'},children:[character.hp,\"/\",character.maxHp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uCCB4\\uB825\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#a78bfa'},children:[character.mp,\"/\",character.maxMp]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#e0e7ff',fontSize:'12px'},children:\"\\uB9C8\\uB098\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'14px',color:'#e0e7ff'},children:\"\\uACBD\\uD5D8\\uCE58\"}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'14px',color:'#ffffff',fontWeight:'bold'},children:[character.exp,\" / \",character.maxExp,\" (\",Math.floor(expPercentage),\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'8px',backgroundColor:'rgba(255, 255, 255, 0.2)',borderRadius:'10px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${expPercentage}%`,height:'100%',background:'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',borderRadius:'10px',transition:'width 0.3s ease'}})})]})]});};// 로비 렌더링\nconst renderLobbyTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #059669 0%, #10b981 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'24px'},children:\"\\uD83C\\uDFE0 \\uBAA8\\uD5D8\\uAC00 \\uB85C\\uBE44\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,opacity:0.9},children:\"\\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uBAA8\\uD5D8\\uC744 \\uC2DC\\uC791\\uD558\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',marginBottom:'15px',fontSize:'20px'},children:\"\\uD83C\\uDFF0 \\uB358\\uC804 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gap:'15px'},children:availableDungeons.map(dungeon=>/*#__PURE__*/_jsx(\"div\",{style:{background:dungeon.isUnlocked?'#374151':'#1f2937',borderRadius:'10px',padding:'20px',border:dungeon.isUnlocked?'2px solid #10b981':'2px solid #4b5563',opacity:dungeon.isUnlocked?1:0.6},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'white',margin:'0 0 5px 0',fontSize:'18px'},children:[dungeon.name,\" (Lv.\",dungeon.level,\")\"]}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#9ca3af',margin:'0 0 10px 0',fontSize:'14px'},children:dungeon.description}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#6b7280'},children:[\"\\uD544\\uC694 \\uB808\\uBCA8: \",dungeon.requiredLevel,\" | \\uCE35\\uC218: \",dungeon.floors,\"\\uCE35 | \\uD604\\uC7AC \\uCE35: \",dungeon.currentFloor,\"\\uCE35\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>enterDungeon(dungeon),disabled:!dungeon.isUnlocked||character.level<dungeon.requiredLevel||dungeon.isComingSoon,style:{background:dungeon.isComingSoon?'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)':dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?'linear-gradient(135deg, #10b981 0%, #059669 100%)':'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'12px 20px',fontSize:'14px',fontWeight:'bold',cursor:dungeon.isUnlocked&&character.level>=dungeon.requiredLevel&&!dungeon.isComingSoon?'pointer':'not-allowed',transition:'all 0.3s ease'},children:dungeon.isComingSoon?'업데이트 예정':dungeon.isUnlocked&&character.level>=dungeon.requiredLevel?'입장':'잠금'})]})},dungeon.id))})]})]});// 던전 탭 렌더링\nconst renderDungeonTab=()=>{if(!inDungeon||!currentDungeon){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'100px 20px',textAlign:'center',background:'#1f2937',color:'#9ca3af'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uB358\\uC804\\uC5D0 \\uC785\\uC7A5\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uBE44\\uC5D0\\uC11C \\uB358\\uC804\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{style:{margin:'0 0 5px 0',fontSize:'24px'},children:[\"\\uD83C\\uDFF0 \",currentDungeon.name]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:0,opacity:0.9,fontSize:'14px'},children:[currentDungeon.currentFloor,\"\\uCE35 / \",currentDungeon.floors,\"\\uCE35\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 던전 나가기 이벤트 로깅\nonAction('dungeon_exited',{dungeon_id:currentDungeon.id,dungeon_name:currentDungeon.name,current_floor:currentDungeon.currentFloor,total_floors:currentDungeon.floors,character_level:character.level,exit_reason:'manual',time_spent:new Date().getTime()});setInDungeon(false);setCurrentDungeon(null);setCurrentTab('lobby');setGameMode('lobby');},style:{background:'#374151',color:'white',border:'none',borderRadius:'8px',padding:'10px 15px',cursor:'pointer'},children:\"\\uB358\\uC804 \\uB098\\uAC00\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',alignItems:'center',justifyContent:'center',padding:'15px',background:'rgba(0, 0, 0, 0.2)',borderRadius:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(currentDungeon.currentFloor>1){const updatedDungeon={...currentDungeon,currentFloor:currentDungeon.currentFloor-1};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}},disabled:currentDungeon.currentFloor<=1,style:{background:currentDungeon.currentFloor<=1?'#6b7280':'#3b82f6',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',cursor:currentDungeon.currentFloor<=1?'not-allowed':'pointer',fontSize:'14px'},children:\"\\u2B06\\uFE0F \\uC774\\uC804 \\uCE35\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",max:currentDungeon.floors,value:currentDungeon.currentFloor,placeholder:\"\\uCE35\",onChange:e=>{const targetFloor=parseInt(e.target.value);if(targetFloor>=1&&targetFloor<=currentDungeon.floors){// Check if all previous floors are cleared\nlet canMoveTo=true;for(let i=1;i<targetFloor;i++){if(!currentDungeon.clearedFloors.has(i)){canMoveTo=false;addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);break;}}if(canMoveTo){const updatedDungeon={...currentDungeon,currentFloor:targetFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${targetFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}}},style:{background:'rgba(255, 255, 255, 0.1)',color:'white',border:'1px solid rgba(255, 255, 255, 0.3)',borderRadius:'6px',padding:'8px 12px',fontSize:'16px',fontWeight:'bold',textAlign:'center',width:'80px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const nextFloor=currentDungeon.currentFloor+1;const currentFloorCleared=currentDungeon.clearedFloors.has(currentDungeon.currentFloor);if(currentDungeon.currentFloor<currentDungeon.floors&&currentFloorCleared){const updatedDungeon={...currentDungeon,currentFloor:nextFloor};setCurrentDungeon(updatedDungeon);setCurrentMonster(null);addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);setTimeout(()=>{spawnDungeonMonster(updatedDungeon,true);},1000);}else if(!currentFloorCleared){addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);}},disabled:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor),style:{background:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?'#6b7280':'#10b981',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',cursor:currentDungeon.currentFloor>=currentDungeon.floors||!currentDungeon.clearedFloors.has(currentDungeon.currentFloor)?'not-allowed':'pointer',fontSize:'14px'},children:\"\\u2B07\\uFE0F \\uB2E4\\uC74C \\uCE35\"})]})]}),showDungeonChoice&&/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'18px',fontWeight:'bold',marginBottom:'10px'},children:\"\\uD83C\\uDFC3 \\uB2E4\\uC74C \\uCE35\\uC73C\\uB85C \\uC774\\uB3D9 \\uC911...\"}),/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255, 255, 255, 0.2)',borderRadius:'10px',height:'8px',overflow:'hidden',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #10b981, #059669)',height:'100%',width:'100%',borderRadius:'10px',animation:'progress 3s linear'}})}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',opacity:0.9},children:\"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"})]}),currentMonster&&/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'80px',height:'80px',background:'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',borderRadius:'50%',margin:'0 auto 10px',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'30px'},children:\"\\u2694\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',marginBottom:'10px'},children:[character.name,\" Lv.\",character.level]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'5px',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',height:'8px',borderRadius:'4px',width:`${character.hp/character.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',fontSize:'12px',marginTop:'5px'},children:[\"HP: \",character.hp,\"/\",character.maxHp]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'80px',height:'80px',background:'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',borderRadius:'50%',margin:'0 auto 10px',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'30px'},children:\"\\uD83D\\uDC79\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',marginBottom:'10px'},children:[currentMonster.name,\" Lv.\",currentMonster.level,currentMonster.isBoss&&/*#__PURE__*/_jsx(\"span\",{style:{color:'#fbbf24'},children:\" \\uD83D\\uDC51\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'5px',marginBottom:'5px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',height:'8px',borderRadius:'4px',width:`${currentMonster.hp/currentMonster.maxHp*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'white',fontSize:'12px',marginTop:'5px'},children:[\"HP: \",currentMonster.hp,\"/\",currentMonster.maxHp]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',justifyContent:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:attack,disabled:character.hp<=0,style:{background:'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px 24px',fontSize:'16px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.5},children:\"\\u2694\\uFE0F \\uACF5\\uACA9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAutoFighting(!isAutoFighting),style:{background:isAutoFighting?'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)':'linear-gradient(135deg, #10b981 0%, #059669 100%)',color:'white',border:'none',borderRadius:'10px',padding:'12px 24px',fontSize:'16px',fontWeight:'bold',cursor:'pointer'},children:isAutoFighting?'⏸️ 자동 중지':'▶️ 자동 전투'})]}),character.skills.filter(skill=>skill.type==='active'&&skill.isLearned&&skill.level>0).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'white',marginBottom:'10px',textAlign:'center',fontSize:'16px'},children:[\"\\u2728 \\uC2A4\\uD0AC \\uC0AC\\uC6A9 (MP: \",character.mp,\"/\",character.maxMp,\")\"]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'8px',justifyContent:'center',flexWrap:'wrap'},children:character.skills.filter(skill=>skill.type==='active'&&skill.isLearned&&skill.level>0).map(skill=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>castSkill(skill),disabled:character.hp<=0||skill.currentCooldown>0||character.mp<skill.manaCost,style:{background:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)':'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'10px 16px',fontSize:'14px',fontWeight:'bold',cursor:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?'pointer':'not-allowed',opacity:character.hp>0&&skill.currentCooldown===0&&character.mp>=skill.manaCost?1:0.6,position:'relative'},title:`${skill.description}\\n대미지: ${calculateSkillDamage(skill,character)} | 마나: ${skill.manaCost}`,children:[/*#__PURE__*/_jsx(\"div\",{children:skill.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'10px',opacity:0.8},children:[\"MP: \",skill.manaCost,skill.currentCooldown>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" | \",(skill.currentCooldown/1000).toFixed(1),\"s\"]})]})]},skill.id))})]}),inventory.filter(item=>item.type==='consumable').length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'white',marginBottom:'10px',textAlign:'center',fontSize:'16px'},children:\"\\uD83E\\uDDEA \\uBB3C\\uC57D \\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'8px',justifyContent:'center',flexWrap:'wrap'},children:inventory.filter(item=>item.type==='consumable').map(item=>{var _item$consumableEffec,_item$consumableEffec2,_item$consumableEffec3,_item$consumableEffec4,_item$consumableEffec5;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>consumeItem(item),disabled:character.hp<=0,style:{background:character.hp>0?`linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`:'#4b5563',color:'white',border:'none',borderRadius:'8px',padding:'8px 12px',fontSize:'12px',fontWeight:'bold',cursor:character.hp>0?'pointer':'not-allowed',opacity:character.hp>0?1:0.6,position:'relative'},title:`${item.name}\\n${(_item$consumableEffec=item.consumableEffect)!==null&&_item$consumableEffec!==void 0&&_item$consumableEffec.healHp?`HP +${item.consumableEffect.healHp}`:''}${(_item$consumableEffec2=item.consumableEffect)!==null&&_item$consumableEffec2!==void 0&&_item$consumableEffec2.healMp?`MP +${item.consumableEffect.healMp}`:''}${(_item$consumableEffec3=item.consumableEffect)!==null&&_item$consumableEffec3!==void 0&&_item$consumableEffec3.buffType?`${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}`:''}`,children:[/*#__PURE__*/_jsx(\"div\",{children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'10px',opacity:0.8},children:[item.quantity&&item.quantity>1?`x${item.quantity}`:'',((_item$consumableEffec4=item.consumableEffect)===null||_item$consumableEffec4===void 0?void 0:_item$consumableEffec4.healHp)&&` HP+${item.consumableEffect.healHp}`,((_item$consumableEffec5=item.consumableEffect)===null||_item$consumableEffec5===void 0?void 0:_item$consumableEffec5.healMp)&&` MP+${item.consumableEffect.healMp}`]})]},item.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',borderRadius:'10px',padding:'15px',height:'200px',overflowY:'auto',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:'#9ca3af',marginBottom:'10px',fontWeight:'bold'},children:\"\\uC804\\uD22C \\uB85C\\uADF8:\"}),combatLog.slice(-10).map((log,index)=>/*#__PURE__*/_jsx(\"div\",{style:{color:'#e5e7eb',marginBottom:'5px',lineHeight:'1.4'},children:log},index))]})]})]});};// 인벤토리 탭 렌더링\nconst renderInventoryTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',borderRadius:'15px',padding:'20px',marginBottom:'20px',color:'white',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'24px'},children:\"\\uD83C\\uDF92 \\uC778\\uBCA4\\uD1A0\\uB9AC\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,opacity:0.9},children:\"\\uBCF4\\uC720\\uD55C \\uC544\\uC774\\uD15C\\uACFC \\uC7A5\\uBE44\\uB97C \\uAD00\\uB9AC\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',marginBottom:'15px'},children:\"\\u2694\\uFE0F \\uC7A5\\uCC29 \\uC911\\uC778 \\uC7A5\\uBE44\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(200px, 1fr))',gap:'15px'},children:Object.entries(character.equipment).map(_ref4=>{let[slot,item]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255, 255, 255, 0.1)',borderRadius:'10px',padding:'15px',border:item?'2px solid #10b981':'2px solid #4b5563'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#9ca3af',margin:'0 0 10px 0',textTransform:'capitalize'},children:slot==='weapon'?'무기':slot==='armor'?'갑옷':slot==='helmet'?'투구':slot==='boots'?'신발':slot==='ring'?'반지':'목걸이'}),item?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'#10b981',margin:'0 0 5px 0',fontWeight:'bold'},children:item.name}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#9ca3af'},children:/*#__PURE__*/_jsx(_Fragment,{children:Object.entries(item.stats||{}).map(_ref5=>{let[stat,value]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{children:[stat==='attack'?'공격력':stat==='defense'?'방어력':stat==='hp'?'체력':stat==='mp'?'마나':stat,\": +\",value]},stat);})})})]}):/*#__PURE__*/_jsx(\"p\",{style:{color:'#6b7280',margin:0,fontStyle:'italic'},children:\"\\uC7A5\\uCC29\\uB41C \\uC544\\uC774\\uD15C \\uC5C6\\uC74C\"})]},slot);})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:'white',marginBottom:'15px'},children:[\"\\uD83D\\uDCE6 \\uC778\\uBCA4\\uD1A0\\uB9AC (\",inventory.length,\"\\uAC1C)\"]}),inventory.length===0?/*#__PURE__*/_jsx(\"div\",{style:{background:'rgba(255, 255, 255, 0.05)',borderRadius:'10px',padding:'40px',textAlign:'center',color:'#6b7280'},children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC\\uAC00 \\uBE44\\uC5B4\\uC788\\uC2B5\\uB2C8\\uB2E4.\"})}):/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(250px, 1fr))',gap:'15px'},children:inventory.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255, 255, 255, 0.1)',borderRadius:'10px',padding:'15px',border:`2px solid ${getRarityColor(item.rarity)}`},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'flex-start'},children:/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:getRarityColor(item.rarity),margin:'0 0 5px 0',fontSize:'16px',fontWeight:'bold'},children:item.name}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'#9ca3af',margin:'0 0 10px 0',fontSize:'12px',textTransform:'capitalize'},children:[item.type,\" \\u2022 \",item.rarity]}),item.stats&&Object.keys(item.stats).length>0&&/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#9ca3af',marginBottom:'10px'},children:Object.entries(item.stats).map(_ref6=>{let[stat,value]=_ref6;return/*#__PURE__*/_jsxs(\"div\",{children:[stat==='attack'?'공격력':stat==='defense'?'방어력':stat==='hp'?'체력':stat==='mp'?'마나':stat,\": +\",value]},stat);})})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginTop:'10px'},children:[item.type!=='consumable'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 장착 로직 (임시)\nconsole.log('Equip item:',item.name);},style:{background:'linear-gradient(135deg, #10b981 0%, #059669 100%)',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',fontSize:'12px',cursor:'pointer',fontWeight:'bold'},children:\"\\uC7A5\\uCC29\"}),item.type==='consumable'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 사용 로직 (임시)\nconsole.log('Use item:',item.name);},style:{background:'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',fontSize:'12px',cursor:'pointer',fontWeight:'bold'},children:\"\\uC0AC\\uC6A9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// 판매 로직 (임시)\nconsole.log('Sell item:',item.name);},style:{background:'#dc2626',color:'white',border:'none',borderRadius:'6px',padding:'8px 12px',fontSize:'12px',cursor:'pointer'},children:\"\\uD310\\uB9E4\"})]})]},index))})]})]});const renderShopTab=()=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#1f2937',minHeight:'600px'},children:[renderCharacterHeader(),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#374151',borderRadius:'15px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',margin:'0 0 15px 0'},children:\"\\uC0C1\\uC810\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(250px, 1fr))',gap:'15px'},children:shop.map(item=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'#1f2937',border:`2px solid ${getRarityColor(item.rarity)}`,borderRadius:'10px',padding:'15px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:getRarityColor(item.rarity),fontWeight:'bold',marginBottom:'5px'},children:item.name}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#9ca3af',fontSize:'14px',marginBottom:'10px'},children:[item.type,\" \\u2022 Lv.\",item.level,\" \\u2022 \",item.rarity]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#d1d5db',fontSize:'12px',marginBottom:'15px'},children:Object.entries(item.stats).map(_ref7=>{let[key,value]=_ref7;return value>0&&/*#__PURE__*/_jsxs(\"div\",{children:[key==='attack'?'⚔️':key==='defense'?'🛡️':key==='hp'?'❤️':key==='mp'?'💙':key==='speed'?'💨':key==='critRate'?'💥':'⭐',\" +\",value]},key);})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:'#fbbf24',fontWeight:'bold'},children:[\"\\uD83D\\uDCB0 \",item.price.toLocaleString(),\"G\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>buyItem(item),disabled:character.gold<item.price,style:{background:character.gold>=item.price?'#10b981':'#6b7280',color:'white',border:'none',borderRadius:'5px',padding:'8px 16px',fontSize:'12px',cursor:character.gold>=item.price?'pointer':'not-allowed',opacity:character.gold>=item.price?1:0.6},children:\"\\uAD6C\\uB9E4\"})]})]},item.id))})]})]});const renderTabs=()=>/*#__PURE__*/_jsx(\"div\",{style:{background:'#374151',display:'flex',borderRadius:'15px 15px 0 0',overflow:'hidden'},children:[{id:'lobby',name:t('rpg.tabs.lobby'),icon:'🏠'},{id:'character',name:t('rpg.tabs.character'),icon:'👤'},{id:'inventory',name:t('rpg.tabs.inventory'),icon:'🎒'},{id:'skills',name:t('rpg.tabs.skills'),icon:'✨'},{id:'dungeon',name:t('rpg.tabs.dungeon'),icon:'🏰'},{id:'shop',name:t('rpg.tabs.shop'),icon:'🛒'}].map(tab=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setCurrentTab(tab.id),style:{background:currentTab===tab.id?colors.accent:'transparent',color:colors.text,border:'none',padding:'15px 20px',fontSize:'14px',cursor:'pointer',flex:1,transition:'all 0.3s ease'},children:[/*#__PURE__*/_jsx(\"div\",{children:tab.icon}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',marginTop:'5px'},children:tab.name})]},tab.id))});return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',maxWidth:'1200px',margin:'0 auto',background:colors.cardBg,borderRadius:'20px',overflow:'hidden',boxShadow:'0 20px 60px rgba(0, 0, 0, 0.3)',fontFamily:'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',border:`1px solid ${colors.cardBorder}`},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:colors.backgroundSecondary,padding:'20px',textAlign:'center',position:'relative',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,right:0,bottom:0,background:'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'}}),/*#__PURE__*/_jsx(\"h1\",{style:{margin:0,fontSize:'32px',fontWeight:'bold',color:colors.text,textShadow:'0 4px 20px rgba(147, 51, 234, 0.5)',position:'relative',zIndex:1},children:t('rpg.title')}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'10px 0 0 0',color:colors.textSecondary,fontSize:'16px',position:'relative',zIndex:1},children:t('rpg.subtitle')})]}),renderTabs(),currentTab==='lobby'&&renderLobbyTab(),currentTab==='dungeon'&&renderDungeonTab(),currentTab==='character'&&renderInventoryTab(),currentTab==='inventory'&&renderInventoryTab(),currentTab==='skills'&&renderSkillsTab(),currentTab==='shop'&&renderShopTab()]});};","map":{"version":3,"names":["React","useState","useEffect","useRef","useTheme","useLanguage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdvancedIdleRPG","_ref","onAction","isSimulating","currentAction","userStats","setUserStats","currentUser","colors","t","calculateSkillDamage","skill","character","level","isLearned","damage","baseDamage","damageMultiplier","statMultiplier","attack","defense","hp","maxHp","mp","maxMp","Math","floor","style","document","createElement","textContent","head","appendChild","removeChild","setCharacter","id","name","exp","maxExp","speed","gold","class","skills","equipment","stats","strength","agility","intelligence","vitality","luck","availablePoints","prestige","rebirth","buffs","amount","duration","currentTab","setCurrentTab","gameMode","setGameMode","isAutoFighting","setIsAutoFighting","currentMonster","setCurrentMonster","combatLog","setCombatLog","selectedDungeon","setSelectedDungeon","inventory","setInventory","availableDungeons","setAvailableDungeons","currentDungeon","setCurrentDungeon","inDungeon","setInDungeon","guild","setGuild","shop","setShop","achievements","setAchievements","monstersDefeated","setMonstersDefeated","totalGoldEarned","setTotalGoldEarned","showDungeonChoice","setShowDungeonChoice","logRef","initializeGame","monsters_defeated","character_class","total_gold_earned","inventory_items","map","item","type","rarity","quantity","current_buffs","Object","entries","filter","_ref2","_","buff","_ref3","ceil","translations","ko","slash","description","heal","critical","dungeons","forest","cave","tower","items","sword1","armor1","helmet1","health_potion","mana_potion","greater_health_potion","strength_potion","defense_potion","monsters","slime","goblin","orc","troll","dragon","combat","appeared","levelUp","defeated","itemObtained","dungeonCleared","nextFloor","dungeonExited","hpMpRecovered","defeat","en","zh","currentLang","localStorage","getItem","texts","getAllSkills","currentLevel","existingSkills","_existingSkills$find","allSkills","find","s","maxLevel","manaCost","cooldown","currentCooldown","category","requiredLevel","isUnlocked","initialSkills","initialDungeons","floors","currentFloor","clearedFloors","Set","rewards","goldRange","expRange","itemDropChance","isComingSoon","getShopItems","_availableDungeons$fi","baseItems","price","enhancement","consumableEffect","healHp","healMp","goblinCaveUnlocked","d","push","buffType","buffAmount","buffDuration","shopItems","prev","window","gameTexts","spawnMonster","updateShop","_availableDungeons$fi2","_availableDungeons$fi3","existingIds","newItems","includes","wizardTowerUnlocked","wizardItems","updateSkills","updatedSkills","executeSkill","addToCombatLog","healAmount","min","newMonsterHp","max","setTimeout","defeatMonster","learnSkill","cost","renderSkillsByCategory","filteredSkills","marginBottom","children","color","text","fontSize","fontWeight","display","gridTemplateColumns","gap","calculatedDamage","canUpgrade","background","border","borderRadius","padding","justifyContent","alignItems","flex","margin","lineHeight","onClick","disabled","cursor","skillSubTab","setSkillSubTab","renderSkillsTab","minHeight","renderCharacterHeader","textAlign","opacity","overflow","label","tab","transition","baseHp","baseAttack","baseDefense","randomMonster","random","length","levelMultiplier","monster","Date","now","dropItems","generateDropItems","isBoss","dropChance","rarities","itemTypes","itemType","generateItemName","generateItemStats","calculateItemPrice","prefixes","common","rare","epic","legendary","mythic","itemNames","weapon","armor","helmet","boots","ring","amulet","prefix","itemTypeNames","multipliers","base","critRate","critDamage","basePrice","buffedAttack","calculateDamage","isCritical","finalDamage","user_id","is_critical","monster_name","monster_level","character_level","character_attack","monster_hp_remaining","dungeon_name","dungeon_floor","monsterAttack","buffedDefense","newHp","dungeon_id","damage_taken","character_defense","current_floor","total_floors","exit_reason","time_spent","getTime","expGained","goldGained","newExp","newGold","newLevel","newMaxExp","newMp","newMaxHp","newMaxMp","new_level","stat_points_gained","prevDungeons","dungeon","exp_gained","gold_gained","items_dropped","updatedDungeon","Array","from","spawnDungeonMonster","proceedToNextFloor","exitDungeonAfterVictory","resetDungeon","autoAttackTimer","clearTimeout","interval","setInterval","clearInterval","message","newLog","shift","current","scrollTop","scrollHeight","allocateStatPoint","stat","equipItem","slot","currentEquippedItem","newEquipment","newAttack","newDefense","newSpeed","invItem","unequipItem","equippedItem","undefined","adjustedHp","adjustedMp","sellItem","sellPrice","buyItem","getRarityColor","enterDungeon","character_hp","character_mp","entry_time","forceSpawn","arguments","getDungeonMonsters","dungeonId","baseMonsters","floorBasedMonsterIndex","baseIndex","randomVariation","selectedIndex","selectedMonster","consumeItem","effect","itemIndex","findIndex","newInventory","currentItem","splice","item_name","item_type","heal_hp","heal_mp","buff_type","buff_amount","character_hp_before","character_mp_before","castSkill","skill_name","skill_level","mana_cost","character_mp_after","allocateStat","statName","hpBonus","mpBonus","attackBonus","defenseBonus","stat_name","stat_value","available_points","expPercentage","marginTop","width","height","backgroundColor","renderLobbyTab","renderDungeonTab","value","placeholder","onChange","e","targetFloor","parseInt","target","canMoveTo","i","has","currentFloorCleared","animation","flexWrap","position","title","toFixed","_item$consumableEffec","_item$consumableEffec2","_item$consumableEffec3","_item$consumableEffec4","_item$consumableEffec5","overflowY","slice","log","index","renderInventoryTab","_ref4","textTransform","_ref5","fontStyle","keys","_ref6","console","renderShopTab","_ref7","key","toLocaleString","renderTabs","icon","accent","maxWidth","cardBg","boxShadow","fontFamily","cardBorder","backgroundSecondary","top","left","right","bottom","textShadow","zIndex","textSecondary"],"sources":["/Users/jegaljin-u/workspace/thinking-guide/src/components/AdvancedIdleRPG.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useLanguage } from '../contexts/LanguageContext';\n\ninterface Dungeon {\n  id: string;\n  name: string;\n  level: number;\n  description: string;\n  floors: number;\n  currentFloor: number;\n  clearedFloors: Set<number>; // Track which floors have been cleared\n  monsters: Monster[];\n  rewards: {\n    goldRange: [number, number];\n    expRange: [number, number];\n    itemDropChance: number;\n  };\n  requiredLevel: number;\n  isUnlocked: boolean;\n  isComingSoon?: boolean; // 업데이트 예정 던전인지\n}\n\ninterface Monster {\n  id: string;\n  name: string;\n  level: number;\n  hp: number;\n  maxHp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  exp: number;\n  gold: number;\n  dropItems: Item[];\n  isBoss?: boolean;\n}\n\ninterface Character {\n  id: string;\n  name: string;\n  level: number;\n  exp: number;\n  maxExp: number;\n  hp: number;\n  maxHp: number;\n  mp: number;\n  maxMp: number;\n  attack: number;\n  defense: number;\n  speed: number;\n  gold: number;\n  class: string;\n  skills: Skill[];\n  equipment: Equipment;\n  stats: CharacterStats;\n  prestige: number;\n  rebirth: number;\n  buffs: {\n    attack: { amount: number; duration: number };\n    defense: { amount: number; duration: number };\n    speed: { amount: number; duration: number };\n  };\n}\n\ninterface CharacterStats {\n  strength: number;\n  agility: number;\n  intelligence: number;\n  vitality: number;\n  luck: number;\n  availablePoints: number;\n}\n\ninterface Skill {\n  id: string;\n  name: string;\n  level: number;\n  maxLevel: number;\n  baseDamage: number;\n  damageMultiplier: number; // 레벨당 증가율\n  statMultiplier: { attack?: number; defense?: number; hp?: number; mp?: number }; // 스탯 기반 데미지 배율\n  manaCost: number;\n  cooldown: number;\n  currentCooldown: number;\n  type: 'active' | 'passive';\n  category: 'combat' | 'magic' | 'support' | 'passive'; // 스킬 분류\n  description: string;\n  requiredLevel?: number;\n  isUnlocked?: boolean;\n  isLearned?: boolean; // 배운 스킬인지 (0레벨에서 1레벨로 업그레이드했는지)\n}\n\ninterface Equipment {\n  weapon?: Item;\n  armor?: Item;\n  helmet?: Item;\n  boots?: Item;\n  ring?: Item;\n  amulet?: Item;\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  type: 'weapon' | 'armor' | 'helmet' | 'boots' | 'ring' | 'amulet' | 'consumable';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary' | 'mythic';\n  level: number;\n  stats: {\n    attack?: number;\n    defense?: number;\n    hp?: number;\n    mp?: number;\n    speed?: number;\n    critRate?: number;\n    critDamage?: number;\n  };\n  price: number;\n  enhancement: number;\n  // 물약용 속성들\n  consumableEffect?: {\n    healHp?: number;\n    healMp?: number;\n    buffDuration?: number; // 버프 지속시간 (밀리초)\n    buffType?: 'attack' | 'defense' | 'speed'; // 버프 타입\n    buffAmount?: number; // 버프 수치\n  };\n  quantity?: number; // 소비 아이템 수량\n}\n\n\n\ninterface Guild {\n  id: string;\n  name: string;\n  level: number;\n  members: number;\n  maxMembers: number;\n  benefits: {\n    expBonus: number;\n    goldBonus: number;\n    dropBonus: number;\n  };\n}\n\ninterface AppProps {\n  onAction: (eventType: string, data: any) => void;\n  isSimulating: boolean;\n  currentAction: string | null;\n  userStats: any;\n  setUserStats: (stats: any) => void;\n  currentUser: any;\n}\n\nexport const AdvancedIdleRPG: React.FC<AppProps> = ({\n  onAction,\n  isSimulating,\n  currentAction,\n  userStats,\n  setUserStats,\n  currentUser\n}) => {\n  const { colors } = useTheme();\n  const { t } = useLanguage();\n\n  // 스킬 데미지 계산 함수\n  const calculateSkillDamage = (skill: Skill, character: Character): number => {\n    if (skill.level === 0 || !skill.isLearned) return 0;\n    \n    let damage = skill.baseDamage;\n    \n    // 레벨에 따른 데미지 증가\n    damage += skill.baseDamage * skill.damageMultiplier * (skill.level - 1);\n    \n    // 스탯에 따른 데미지 증가\n    if (skill.statMultiplier.attack) {\n      damage += character.attack * skill.statMultiplier.attack * skill.level;\n    }\n    if (skill.statMultiplier.defense) {\n      damage += character.defense * skill.statMultiplier.defense * skill.level;\n    }\n    if (skill.statMultiplier.hp) {\n      damage += character.maxHp * skill.statMultiplier.hp * skill.level;\n    }\n    if (skill.statMultiplier.mp) {\n      damage += character.maxMp * skill.statMultiplier.mp * skill.level;\n    }\n    \n    return Math.floor(damage);\n  };\n\n  // CSS 애니메이션 추가\n  React.useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes progress {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n      @keyframes pulse {\n        0%, 100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.7;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const [character, setCharacter] = useState<Character>({\n    id: '1',\n    name: '용사',\n    level: 1,\n    exp: 0,\n    maxExp: 100,\n    hp: 100,\n    maxHp: 100,\n    mp: 50,\n    maxMp: 50,\n    attack: 20,\n    defense: 10,\n    speed: 15,\n    gold: 100,\n    class: '전사',\n    skills: [],\n    equipment: {},\n    stats: {\n      strength: 10,\n      agility: 8,\n      intelligence: 5,\n      vitality: 12,\n      luck: 7,\n      availablePoints: 0\n    },\n    prestige: 0,\n    rebirth: 0,\n    buffs: {\n      attack: { amount: 0, duration: 0 },\n      defense: { amount: 0, duration: 0 },\n      speed: { amount: 0, duration: 0 }\n    }\n  });\n\n  const [currentTab, setCurrentTab] = useState<'lobby' | 'dungeon' | 'character' | 'inventory' | 'skills' | 'shop'>('lobby');\n  const [gameMode, setGameMode] = useState<'lobby' | 'dungeon' | 'combat'>('lobby');\n  const [isAutoFighting, setIsAutoFighting] = useState(false);\n  const [currentMonster, setCurrentMonster] = useState<Monster | null>(null);\n  const [combatLog, setCombatLog] = useState<string[]>([]);\n  const [selectedDungeon, setSelectedDungeon] = useState<Dungeon | null>(null);\n  const [inventory, setInventory] = useState<Item[]>([]);\n  const [availableDungeons, setAvailableDungeons] = useState<Dungeon[]>([]);\n  const [currentDungeon, setCurrentDungeon] = useState<Dungeon | null>(null);\n  const [inDungeon, setInDungeon] = useState(false);\n  const [guild, setGuild] = useState<Guild | null>(null);\n  const [shop, setShop] = useState<Item[]>([]);\n  const [achievements, setAchievements] = useState<string[]>([]);\n  const [monstersDefeated, setMonstersDefeated] = useState(0);\n  const [totalGoldEarned, setTotalGoldEarned] = useState(0);\n  const [showDungeonChoice, setShowDungeonChoice] = useState(false);\n\n  const logRef = useRef<HTMLDivElement>(null);\n\n  // 게임 초기화\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  // 캐릭터 상태가 변경될 때마다 userStats 업데이트\n  useEffect(() => {\n    setUserStats({\n      level: character.level,\n      gold: character.gold,\n      attack: character.attack,\n      defense: character.defense,\n      hp: character.hp,\n      maxHp: character.maxHp,\n      exp: character.exp,\n      maxExp: character.maxExp,\n      monsters_defeated: monstersDefeated,\n      character_class: character.class,\n      total_gold_earned: totalGoldEarned,\n      inventory_items: inventory.map(item => ({\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        rarity: item.rarity,\n        quantity: item.quantity || 1,\n        stats: item.stats\n      })),\n      skills: character.skills.map(skill => ({\n        id: skill.id,\n        name: skill.name,\n        level: skill.level,\n        type: skill.type\n      })),\n      current_buffs: Object.entries(character.buffs)\n        .filter(([_, buff]) => buff.duration > 0)\n        .map(([type, buff]) => ({\n          type,\n          amount: buff.amount,\n          duration: Math.ceil(buff.duration / 1000)\n        }))\n    });\n  }, [character, inventory, monstersDefeated, totalGoldEarned, setUserStats]);\n\n  const initializeGame = () => {\n    // 언어별 텍스트 정의\n    const translations = {\n      ko: {\n        character: {\n          name: '용사',\n          class: '전사'\n        },\n        skills: {\n          slash: { name: '강력한 베기', description: '강력한 일격을 가합니다.' },\n          heal: { name: '치유', description: 'HP를 회복합니다.' },\n          critical: { name: '치명타 숙련', description: '치명타 확률을 증가시킵니다.' }\n        },\n        dungeons: {\n          forest: { name: '어둠의 숲', description: '초보자를 위한 던전입니다.' },\n          cave: { name: '고블린 동굴', description: '고블린들이 서식하는 위험한 동굴입니다.' },\n          tower: { name: '마법사의 탑', description: '강력한 마법 몬스터들이 있는 탑입니다.' }\n        },\n        items: {\n          sword1: '강철 검',\n          armor1: '가죽 갑옷',\n          helmet1: '철제 투구',\n          health_potion: '체력 물약',\n          mana_potion: '마나 물약',\n          greater_health_potion: '고급 체력 물약',\n          strength_potion: '힘의 물약',\n          defense_potion: '방어의 물약'\n        },\n        monsters: {\n          slime: '슬라임',\n          goblin: '고블린',\n          orc: '오크',\n          troll: '트롤',\n          dragon: '드래곤'\n        },\n        combat: {\n          appeared: '이 나타났다!',\n          attack: '의 공격!',\n          damage: '데미지!',\n          critical: '치명타!',\n          levelUp: '🎉 레벨업! Lv.',\n          defeated: '를 물리쳤다! EXP +',\n          gold: ', 골드 +',\n          itemObtained: '✨ 을 획득했습니다!',\n          dungeonCleared: '🎉  던전을 클리어했습니다!',\n          nextFloor: '층으로 자동 진행합니다!',\n          dungeonExited: '던전에서 자동으로 나왔습니다. 체력과 마나가 완전히 회복되었습니다!',\n          hpMpRecovered: '체력과 마나가 완전히 회복되었습니다!',\n          defeat: '전투에서 패배했습니다...'\n        }\n      },\n      en: {\n        character: {\n          name: 'Hero',\n          class: 'Warrior'\n        },\n        skills: {\n          slash: { name: 'Power Slash', description: 'Delivers a powerful strike.' },\n          heal: { name: 'Heal', description: 'Restores HP.' },\n          critical: { name: 'Critical Mastery', description: 'Increases critical hit chance.' }\n        },\n        dungeons: {\n          forest: { name: 'Dark Forest', description: 'A dungeon for beginners.' },\n          cave: { name: 'Goblin Cave', description: 'A dangerous cave inhabited by goblins.' },\n          tower: { name: 'Mage Tower', description: 'A tower with powerful magic monsters.' }\n        },\n        items: {\n          sword1: 'Steel Sword',\n          armor1: 'Leather Armor',\n          helmet1: 'Iron Helmet',\n          health_potion: 'Health Potion',\n          mana_potion: 'Mana Potion',\n          greater_health_potion: 'Greater Health Potion',\n          strength_potion: 'Strength Potion',\n          defense_potion: 'Defense Potion'\n        },\n        monsters: {\n          slime: 'Slime',\n          goblin: 'Goblin',\n          orc: 'Orc',\n          troll: 'Troll',\n          dragon: 'Dragon'\n        },\n        combat: {\n          appeared: ' appeared!',\n          attack: \"'s attack!\",\n          damage: ' damage!',\n          critical: ' (Critical!)',\n          levelUp: '🎉 Level up! Lv.',\n          defeated: ' defeated! EXP +',\n          gold: ', Gold +',\n          itemObtained: '✨ obtained!',\n          dungeonCleared: '🎉  dungeon cleared!',\n          nextFloor: 'Proceeding to floor  automatically!',\n          dungeonExited: 'Automatically exited dungeon. HP and MP fully restored!',\n          hpMpRecovered: 'HP and MP fully restored!',\n          defeat: 'Defeated in battle...'\n        }\n      },\n      zh: {\n        character: {\n          name: '勇者',\n          class: '战士'\n        },\n        skills: {\n          slash: { name: '强力斩击', description: '发动强力一击。' },\n          heal: { name: '治疗', description: '恢复生命值。' },\n          critical: { name: '暴击精通', description: '增加暴击几率。' }\n        },\n        dungeons: {\n          forest: { name: '黑暗森林', description: '适合新手的地下城。' },\n          cave: { name: '哥布林洞穴', description: '哥布林栖息的危险洞穴。' },\n          tower: { name: '法师塔', description: '有强力魔法怪物的塔。' }\n        },\n        items: {\n          sword1: '钢铁剑',\n          armor1: '皮甲',\n          helmet1: '铁盔',\n          health_potion: '生命药水',\n          mana_potion: '魔法药水',\n          greater_health_potion: '高级生命药水',\n          strength_potion: '力量药水',\n          defense_potion: '防御药水'\n        },\n        monsters: {\n          slime: '史莱姆',\n          goblin: '哥布林',\n          orc: '兽人',\n          troll: '巨魔',\n          dragon: '龙'\n        },\n        combat: {\n          appeared: '出现了！',\n          attack: '的攻击！',\n          damage: '伤害！',\n          critical: '暴击！',\n          levelUp: '🎉 升级！Lv.',\n          defeated: '被击败！经验 +',\n          gold: '，金币 +',\n          itemObtained: '✨ 获得了！',\n          dungeonCleared: '🎉 地下城通关！',\n          nextFloor: '自动前往第 层！',\n          dungeonExited: '自动离开地下城。生命值和魔法值完全恢复！',\n          hpMpRecovered: '生命值和魔法值完全恢复！',\n          defeat: '战斗失败...'\n        }\n      }\n    };\n\n    // 현재 언어 가져오기 (기본값: 한국어)\n    const currentLang = localStorage.getItem('language') || 'ko';\n    const texts = translations[currentLang as keyof typeof translations] || translations.ko;\n    // 모든 스킬 정의 함수 (공통 사용)\n    const getAllSkills = (currentLevel: number, existingSkills?: Skill[]): Skill[] => {\n      const allSkills = [\n        // 전투 스킬 (레벨 1)\n        {\n          id: 'slash',\n          name: '강력한 베기',\n          level: existingSkills?.find(s => s.id === 'slash')?.level || 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.5,\n          statMultiplier: { attack: 2.0 },\n          manaCost: 10,\n          cooldown: 3000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '강력한 일격을 가합니다. (기본 데미지 + 공격력 x 2.0)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        {\n          id: 'heal',\n          name: '치유',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 30,\n          damageMultiplier: 0.3,\n          statMultiplier: { mp: 1.5 },\n          manaCost: 15,\n          cooldown: 5000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'support' as const,\n          description: 'HP를 회복합니다. (기본 회복량 + 마나 x 1.5)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        {\n          id: 'critical',\n          name: '치명타 숙련',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '치명타 확률을 증가시킵니다. (레벨당 +2%)',\n          requiredLevel: 1,\n          isUnlocked: currentLevel >= 1,\n          isLearned: false\n        },\n        // 레벨 5 스킬\n        {\n          id: 'double_strike',\n          name: '이중 공격',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 25,\n          damageMultiplier: 0.4,\n          statMultiplier: { attack: 1.5 },\n          manaCost: 20,\n          cooldown: 4000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '연속으로 두 번 공격합니다. (기본 데미지 x 2 + 공격력 x 1.5)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        {\n          id: 'mana_shield',\n          name: '마나 방패',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 20,\n          damageMultiplier: 0.2,\n          statMultiplier: { mp: 1.0, defense: 0.5 },\n          manaCost: 25,\n          cooldown: 8000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '마나로 피해를 흡수합니다. (방어력 + 마나 x 1.0)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        {\n          id: 'defense_mastery',\n          name: '방어 숙련',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '방어력을 영구히 증가시킵니다. (레벨당 +3 방어력)',\n          requiredLevel: 5,\n          isUnlocked: currentLevel >= 5,\n          isLearned: false\n        },\n        // 레벨 10 스킬\n        {\n          id: 'whirlwind',\n          name: '회오리 공격',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 40,\n          damageMultiplier: 0.6,\n          statMultiplier: { attack: 1.8 },\n          manaCost: 35,\n          cooldown: 6000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'combat' as const,\n          description: '주변의 모든 적을 공격합니다. (기본 데미지 + 공격력 x 1.8)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        {\n          id: 'regeneration',\n          name: '재생',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 50,\n          damageMultiplier: 0.4,\n          statMultiplier: { hp: 0.1, mp: 2.0 },\n          manaCost: 40,\n          cooldown: 12000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'support' as const,\n          description: '지속적으로 HP를 회복합니다. (기본 회복량 + 최대체력 x 0.1 + 마나 x 2.0)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        {\n          id: 'mp_efficiency',\n          name: '마나 효율',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '모든 스킬의 마나 소모량을 감소시킵니다. (레벨당 -5%)',\n          requiredLevel: 10,\n          isUnlocked: currentLevel >= 10,\n          isLearned: false\n        },\n        // 레벨 15 스킬\n        {\n          id: 'meteor',\n          name: '메테오',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 80,\n          damageMultiplier: 1.0,\n          statMultiplier: { mp: 3.0, attack: 1.0 },\n          manaCost: 60,\n          cooldown: 10000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '강력한 마법 공격을 가합니다. (기본 데미지 + 마나 x 3.0 + 공격력 x 1.0)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        },\n        {\n          id: 'time_stop',\n          name: '시간 정지',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: { mp: 1.0 },\n          manaCost: 80,\n          cooldown: 15000,\n          currentCooldown: 0,\n          type: 'active' as const,\n          category: 'magic' as const,\n          description: '모든 적의 움직임을 잠시 멈춥니다. (지속시간: 마나 x 0.1초)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        },\n        {\n          id: 'exp_boost',\n          name: '경험치 증폭',\n          level: 0,\n          maxLevel: 10,\n          baseDamage: 0,\n          damageMultiplier: 0,\n          statMultiplier: {},\n          manaCost: 0,\n          cooldown: 0,\n          currentCooldown: 0,\n          type: 'passive' as const,\n          category: 'passive' as const,\n          description: '획득하는 경험치를 증가시킵니다. (레벨당 +10%)',\n          requiredLevel: 15,\n          isUnlocked: currentLevel >= 15,\n          isLearned: false\n        }\n      ];\n\n      // 해금된 스킬만 반환\n      return allSkills.filter(skill => skill.isUnlocked);\n    };\n\n    const initialSkills = getAllSkills(1);\n\n    // 던전 초기화\n    const initialDungeons: Dungeon[] = [\n      {\n        id: 'forest',\n        name: '어둠의 숲',\n        level: 1,\n        description: '초보자를 위한 던전입니다.',\n        floors: 10,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [10, 25],\n          expRange: [15, 30],\n          itemDropChance: 0.1\n        },\n        requiredLevel: 1,\n        isUnlocked: true\n      },\n      {\n        id: 'cave',\n        name: '고블린 동굴',\n        level: 5,\n        description: '고블린들이 서식하는 위험한 동굴입니다.',\n        floors: 15,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [25, 50],\n          expRange: [40, 75],\n          itemDropChance: 0.15\n        },\n        requiredLevel: 5,\n        isUnlocked: false\n      },\n      {\n        id: 'tower',\n        name: '마법사의 탑',\n        level: 10,\n        description: '강력한 마법 몬스터들이 있는 탑입니다.',\n        floors: 20,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [50, 100],\n          expRange: [80, 150],\n          itemDropChance: 0.2\n        },\n        requiredLevel: 10,\n        isUnlocked: false\n      },\n      {\n        id: 'abyss',\n        name: '심연의 던전',\n        level: 20,\n        description: '업데이트 예정 - 최강의 도전자들을 위한 던전입니다.',\n        floors: 50,\n        currentFloor: 1,\n        clearedFloors: new Set<number>(),\n        monsters: [],\n        rewards: {\n          goldRange: [100, 200],\n          expRange: [200, 300],\n          itemDropChance: 0.3\n        },\n        requiredLevel: 20,\n        isUnlocked: false,\n        isComingSoon: true // 업데이트 예정 플래그\n      }\n    ];\n\n    // 상점 아이템 초기화 (기본 아이템들)\n    const getShopItems = () => {\n      const baseItems: Item[] = [\n        {\n          id: 'sword1',\n          name: '강철 검',\n          type: 'weapon',\n          rarity: 'common',\n          level: 1,\n          stats: { attack: 15 },\n          price: 200,\n          enhancement: 0\n        },\n        {\n          id: 'armor1',\n          name: '가죽 갑옷',\n          type: 'armor',\n          rarity: 'common',\n          level: 1,\n          stats: { defense: 10, hp: 20 },\n          price: 150,\n          enhancement: 0\n        },\n        {\n          id: 'helmet1',\n          name: '철제 투구',\n          type: 'helmet',\n          rarity: 'common',\n          level: 1,\n          stats: { defense: 5, hp: 15 },\n          price: 100,\n          enhancement: 0\n        },\n        // 기본 물약들\n        {\n          id: 'health_potion',\n          name: '체력 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 50,\n          enhancement: 0,\n          consumableEffect: {\n            healHp: 50\n          },\n          quantity: 1\n        },\n        {\n          id: 'mana_potion',\n          name: '마나 물약',\n          type: 'consumable',\n          rarity: 'common',\n          level: 1,\n          stats: {},\n          price: 40,\n          enhancement: 0,\n          consumableEffect: {\n            healMp: 30\n          },\n          quantity: 1\n        }\n      ];\n\n      // 고블린 동굴이 해금되면 고급 아이템 추가\n      const goblinCaveUnlocked = availableDungeons.find(d => d.id === 'goblin_cave')?.isUnlocked;\n      if (goblinCaveUnlocked) {\n        baseItems.push(\n          // 고급 장비\n          {\n            id: 'steel_sword',\n            name: '강화 강철 검',\n            type: 'weapon',\n            rarity: 'rare',\n            level: 3,\n            stats: { attack: 25 },\n            price: 500,\n            enhancement: 0\n          },\n          {\n            id: 'plate_armor',\n            name: '판금 갑옷',\n            type: 'armor',\n            rarity: 'rare',\n            level: 3,\n            stats: { defense: 20, hp: 40 },\n            price: 400,\n            enhancement: 0\n          },\n          {\n            id: 'steel_helmet',\n            name: '강철 투구',\n            type: 'helmet',\n            rarity: 'rare',\n            level: 3,\n            stats: { defense: 12, hp: 25 },\n            price: 300,\n            enhancement: 0\n          },\n          // 고급 물약들\n          {\n            id: 'greater_health_potion',\n            name: '고급 체력 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 120,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 120\n            },\n            quantity: 1\n          },\n          {\n            id: 'greater_mana_potion',\n            name: '고급 마나 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 100,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 80\n            },\n            quantity: 1\n          },\n          {\n            id: 'strength_potion',\n            name: '힘의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'attack',\n              buffAmount: 10,\n              buffDuration: 30000\n            },\n            quantity: 1\n          },\n          {\n            id: 'defense_potion',\n            name: '방어의 물약',\n            type: 'consumable',\n            rarity: 'rare',\n            level: 2,\n            stats: {},\n            price: 150,\n            enhancement: 0,\n            consumableEffect: {\n              buffType: 'defense',\n              buffAmount: 8,\n              buffDuration: 30000\n            },\n            quantity: 1\n          }\n        );\n      }\n\n\n      return baseItems;\n    };\n\n    const shopItems = getShopItems();\n\n    setCharacter(prev => ({ \n      ...prev, \n      name: texts.character.name,\n      class: texts.character.class,\n      skills: initialSkills \n    }));\n    setAvailableDungeons(initialDungeons);\n    setShop(shopItems);\n    // Store texts globally for other functions to use\n    (window as any).gameTexts = texts;\n    \n    // 던전에 있지 않을 때만 일반 몬스터 생성\n    if (!inDungeon) {\n      spawnMonster();\n    }\n  };\n\n  // 던전 해금 상태에 따른 상점 업데이트\n  useEffect(() => {\n    const updateShop = () => {\n      const getShopItems = () => {\n        const baseItems: Item[] = [\n          {\n            id: 'sword1',\n            name: '강철 검',\n            type: 'weapon',\n            rarity: 'common',\n            level: 1,\n            stats: { attack: 15 },\n            price: 200,\n            enhancement: 0\n          },\n          {\n            id: 'armor1',\n            name: '가죽 갑옷',\n            type: 'armor',\n            rarity: 'common',\n            level: 1,\n            stats: { defense: 10, hp: 20 },\n            price: 150,\n            enhancement: 0\n          },\n          {\n            id: 'helmet1',\n            name: '철제 투구',\n            type: 'helmet',\n            rarity: 'common',\n            level: 1,\n            stats: { defense: 5, hp: 15 },\n            price: 100,\n            enhancement: 0\n          },\n          // 기본 물약들\n          {\n            id: 'health_potion',\n            name: '체력 물약',\n            type: 'consumable',\n            rarity: 'common',\n            level: 1,\n            stats: {},\n            price: 50,\n            enhancement: 0,\n            consumableEffect: {\n              healHp: 50\n            },\n            quantity: 1\n          },\n          {\n            id: 'mana_potion',\n            name: '마나 물약',\n            type: 'consumable',\n            rarity: 'common',\n            level: 1,\n            stats: {},\n            price: 40,\n            enhancement: 0,\n            consumableEffect: {\n              healMp: 30\n            },\n            quantity: 1\n          }\n        ];\n\n        // 고블린 동굴이 해금되면 고급 아이템 추가\n        const goblinCaveUnlocked = availableDungeons.find(d => d.id === 'goblin_cave')?.isUnlocked;\n        if (goblinCaveUnlocked) {\n          // 중복 방지: 이미 있는 아이템은 추가하지 않음\n          const existingIds = baseItems.map(item => item.id);\n          const newItems = [\n            {\n              id: 'steel_sword',\n              name: '강화 강철 검',\n              type: 'weapon' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { attack: 25 },\n              price: 500,\n              enhancement: 0\n            },\n            {\n              id: 'plate_armor',\n              name: '판금 갑옷',\n              type: 'armor' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { defense: 20, hp: 40 },\n              price: 400,\n              enhancement: 0\n            },\n            {\n              id: 'steel_helmet',\n              name: '강철 투구',\n              type: 'helmet' as const,\n              rarity: 'rare' as const,\n              level: 3,\n              stats: { defense: 12, hp: 25 },\n              price: 300,\n              enhancement: 0\n            },\n            {\n              id: 'greater_health_potion',\n              name: '고급 체력 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 120,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 120\n              },\n              quantity: 1\n            },\n            {\n              id: 'greater_mana_potion',\n              name: '고급 마나 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 100,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 80\n              },\n              quantity: 1\n            },\n            {\n              id: 'strength_potion',\n              name: '힘의 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'attack' as const,\n                buffAmount: 10,\n                buffDuration: 30000\n              },\n              quantity: 1\n            },\n            {\n              id: 'defense_potion',\n              name: '방어의 물약',\n              type: 'consumable' as const,\n              rarity: 'rare' as const,\n              level: 2,\n              stats: {},\n              price: 150,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'defense' as const,\n                buffAmount: 8,\n                buffDuration: 30000\n              },\n              quantity: 1\n            }\n          ].filter(item => !existingIds.includes(item.id));\n          \n          baseItems.push(...newItems);\n        }\n\n        // 마법사의 탑이 해금되면 최고급 아이템 추가\n        const wizardTowerUnlocked = availableDungeons.find(d => d.id === 'wizard_tower')?.isUnlocked;\n        if (wizardTowerUnlocked) {\n          const existingIds = baseItems.map(item => item.id);\n          const wizardItems = [\n            {\n              id: 'enchanted_sword',\n              name: '마법 부여 검',\n              type: 'weapon' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { attack: 40, mp: 20 },\n              price: 1200,\n              enhancement: 0\n            },\n            {\n              id: 'dragon_armor',\n              name: '드래곤 갑옷',\n              type: 'armor' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { defense: 35, hp: 80 },\n              price: 1000,\n              enhancement: 0\n            },\n            {\n              id: 'mystic_helmet',\n              name: '신비의 투구',\n              type: 'helmet' as const,\n              rarity: 'epic' as const,\n              level: 5,\n              stats: { defense: 20, hp: 40, mp: 30 },\n              price: 800,\n              enhancement: 0\n            },\n            {\n              id: 'supreme_health_potion',\n              name: '최고급 체력 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 300,\n              enhancement: 0,\n              consumableEffect: {\n                healHp: 250\n              },\n              quantity: 1\n            },\n            {\n              id: 'supreme_mana_potion',\n              name: '최고급 마나 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 250,\n              enhancement: 0,\n              consumableEffect: {\n                healMp: 200\n              },\n              quantity: 1\n            },\n            {\n              id: 'berserker_potion',\n              name: '광전사의 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'attack' as const,\n                buffAmount: 25,\n                buffDuration: 60000\n              },\n              quantity: 1\n            },\n            {\n              id: 'guardian_potion',\n              name: '수호자의 물약',\n              type: 'consumable' as const,\n              rarity: 'epic' as const,\n              level: 3,\n              stats: {},\n              price: 400,\n              enhancement: 0,\n              consumableEffect: {\n                buffType: 'defense' as const,\n                buffAmount: 20,\n                buffDuration: 60000\n              },\n              quantity: 1\n            }\n          ].filter(item => !existingIds.includes(item.id));\n          \n          baseItems.push(...wizardItems);\n        }\n\n        return baseItems;\n      };\n\n      setShop(getShopItems());\n    };\n\n    updateShop();\n  }, [availableDungeons]);\n\n  // 레벨업 시 스킬 업데이트\n  useEffect(() => {\n    const updateSkills = () => {\n      setCharacter(prev => {\n        // 기존 스킬들의 해금 상태만 업데이트\n        const updatedSkills = prev.skills.map(skill => ({\n          ...skill,\n          isUnlocked: prev.level >= (skill.requiredLevel || 1)\n        }));\n        return { ...prev, skills: updatedSkills };\n      });\n    };\n\n    updateSkills();\n  }, [character.level]);\n\n  // 스킬 사용 함수 (수정된 데미지 계산 포함)\n  const executeSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    \n    if (character.mp < skill.manaCost) {\n      addToCombatLog('마나가 부족합니다!');\n      return;\n    }\n    \n    if (skill.currentCooldown > 0) {\n      addToCombatLog('스킬이 재사용 대기 중입니다!');\n      return;\n    }\n\n    const damage = calculateSkillDamage(skill, character);\n    \n    // 스킬 사용 로직\n    if (skill.id === 'heal' || skill.id === 'regeneration') {\n      // 힐링 스킬\n      const healAmount = damage;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${skill.name} 사용! ${healAmount} 체력 회복!`);\n    } else if (currentMonster) {\n      // 공격 스킬\n      const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n      setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n      setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n      addToCombatLog(`${skill.name} 사용! ${damage} 데미지!`);\n\n      if (newMonsterHp === 0) {\n        setTimeout(defeatMonster, 500);\n      }\n    }\n\n    // 쿨다운 설정\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? { ...s, currentCooldown: skill.cooldown } : s\n      )\n    }));\n  };\n\n  // 스킬 배우기 (0레벨에서 1레벨로 업그레이드) 함수\n  const learnSkill = (skill: Skill) => {\n    if (skill.level > 0) {\n      addToCombatLog('이미 배운 스킬입니다!');\n      return;\n    }\n\n    const cost = 100; // 스킬 배우기 비용\n    if (character.gold < cost) {\n      addToCombatLog('골드가 부족합니다!');\n      return;\n    }\n\n    setCharacter(prev => ({\n      ...prev,\n      gold: prev.gold - cost,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? { ...s, level: 1, isLearned: true } : s\n      )\n    }));\n    addToCombatLog(`${skill.name}을(를) 배웠습니다!`);\n  };\n\n  // 스킬 렌더링 함수 (분류별)\n  const renderSkillsByCategory = (category: string) => {\n    const filteredSkills = character.skills.filter(skill => \n      skill.category === category && skill.isUnlocked\n    );\n\n    return (\n      <div style={{ marginBottom: '20px' }}>\n        <h3 style={{ \n          color: colors.text, \n          marginBottom: '10px',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        }}>\n          {category === 'combat' ? '전투 스킬' : \n           category === 'magic' ? '마법 스킬' :\n           category === 'support' ? '지원 스킬' : '패시브 스킬'}\n        </h3>\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', \n          gap: '10px' \n        }}>\n          {filteredSkills.map(skill => {\n            const cost = skill.level === 0 ? 100 : skill.level * 100;\n            const calculatedDamage = calculateSkillDamage(skill, character);\n            const canUpgrade = character.gold >= cost && skill.level < skill.maxLevel;\n            \n            return (\n              <div key={skill.id} style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                border: `1px solid ${skill.isLearned ? '#10b981' : '#6b7280'}`,\n                borderRadius: '8px',\n                padding: '15px'\n              }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                  <div style={{ flex: 1 }}>\n                    <h4 style={{ \n                      color: skill.isLearned ? '#10b981' : '#9ca3af', \n                      margin: '0 0 5px 0', \n                      fontSize: '16px',\n                      fontWeight: 'bold'\n                    }}>\n                      {skill.name} Lv.{skill.level}\n                    </h4>\n                    <p style={{ \n                      color: colors.text, \n                      margin: '0 0 10px 0', \n                      fontSize: '12px',\n                      lineHeight: '1.4'\n                    }}>\n                      {skill.description}\n                    </p>\n                    {skill.level > 0 && (\n                      <p style={{ \n                        color: '#fbbf24', \n                        margin: '0 0 10px 0', \n                        fontSize: '12px',\n                        fontWeight: 'bold'\n                      }}>\n                        {skill.type === 'active' ? `데미지: ${calculatedDamage}` : '패시브 효과 활성'}\n                      </p>\n                    )}\n                    <div style={{ \n                      fontSize: '11px', \n                      color: '#9ca3af',\n                      marginBottom: '10px'\n                    }}>\n                      {skill.type === 'active' && (\n                        <>\n                          <div>마나 소모: {skill.manaCost}</div>\n                          <div>쿨다운: {skill.cooldown / 1000}초</div>\n                        </>\n                      )}\n                      <div>최대 레벨: {skill.maxLevel}</div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div style={{ display: 'flex', gap: '10px' }}>\n                  {skill.level === 0 ? (\n                    <button\n                      onClick={() => learnSkill(skill)}\n                      disabled={character.gold < 100}\n                      style={{\n                        background: character.gold >= 100 ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)' : '#6b7280',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '6px',\n                        padding: '8px 12px',\n                        fontSize: '12px',\n                        cursor: character.gold >= 100 ? 'pointer' : 'not-allowed',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      배우기 (100골드)\n                    </button>\n                  ) : (\n                    <button\n                        onClick={() => {\n                          if (character.gold >= cost) {\n                            setCharacter(prev => ({\n                              ...prev,\n                              gold: prev.gold - cost,\n                              skills: prev.skills.map(s => \n                                s.id === skill.id ? {...s, level: s.level + 1} : s\n                              )\n                            }));\n                            addToCombatLog(`${skill.name}을(를) 레벨업했다! (Lv.${skill.level + 1})`);\n                          }\n                        }}\n                        disabled={!canUpgrade}\n                        style={{\n                          background: canUpgrade ? 'linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)' : '#6b7280',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '6px',\n                          padding: '8px 12px',\n                          fontSize: '12px',\n                          cursor: canUpgrade ? 'pointer' : 'not-allowed'\n                        }}\n                      >\n                        업그레이드 ({cost}골드)\n                      </button>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  // 스킬 탭 내부의 서브 탭 상태\n  const [skillSubTab, setSkillSubTab] = React.useState<'combat' | 'support' | 'passive'>('combat');\n\n  // 스킬 탭 컨텐츠 렌더링 (탭 분리)\n  const renderSkillsTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>✨ 스킬 트리</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>스킬을 배우고 레벨업하여 더욱 강해지세요!</p>\n      </div>\n\n      {/* 스킬 카테고리 탭 */}\n      <div style={{\n        display: 'flex',\n        background: 'rgba(255, 255, 255, 0.1)',\n        borderRadius: '10px',\n        marginBottom: '20px',\n        overflow: 'hidden'\n      }}>\n        {[\n          { id: 'combat', label: '⚔️ 전투 스킬', color: '#dc2626' },\n          { id: 'support', label: '💚 지원 스킬', color: '#10b981' },\n          { id: 'passive', label: '🛡️ 패시브 스킬', color: '#f59e0b' }\n        ].map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setSkillSubTab(tab.id as any)}\n            style={{\n              flex: 1,\n              padding: '15px 20px',\n              background: skillSubTab === tab.id \n                ? `linear-gradient(135deg, ${tab.color} 0%, ${tab.color}AA 100%)`\n                : 'transparent',\n              color: skillSubTab === tab.id ? 'white' : '#9ca3af',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: skillSubTab === tab.id ? 'bold' : 'normal',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* 선택된 카테고리 스킬 렌더링 */}\n      {skillSubTab === 'combat' && renderSkillsByCategory('combat')}\n      {skillSubTab === 'combat' && renderSkillsByCategory('magic')} {/* 마법도 전투 스킬로 포함 */}\n      {skillSubTab === 'support' && renderSkillsByCategory('support')}\n      {skillSubTab === 'passive' && renderSkillsByCategory('passive')}\n    </div>\n  );\n\n  // 몬스터 생성\n  const spawnMonster = () => {\n    // 이미 몬스터가 있거나 던전에 있으면 새로 생성하지 않음\n    if (currentMonster || inDungeon) {\n      return;\n    }\n    \n    const gameTexts = (window as any).gameTexts || {\n      monsters: { slime: '슬라임', goblin: '고블린', orc: '오크', troll: '트롤', dragon: '드래곤' },\n      combat: { appeared: '이 나타났다!' }\n    };\n    const monsters = [\n      { name: gameTexts.monsters.slime, baseHp: 40, baseAttack: 8, baseDefense: 2, exp: 15, gold: 10 },\n      { name: gameTexts.monsters.goblin, baseHp: 60, baseAttack: 12, baseDefense: 4, exp: 25, gold: 18 },\n      { name: gameTexts.monsters.orc, baseHp: 100, baseAttack: 18, baseDefense: 8, exp: 40, gold: 30 },\n      { name: gameTexts.monsters.troll, baseHp: 150, baseAttack: 25, baseDefense: 12, exp: 60, gold: 45 },\n      { name: gameTexts.monsters.dragon, baseHp: 300, baseAttack: 40, baseDefense: 20, exp: 120, gold: 100 }\n    ];\n\n    const randomMonster = monsters[Math.floor(Math.random() * monsters.length)];\n    const levelMultiplier = 1 + (character.level - 1) * 0.3;\n    \n    const monster: Monster = {\n      id: `monster_${Date.now()}`,\n      name: randomMonster.name,\n      level: Math.max(1, character.level + Math.floor(Math.random() * 3 - 1)),\n      hp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(randomMonster.baseHp * levelMultiplier),\n      attack: Math.floor(randomMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(randomMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor(randomMonster.exp * levelMultiplier),\n      gold: Math.floor(randomMonster.gold * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: Math.random() < 0.1 // 10% 보스 확률\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 3;\n      monster.maxHp *= 3;\n      monster.attack *= 2;\n      monster.defense *= 2;\n      monster.exp *= 5;\n      monster.gold *= 3;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}${gameTexts.combat.appeared}`);\n  };\n\n  // 드롭 아이템 생성\n  const generateDropItems = (): Item[] => {\n    const dropChance = Math.random();\n    if (dropChance < 0.1) { // 10% 확률로 아이템 드롭\n      const rarities: Array<'common' | 'rare' | 'epic' | 'legendary' | 'mythic'> = ['common', 'rare', 'epic', 'legendary', 'mythic'];\n      const rarity = rarities[Math.floor(Math.random() * rarities.length)];\n      const itemTypes = ['weapon', 'armor', 'helmet', 'boots', 'ring', 'amulet'] as const;\n      const itemType = itemTypes[Math.floor(Math.random() * itemTypes.length)];\n      \n      return [{\n        id: `drop_${Date.now()}`,\n        name: generateItemName(rarity, itemType),\n        type: itemType,\n        rarity,\n        level: character.level,\n        stats: generateItemStats(rarity),\n        price: calculateItemPrice(rarity, character.level),\n        enhancement: 0\n      }];\n    }\n    return [];\n  };\n\n  const generateItemName = (rarity: string, itemType: string): string => {\n    const prefixes = {\n      common: ['낡은', '일반적인', '기본'],\n      rare: ['날카로운', '튼튼한', '마법의'],\n      epic: ['전설적인', '고대의', '신성한'],\n      legendary: ['전설의', '영웅의', '불멸의'],\n      mythic: ['신화의', '창조의', '절대의']\n    };\n    \n    const itemNames = {\n      weapon: ['검', '도끼', '창', '활', '지팡이'],\n      armor: ['갑옷', '로브', '사슬갑옷', '가죽갑옷'],\n      helmet: ['투구', '모자', '관', '헬름'],\n      boots: ['신발', '부츠', '장화', '샌들'],\n      ring: ['반지', '링', '밴드'],\n      amulet: ['목걸이', '부적', '펜던트']\n    };\n    \n    const prefix = prefixes[rarity as keyof typeof prefixes][Math.floor(Math.random() * 3)];\n    const itemTypeNames = itemNames[itemType as keyof typeof itemNames] || ['아이템'];\n    const item = itemTypeNames[Math.floor(Math.random() * itemTypeNames.length)];\n    \n    return `${prefix} ${item}`;\n  };\n\n  const generateItemStats = (rarity: string) => {\n    const multipliers = {\n      common: 1,\n      rare: 1.5,\n      epic: 2.5,\n      legendary: 4,\n      mythic: 7\n    };\n    \n    const base = multipliers[rarity as keyof typeof multipliers];\n    return {\n      attack: Math.floor(Math.random() * 20 * base),\n      defense: Math.floor(Math.random() * 15 * base),\n      hp: Math.floor(Math.random() * 50 * base),\n      mp: Math.floor(Math.random() * 30 * base),\n      speed: Math.floor(Math.random() * 10 * base),\n      critRate: Math.floor(Math.random() * 10 * base),\n      critDamage: Math.floor(Math.random() * 20 * base)\n    };\n  };\n\n  const calculateItemPrice = (rarity: string, level: number): number => {\n    const basePrice = {\n      common: 50,\n      rare: 150,\n      epic: 500,\n      legendary: 2000,\n      mythic: 10000\n    };\n    \n    return Math.floor(basePrice[rarity as keyof typeof basePrice] * (1 + level * 0.2));\n  };\n\n  // 전투 시스템\n  const attack = () => {\n    if (!currentMonster) return;\n\n    const buffedAttack = character.attack + character.buffs.attack.amount;\n    const damage = calculateDamage(buffedAttack, currentMonster.defense);\n    const isCritical = Math.random() < 0.1 + (character.stats.luck * 0.01);\n    const finalDamage = isCritical ? Math.floor(damage * 1.5) : damage;\n\n    const newMonsterHp = Math.max(0, currentMonster.hp - finalDamage);\n    setCurrentMonster(prev => prev ? { ...prev, hp: newMonsterHp } : null);\n\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!', critical: '치명타!' }\n    };\n    addToCombatLog(`${character.name}${gameTexts.combat.attack} ${finalDamage}${isCritical ? ` (${gameTexts.combat.critical})` : ''} ${gameTexts.combat.damage}`);\n\n    onAction('combat_attack', {\n      user_id: currentUser.user_id,\n      damage: finalDamage,\n      is_critical: isCritical,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      character_attack: character.attack,\n      monster_hp_remaining: newMonsterHp,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    if (newMonsterHp <= 0) {\n      defeatMonster();\n    } else {\n      // 몬스터 반격\n      setTimeout(() => monsterAttack(), 1000);\n    }\n  };\n\n  const monsterAttack = () => {\n    if (!currentMonster || currentMonster.hp <= 0) return;\n\n    const buffedDefense = character.defense + character.buffs.defense.amount;\n    const damage = calculateDamage(currentMonster.attack, buffedDefense);\n    const newHp = Math.max(0, character.hp - damage);\n    \n    setCharacter(prev => ({ ...prev, hp: newHp }));\n    const gameTexts = (window as any).gameTexts || {\n      combat: { attack: '의 공격!', damage: '데미지!' }\n    };\n    addToCombatLog(`${currentMonster.name}${gameTexts.combat.attack} ${damage} ${gameTexts.combat.damage}`);\n\n    if (newHp <= 0) {\n      const gameTexts = (window as any).gameTexts || {\n        combat: { defeat: '전투에서 패배했습니다...' }\n      };\n      addToCombatLog(gameTexts.combat.defeat);\n      setIsAutoFighting(false);\n      \n      // 전투 실패 이벤트 로깅\n      onAction('combat_defeat', {\n        monster_name: currentMonster.name,\n        monster_level: currentMonster.level,\n        character_level: character.level,\n        dungeon_id: currentDungeon?.id || 'field',\n        dungeon_name: currentDungeon?.name || 'field',\n        damage_taken: currentMonster.attack,\n        character_defense: character.defense\n      });\n\n      // 던전에서 나가고 체력/마나 완전 회복\n      setTimeout(() => {\n        setCharacter(prev => ({\n          ...prev,\n          hp: prev.maxHp,\n          mp: prev.maxMp\n        }));\n        \n        if (inDungeon && currentDungeon) {\n          // 던전에서 나가기 (죽음으로 인한 자동 퇴장)\n          onAction('dungeon_exited', {\n            dungeon_id: currentDungeon.id,\n            dungeon_name: currentDungeon.name,\n            current_floor: currentDungeon.currentFloor,\n            total_floors: currentDungeon.floors,\n            character_level: character.level,\n            exit_reason: 'death',\n            time_spent: new Date().getTime()\n          });\n          setInDungeon(false);\n          setCurrentDungeon(null);\n          setCurrentTab('lobby');\n          setGameMode('lobby');\n          addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n        } else {\n          // 일반 필드에서는 새 몬스터 스폰\n          addToCombatLog('체력과 마나가 완전히 회복되었습니다!');\n          spawnMonster();\n        }\n      }, 2000);\n    }\n  };\n\n  const calculateDamage = (attack: number, defense: number): number => {\n    const baseDamage = Math.max(1, attack - Math.floor(defense * 0.5));\n    return Math.floor(baseDamage * (0.8 + Math.random() * 0.4));\n  };\n\n  const defeatMonster = () => {\n    if (!currentMonster) return;\n\n    const expGained = currentMonster.exp;\n    const goldGained = currentMonster.gold;\n    \n    setCharacter(prev => {\n      let newExp = prev.exp + expGained;\n      const newGold = prev.gold + goldGained;\n      let newLevel = prev.level;\n      let newMaxExp = prev.maxExp;\n      let newHp = prev.hp;\n      let newMp = prev.mp;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let availablePoints = prev.stats.availablePoints;\n\n      // 레벨업 체크\n      while (newExp >= newMaxExp) {\n        newLevel += 1;\n        newExp -= newMaxExp;\n        newMaxExp = Math.floor(newMaxExp * 1.5);\n        newMaxHp += 20;\n        newMaxMp += 10;\n        newHp = newMaxHp; // 레벨업 시 체력 완전 회복\n        newMp = newMaxMp; // 레벨업 시 마나 완전 회복\n        availablePoints += 5;\n        \n        addToCombatLog(`🎉 레벨업! Lv.${newLevel}이 되었습니다!`);\n        \n        onAction('level_up', {\n          user_id: currentUser.user_id,\n          new_level: newLevel,\n          character_class: prev.class,\n          stat_points_gained: 5\n        });\n\n        // 던전 해금 체크\n        setAvailableDungeons(prevDungeons => \n          prevDungeons.map(dungeon => ({\n            ...dungeon,\n            isUnlocked: dungeon.isUnlocked || newLevel >= dungeon.requiredLevel\n          }))\n        );\n      }\n\n      return {\n        ...prev,\n        exp: newExp,\n        gold: newGold,\n        level: newLevel,\n        maxExp: newMaxExp,\n        hp: newHp,\n        mp: newMp,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        stats: { ...prev.stats, availablePoints }\n      };\n    });\n\n    // 아이템 드롭 처리\n    if (currentMonster.dropItems.length > 0) {\n      setInventory(prev => [...prev, ...currentMonster.dropItems]);\n      addToCombatLog(`✨ ${currentMonster.dropItems[0].name}을 획득했습니다!`);\n    }\n\n    addToCombatLog(`${currentMonster.name}를 물리쳤다! EXP +${expGained}, 골드 +${goldGained}`);\n\n    // 추적 카운터 업데이트\n    setMonstersDefeated(prev => prev + 1);\n    setTotalGoldEarned(prev => prev + goldGained);\n\n    onAction('monster_defeated', {\n      user_id: currentUser.user_id,\n      monster_name: currentMonster.name,\n      monster_level: currentMonster.level,\n      character_level: character.level,\n      exp_gained: expGained,\n      gold_gained: goldGained,\n      items_dropped: currentMonster.dropItems.length,\n      character_attack: character.attack,\n      dungeon_name: currentDungeon?.name || null,\n      dungeon_floor: currentDungeon?.currentFloor || null\n    });\n\n    // 현재 몬스터 제거\n    setCurrentMonster(null);\n    \n    // 던전에 있는 경우 현재 층에서 새로운 몬스터 생성, 아니면 일반 몬스터 생성\n    if (inDungeon && currentDungeon) {\n      // 현재 층을 클리어한 것으로 마킹\n      const updatedDungeon = {\n        ...currentDungeon,\n        clearedFloors: new Set([...Array.from(currentDungeon.clearedFloors), currentDungeon.currentFloor])\n      };\n      setCurrentDungeon(updatedDungeon);\n      \n      // 던전 리스트에서도 업데이트\n      setAvailableDungeons(prev => prev.map(d => \n        d.id === updatedDungeon.id ? updatedDungeon : d\n      ));\n      \n      // 던전에서는 현재 층에서 계속 사냥할 수 있도록 새 몬스터 생성\n      addToCombatLog(`몬스터를 처치했습니다! 현재 ${currentDungeon.currentFloor}층이 클리어되었습니다. 계속 사냥할 수 있습니다.`);\n      setTimeout(() => {\n        spawnDungeonMonster(updatedDungeon, true);\n      }, 2000);\n    } else {\n      // 일반 방치형 전투에서 새 몬스터 생성 (던전 상태가 아닐 때만)\n      if (!inDungeon) {\n        setTimeout(() => {\n          spawnMonster();\n        }, 2000);\n      }\n    }\n  };\n\n  // 다음 층으로 진행\n  const proceedToNextFloor = () => {\n    if (!currentDungeon) return;\n    \n    const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor + 1 };\n    setCurrentDungeon(updatedDungeon);\n    setShowDungeonChoice(false);\n    setTimeout(() => {\n      spawnDungeonMonster(updatedDungeon, true); // 강제 스폰\n      addToCombatLog(`${updatedDungeon.currentFloor}층으로 진행합니다!`);\n    }, 500);\n  };\n\n  // 던전 나가기\n  const exitDungeonAfterVictory = () => {\n    if (!currentDungeon) return;\n    \n    // 던전 나가기 이벤트 로깅\n    onAction('dungeon_exited', {\n      dungeon_id: currentDungeon.id,\n      dungeon_name: currentDungeon.name,\n      current_floor: currentDungeon.currentFloor,\n      total_floors: currentDungeon.floors,\n      character_level: character.level,\n      exit_reason: 'victory_choice',\n      time_spent: new Date().getTime()\n    });\n    \n    // 던전 리셋 (현재 층을 1층으로 되돌림)\n    const resetDungeon = { ...currentDungeon, currentFloor: 1 };\n    setAvailableDungeons(prev => prev.map(d => \n      d.id === resetDungeon.id ? resetDungeon : d\n    ));\n    \n    setInDungeon(false);\n    setCurrentDungeon(null);\n    setCurrentTab('lobby');\n    setGameMode('lobby');\n    setShowDungeonChoice(false);\n    \n    // 체력과 마나 완전 회복\n    setCharacter(prev => ({ ...prev, hp: prev.maxHp, mp: prev.maxMp }));\n    addToCombatLog('던전에서 나왔습니다. 체력과 마나가 완전히 회복되었습니다!');\n    \n    // 새로운 일반 몬스터 생성\n    setTimeout(() => {\n      spawnMonster();\n    }, 1000);\n  };\n\n\n  // 자동 전투\n  useEffect(() => {\n    if (isAutoFighting && currentMonster && currentMonster.hp > 0 && character.hp > 0) {\n      const autoAttackTimer = setTimeout(() => {\n        attack();\n      }, 2000);\n\n      return () => clearTimeout(autoAttackTimer);\n    }\n  }, [isAutoFighting, currentMonster, character.hp]);\n\n  // 스킬 쿨다운 및 MP 회복\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + 1),\n        skills: prev.skills.map(skill => ({\n          ...skill,\n          currentCooldown: Math.max(0, skill.currentCooldown - 100)\n        })),\n        buffs: {\n          attack: {\n            amount: prev.buffs.attack.duration > 0 ? prev.buffs.attack.amount : 0,\n            duration: Math.max(0, prev.buffs.attack.duration - 100)\n          },\n          defense: {\n            amount: prev.buffs.defense.duration > 0 ? prev.buffs.defense.amount : 0,\n            duration: Math.max(0, prev.buffs.defense.duration - 100)\n          },\n          speed: {\n            amount: prev.buffs.speed.duration > 0 ? prev.buffs.speed.amount : 0,\n            duration: Math.max(0, prev.buffs.speed.duration - 100)\n          }\n        }\n      }));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToCombatLog = (message: string) => {\n    setCombatLog(prev => {\n      const newLog = [...prev, message];\n      if (newLog.length > 50) newLog.shift();\n      return newLog;\n    });\n    \n    // Auto-scroll to bottom immediately and with backup timing\n    if (logRef.current) {\n      logRef.current.scrollTop = logRef.current.scrollHeight;\n    }\n    \n    // Additional scroll with slight delay to ensure content is rendered\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 10);\n    \n    // Final backup scroll\n    setTimeout(() => {\n      if (logRef.current) {\n        logRef.current.scrollTop = logRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  // 스탯 분배\n  const allocateStatPoint = (stat: keyof Omit<CharacterStats, 'availablePoints'>) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [stat]: prev.stats[stat] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      },\n      // 스탯에 따른 능력치 업데이트\n      attack: stat === 'strength' ? prev.attack + 2 : prev.attack,\n      defense: stat === 'vitality' ? prev.defense + 1 : prev.defense,\n      maxHp: stat === 'vitality' ? prev.maxHp + 10 : prev.maxHp,\n      maxMp: stat === 'intelligence' ? prev.maxMp + 5 : prev.maxMp,\n      speed: stat === 'agility' ? prev.speed + 1 : prev.speed\n    }));\n  };\n\n  // 아이템 장착\n  const equipItem = (item: Item) => {\n    // 소비 아이템은 장착할 수 없음\n    if (item.type === 'consumable') {\n      return;\n    }\n    \n    // 기존에 장착된 아이템이 있는지 확인\n    const slot = item.type as keyof Equipment;\n    const currentEquippedItem = character.equipment[slot];\n    \n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = item;\n\n      // 기존 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (currentEquippedItem) {\n        if (currentEquippedItem.stats.attack) newAttack -= currentEquippedItem.stats.attack;\n        if (currentEquippedItem.stats.defense) newDefense -= currentEquippedItem.stats.defense;\n        if (currentEquippedItem.stats.hp) newMaxHp -= currentEquippedItem.stats.hp;\n        if (currentEquippedItem.stats.mp) newMaxMp -= currentEquippedItem.stats.mp;\n        if (currentEquippedItem.stats.speed) newSpeed -= currentEquippedItem.stats.speed;\n      }\n\n      // 새 아이템의 스탯 적용\n      if (item.stats.attack) newAttack += item.stats.attack;\n      if (item.stats.defense) newDefense += item.stats.defense;\n      if (item.stats.hp) newMaxHp += item.stats.hp;\n      if (item.stats.mp) newMaxMp += item.stats.mp;\n      if (item.stats.speed) newSpeed += item.stats.speed;\n\n      // 스탯이 최소값 이하로 내려가지 않도록 보정\n      newAttack = Math.max(1, newAttack);\n      newDefense = Math.max(0, newDefense);\n      newMaxHp = Math.max(100, newMaxHp);\n      newMaxMp = Math.max(50, newMaxMp);\n      newSpeed = Math.max(1, newSpeed);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: newAttack,\n        defense: newDefense,\n        maxHp: newMaxHp,\n        maxMp: newMaxMp,\n        speed: newSpeed,\n        hp: Math.min(prev.hp, newMaxHp), // 최대 체력이 줄어들 경우 현재 체력도 조정\n        mp: Math.min(prev.mp, newMaxMp)  // 최대 마나가 줄어들 경우 현재 마나도 조정\n      };\n    });\n\n    // 기존에 장착된 아이템이 있었다면 인벤토리로 보내기\n    if (currentEquippedItem) {\n      setInventory(prev => [...prev, currentEquippedItem]);\n      addToCombatLog(`기존 ${currentEquippedItem.name}을 해제하고 ${item.name}을 장착했습니다!`);\n    } else {\n      addToCombatLog(`${item.name}을 장착했습니다!`);\n    }\n\n    // 인벤토리에서 새 아이템 제거\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n  };\n\n  // 장비 해제\n  const unequipItem = (slot: keyof Equipment) => {\n    const equippedItem = character.equipment[slot];\n    if (!equippedItem) return;\n\n    setCharacter(prev => {\n      const newEquipment = { ...prev.equipment };\n      newEquipment[slot] = undefined;\n\n      // 장착 해제한 아이템의 스탯 제거\n      let newAttack = prev.attack;\n      let newDefense = prev.defense;\n      let newMaxHp = prev.maxHp;\n      let newMaxMp = prev.maxMp;\n      let newSpeed = prev.speed;\n\n      if (equippedItem.stats.attack) newAttack -= equippedItem.stats.attack;\n      if (equippedItem.stats.defense) newDefense -= equippedItem.stats.defense;\n      if (equippedItem.stats.hp) newMaxHp -= equippedItem.stats.hp;\n      if (equippedItem.stats.mp) newMaxMp -= equippedItem.stats.mp;\n      if (equippedItem.stats.speed) newSpeed -= equippedItem.stats.speed;\n\n      // HP가 maxHp를 초과하지 않도록 조정\n      const adjustedHp = Math.min(prev.hp, newMaxHp);\n      const adjustedMp = Math.min(prev.mp, newMaxMp);\n\n      return {\n        ...prev,\n        equipment: newEquipment,\n        attack: Math.max(1, newAttack), // 최소 공격력 1\n        defense: Math.max(0, newDefense),\n        maxHp: Math.max(100, newMaxHp), // 최소 체력 100\n        maxMp: Math.max(50, newMaxMp), // 최소 마나 50\n        speed: Math.max(1, newSpeed), // 최소 속도 1\n        hp: adjustedHp,\n        mp: adjustedMp\n      };\n    });\n\n    // 인벤토리에 아이템 추가\n    setInventory(prev => [...prev, equippedItem]);\n    addToCombatLog(`${equippedItem.name}을 해제했습니다!`);\n  };\n\n\n  // 아이템 판매\n  const sellItem = (item: Item) => {\n    const sellPrice = Math.floor(item.price * 0.7);\n    setCharacter(prev => ({ ...prev, gold: prev.gold + sellPrice }));\n    setInventory(prev => prev.filter(invItem => invItem.id !== item.id));\n    addToCombatLog(`${item.name}을 ${sellPrice} 골드에 판매했습니다!`);\n  };\n\n  // 아이템 구매\n  const buyItem = (item: Item) => {\n    if (character.gold < item.price) return;\n    \n    setCharacter(prev => ({ ...prev, gold: prev.gold - item.price }));\n    setInventory(prev => [...prev, { ...item, id: `${item.id}_${Date.now()}` }]);\n    addToCombatLog(`${item.name}을 구매했습니다!`);\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: '#9ca3af',\n      rare: '#3b82f6',\n      epic: '#8b5cf6',\n      legendary: '#f59e0b',\n      mythic: '#ef4444'\n    };\n    return colors[rarity as keyof typeof colors] || '#9ca3af';\n  };\n\n  // 던전 입장 함수\n  const enterDungeon = (dungeon: Dungeon) => {\n    if (dungeon.isComingSoon) {\n      addToCombatLog('이 던전은 아직 업데이트 예정입니다!');\n      return;\n    }\n    if (character.level < dungeon.requiredLevel) {\n      addToCombatLog(`레벨 ${dungeon.requiredLevel} 이상이어야 입장 가능합니다.`);\n      return;\n    }\n    setCurrentDungeon(dungeon);\n    setInDungeon(true);\n    setGameMode('dungeon');\n    setCurrentTab('dungeon');\n    spawnDungeonMonster(dungeon);\n    \n    // 이벤트 로깅\n    onAction('dungeon_entered', {\n      dungeon_id: dungeon.id,\n      dungeon_name: dungeon.name,\n      character_level: character.level,\n      floor: dungeon.currentFloor,\n      character_attack: character.attack,\n      character_defense: character.defense,\n      character_hp: character.hp,\n      character_mp: character.mp,\n      entry_time: new Date().getTime()\n    });\n  };\n\n  // 던전 몬스터 스폰\n  const spawnDungeonMonster = (dungeon: Dungeon, forceSpawn = false) => {\n    // 이미 몬스터가 있으면 새로 생성하지 않음 (강제 생성이 아닌 경우)\n    if (currentMonster && !forceSpawn) return;\n    \n    // 강제 생성인 경우 기존 몬스터를 먼저 제거\n    if (forceSpawn && currentMonster) {\n      setCurrentMonster(null);\n    }\n    // 던전별 고유 몬스터 타입 정의\n    const getDungeonMonsters = (dungeonId: string) => {\n      switch (dungeonId) {\n        case 'forest': // 어둠의 숲\n          return [\n            { name: '늑대', baseHp: 40, baseAttack: 10, baseDefense: 3 },\n            { name: '곰', baseHp: 80, baseAttack: 16, baseDefense: 6 },\n            { name: '거대 거미', baseHp: 120, baseAttack: 22, baseDefense: 10 },\n            { name: '숲의 수호자', baseHp: 200, baseAttack: 35, baseDefense: 18 },\n            { name: '고대 엔트', baseHp: 350, baseAttack: 45, baseDefense: 25 }\n          ];\n        case 'cave': // 고블린 동굴\n          return [\n            { name: '고블린 전사', baseHp: 60, baseAttack: 14, baseDefense: 5 },\n            { name: '고블린 궁수', baseHp: 45, baseAttack: 18, baseDefense: 3 },\n            { name: '고블린 마법사', baseHp: 50, baseAttack: 20, baseDefense: 4 },\n            { name: '고블린 우두머리', baseHp: 180, baseAttack: 30, baseDefense: 15 },\n            { name: '고블린 왕', baseHp: 400, baseAttack: 50, baseDefense: 28 }\n          ];\n        case 'tower': // 마법사의 탑\n          return [\n            { name: '마법 골렘', baseHp: 100, baseAttack: 20, baseDefense: 12 },\n            { name: '스켈레톤 메이지', baseHp: 70, baseAttack: 25, baseDefense: 8 },\n            { name: '플레임 엘리멘탈', baseHp: 110, baseAttack: 28, baseDefense: 10 },\n            { name: '리치', baseHp: 250, baseAttack: 40, baseDefense: 20 },\n            { name: '고대 마법사', baseHp: 500, baseAttack: 60, baseDefense: 35 }\n          ];\n        default:\n          return [\n            { name: '슬라임', baseHp: 30, baseAttack: 8, baseDefense: 2 },\n            { name: '고블린', baseHp: 50, baseAttack: 12, baseDefense: 4 },\n            { name: '오크', baseHp: 100, baseAttack: 18, baseDefense: 8 },\n            { name: '트롤', baseHp: 150, baseAttack: 25, baseDefense: 12 },\n            { name: '드래곤', baseHp: 300, baseAttack: 40, baseDefense: 20 }\n          ];\n      }\n    };\n\n    const baseMonsters = getDungeonMonsters(dungeon.id);\n\n    // 층수에 따른 점진적 몬스터 선택 로직\n    const floorBasedMonsterIndex = () => {\n      const currentFloor = dungeon.currentFloor;\n      if (currentFloor <= 3) return 0; // 첫 번째 몬스터 (1~3층)\n      if (currentFloor <= 7) return 1; // 두 번째 몬스터 (4~7층)  \n      if (currentFloor <= 12) return 2; // 세 번째 몬스터 (8~12층)\n      if (currentFloor <= 18) return 3; // 네 번째 몬스터 (13~18층)\n      return 4; // 다섯 번째 몬스터 (19층 이상)\n    };\n    \n    // 층수 기반 기본 몬스터 + 약간의 랜덤성 추가\n    const baseIndex = floorBasedMonsterIndex();\n    const randomVariation = Math.random() < 0.3 && baseIndex > 0 ? -1 : 0; // 30% 확률로 한 단계 낮은 몬스터\n    const selectedIndex = Math.max(0, baseIndex + randomVariation);\n    \n    const selectedMonster = baseMonsters[selectedIndex];\n    const levelMultiplier = 1 + (dungeon.level + dungeon.currentFloor - 1) * 0.2;\n\n    const monster: Monster = {\n      id: `dungeon_${dungeon.id}_${Date.now()}`,\n      name: selectedMonster.name,\n      level: dungeon.level + dungeon.currentFloor,\n      hp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      maxHp: Math.floor(selectedMonster.baseHp * levelMultiplier),\n      attack: Math.floor(selectedMonster.baseAttack * levelMultiplier),\n      defense: Math.floor(selectedMonster.baseDefense * levelMultiplier),\n      speed: 10,\n      exp: Math.floor((20 + dungeon.level * 8 + dungeon.currentFloor * 3) * levelMultiplier),\n      gold: Math.floor((10 + dungeon.level * 3) * levelMultiplier),\n      dropItems: generateDropItems(),\n      isBoss: dungeon.currentFloor % 5 === 0\n    };\n\n    if (monster.isBoss) {\n      monster.name = `보스 ${monster.name}`;\n      monster.hp *= 2;\n      monster.maxHp *= 2;\n      monster.attack *= 1.5;\n      monster.exp *= 3;\n      monster.gold *= 2;\n    }\n\n    setCurrentMonster(monster);\n    addToCombatLog(`${monster.name} Lv.${monster.level}이 나타났다!`);\n  };\n\n  // 물약 사용 함수\n  const consumeItem = (item: Item) => {\n    if (item.type !== 'consumable' || !item.consumableEffect) return;\n\n    const effect = item.consumableEffect;\n\n    // 체력 회복\n    if (effect.healHp) {\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + effect.healHp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 HP ${effect.healHp} 회복!`);\n    }\n\n    // 마나 회복\n    if (effect.healMp) {\n      setCharacter(prev => ({\n        ...prev,\n        mp: Math.min(prev.maxMp, prev.mp + effect.healMp!)\n      }));\n      addToCombatLog(`${item.name}을 사용하여 MP ${effect.healMp} 회복!`);\n    }\n\n    // 버프 효과\n    if (effect.buffType && effect.buffAmount && effect.buffDuration) {\n      setCharacter(prev => ({\n        ...prev,\n        buffs: {\n          ...prev.buffs,\n          [effect.buffType!]: {\n            amount: effect.buffAmount!,\n            duration: effect.buffDuration!\n          }\n        }\n      }));\n      addToCombatLog(`${item.name}을 사용하여 ${effect.buffType === 'attack' ? '공격력' : effect.buffType === 'defense' ? '방어력' : '속도'} ${effect.buffAmount} 증가! (${effect.buffDuration/1000}초)`);\n    }\n\n    // 인벤토리에서 물약 제거 또는 수량 감소\n    setInventory(prev => {\n      const itemIndex = prev.findIndex(invItem => invItem.id === item.id);\n      if (itemIndex !== -1) {\n        const newInventory = [...prev];\n        const currentItem = newInventory[itemIndex];\n        if (currentItem.quantity && currentItem.quantity > 1) {\n          newInventory[itemIndex] = { ...currentItem, quantity: currentItem.quantity - 1 };\n        } else {\n          newInventory.splice(itemIndex, 1);\n        }\n        return newInventory;\n      }\n      return prev;\n    });\n\n    // 이벤트 로깅\n    onAction('consumable_used', {\n      item_name: item.name,\n      item_type: item.type,\n      character_level: character.level,\n      heal_hp: effect.healHp || 0,\n      heal_mp: effect.healMp || 0,\n      buff_type: effect.buffType || 'none',\n      buff_amount: effect.buffAmount || 0,\n      character_hp_before: character.hp,\n      character_mp_before: character.mp,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스킬 사용 함수\n  const castSkill = (skill: Skill) => {\n    if (!skill.isLearned || skill.level === 0) {\n      addToCombatLog('스킬을 먼저 배워야 합니다!');\n      return;\n    }\n    if (skill.currentCooldown > 0 || character.mp < skill.manaCost) return;\n\n    // 스킬 사용 로직\n    if (skill.id === 'heal') {\n      const healAmount = 30 + skill.level * 5;\n      setCharacter(prev => ({\n        ...prev,\n        hp: Math.min(prev.maxHp, prev.hp + healAmount),\n        mp: prev.mp - skill.manaCost\n      }));\n      addToCombatLog(`${healAmount}만큼 회복했다!`);\n    } else {\n      // 공격 스킬\n      if (currentMonster) {\n        const damage = calculateSkillDamage(skill, character);\n        const newMonsterHp = Math.max(0, currentMonster.hp - damage);\n        setCurrentMonster(prev => prev ? {...prev, hp: newMonsterHp} : null);\n        setCharacter(prev => ({ ...prev, mp: prev.mp - skill.manaCost }));\n        addToCombatLog(`${skill.name}로 ${damage} 데미지!`);\n\n        // 몬스터가 죽지 않았으면 반격\n        if (newMonsterHp > 0) {\n          setTimeout(() => {\n            monsterAttack();\n          }, 1000);\n        } else {\n          // 몬스터가 죽었으면 처치 처리\n          setTimeout(() => {\n            defeatMonster();\n          }, 1500);\n        }\n      }\n    }\n    \n    // 쿨다운 적용\n    setCharacter(prev => ({\n      ...prev,\n      skills: prev.skills.map(s => \n        s.id === skill.id ? {...s, currentCooldown: s.cooldown} : s\n      )\n    }));\n\n    // 이벤트 로깅\n    onAction('skill_used', {\n      skill_name: skill.name,\n      skill_level: skill.level,\n      mana_cost: skill.manaCost,\n      character_level: character.level,\n      character_mp_before: character.mp,\n      character_mp_after: character.mp - skill.manaCost,\n      dungeon_name: currentDungeon?.name || null\n    });\n  };\n\n  // 스탯 포인트 할당\n  const allocateStat = (statName: keyof CharacterStats) => {\n    if (character.stats.availablePoints <= 0) return;\n\n    setCharacter(prev => ({\n      ...prev,\n      stats: {\n        ...prev.stats,\n        [statName]: prev.stats[statName] + 1,\n        availablePoints: prev.stats.availablePoints - 1\n      }\n    }));\n\n    // 스탯에 따른 능력치 업데이트\n    let hpBonus = 0, mpBonus = 0, attackBonus = 0, defenseBonus = 0;\n    if (statName === 'vitality') hpBonus = 5;\n    if (statName === 'intelligence') mpBonus = 3;\n    if (statName === 'strength') attackBonus = 2;\n    if (statName === 'agility') { attackBonus = 1; defenseBonus = 1; }\n\n    setCharacter(prev => ({\n      ...prev,\n      maxHp: prev.maxHp + hpBonus,\n      hp: prev.hp + hpBonus,\n      maxMp: prev.maxMp + mpBonus,\n      mp: prev.mp + mpBonus,\n      attack: prev.attack + attackBonus,\n      defense: prev.defense + defenseBonus\n    }));\n\n    // 이벤트 로깅\n    onAction('stat_allocated', {\n      stat_name: statName,\n      stat_value: character.stats[statName] + 1,\n      character_level: character.level,\n      available_points: character.stats.availablePoints - 1\n    });\n  };\n\n  // 공통 캐릭터 정보 헤더 컴포넌트\n  const renderCharacterHeader = () => {\n    const expPercentage = (character.exp / character.maxExp) * 100;\n    \n    return (\n      <div style={{\n        background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n        borderRadius: '15px',\n        padding: '15px 20px',\n        marginBottom: '20px',\n        color: 'white'\n      }}>\n        {/* 기본 스탯 정보 */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n          gap: '15px',\n          marginBottom: '15px'\n        }}>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#ffffff' }}>\n              Lv.{character.level}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>레벨</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#fbbf24' }}>\n              {character.gold}G\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>골드</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#f87171' }}>\n              {character.attack}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>공격력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#60a5fa' }}>\n              {character.defense}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>방어력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#34d399' }}>\n              {character.hp}/{character.maxHp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>체력</div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#a78bfa' }}>\n              {character.mp}/{character.maxMp}\n            </div>\n            <div style={{ color: '#e0e7ff', fontSize: '12px' }}>마나</div>\n          </div>\n        </div>\n\n        {/* 경험치 바 */}\n        <div style={{ marginTop: '15px' }}>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            marginBottom: '5px'\n          }}>\n            <span style={{ fontSize: '14px', color: '#e0e7ff' }}>경험치</span>\n            <span style={{ fontSize: '14px', color: '#ffffff', fontWeight: 'bold' }}>\n              {character.exp} / {character.maxExp} ({Math.floor(expPercentage)}%)\n            </span>\n          </div>\n          <div style={{\n            width: '100%',\n            height: '8px',\n            backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            overflow: 'hidden'\n          }}>\n            <div style={{\n              width: `${expPercentage}%`,\n              height: '100%',\n              background: 'linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%)',\n              borderRadius: '10px',\n              transition: 'width 0.3s ease'\n            }} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // 로비 렌더링\n  const renderLobbyTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #059669 0%, #10b981 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>🏠 모험가 로비</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>던전을 선택하여 모험을 시작하세요!</p>\n      </div>\n\n      {/* 던전 목록 */}\n      <div style={{ marginBottom: '20px' }}>\n        <h3 style={{ color: 'white', marginBottom: '15px', fontSize: '20px' }}>🏰 던전 목록</h3>\n        <div style={{ display: 'grid', gap: '15px' }}>\n          {availableDungeons.map(dungeon => (\n            <div\n              key={dungeon.id}\n              style={{\n                background: dungeon.isUnlocked ? '#374151' : '#1f2937',\n                borderRadius: '10px',\n                padding: '20px',\n                border: dungeon.isUnlocked ? '2px solid #10b981' : '2px solid #4b5563',\n                opacity: dungeon.isUnlocked ? 1 : 0.6\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                  <h4 style={{ color: 'white', margin: '0 0 5px 0', fontSize: '18px' }}>\n                    {dungeon.name} (Lv.{dungeon.level})\n                  </h4>\n                  <p style={{ color: '#9ca3af', margin: '0 0 10px 0', fontSize: '14px' }}>\n                    {dungeon.description}\n                  </p>\n                  <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                    필요 레벨: {dungeon.requiredLevel} | 층수: {dungeon.floors}층 | 현재 층: {dungeon.currentFloor}층\n                  </div>\n                </div>\n                <button\n                  onClick={() => enterDungeon(dungeon)}\n                  disabled={!dungeon.isUnlocked || character.level < dungeon.requiredLevel || dungeon.isComingSoon}\n                  style={{\n                    background: dungeon.isComingSoon \n                      ? 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)'\n                      : dungeon.isUnlocked && character.level >= dungeon.requiredLevel\n                      ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)'\n                      : '#4b5563',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 20px',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    cursor: (dungeon.isUnlocked && character.level >= dungeon.requiredLevel && !dungeon.isComingSoon) ? 'pointer' : 'not-allowed',\n                    transition: 'all 0.3s ease'\n                  }}\n                >\n                  {dungeon.isComingSoon ? '업데이트 예정' : \n                   dungeon.isUnlocked && character.level >= dungeon.requiredLevel ? '입장' : '잠금'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  // 던전 탭 렌더링\n  const renderDungeonTab = () => {\n    if (!inDungeon || !currentDungeon) {\n      return (\n        <div style={{ padding: '100px 20px', textAlign: 'center', background: '#1f2937', color: '#9ca3af' }}>\n          <h3>던전에 입장하지 않았습니다</h3>\n          <p>로비에서 던전을 선택해주세요</p>\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n        {/* 공통 캐릭터 헤더 */}\n        {renderCharacterHeader()}\n\n        {/* 던전 정보 */}\n        <div style={{\n          background: 'linear-gradient(135deg, #7c2d12 0%, #dc2626 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white'\n        }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n            <div>\n              <h2 style={{ margin: '0 0 5px 0', fontSize: '24px' }}>\n                🏰 {currentDungeon.name}\n              </h2>\n              <p style={{ margin: 0, opacity: 0.9, fontSize: '14px' }}>\n                {currentDungeon.currentFloor}층 / {currentDungeon.floors}층\n              </p>\n            </div>\n            <button\n              onClick={() => {\n                // 던전 나가기 이벤트 로깅\n                onAction('dungeon_exited', {\n                  dungeon_id: currentDungeon.id,\n                  dungeon_name: currentDungeon.name,\n                  current_floor: currentDungeon.currentFloor,\n                  total_floors: currentDungeon.floors,\n                  character_level: character.level,\n                  exit_reason: 'manual',\n                  time_spent: new Date().getTime()\n                });\n                setInDungeon(false);\n                setCurrentDungeon(null);\n                setCurrentTab('lobby');\n                setGameMode('lobby');\n              }}\n              style={{\n                background: '#374151',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '10px 15px',\n                cursor: 'pointer'\n              }}\n            >\n              던전 나가기\n            </button>\n          </div>\n          \n          {/* 층 진행 컨트롤 */}\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '15px',\n            background: 'rgba(0, 0, 0, 0.2)',\n            borderRadius: '10px'\n          }}>\n            <button\n              onClick={() => {\n                if (currentDungeon.currentFloor > 1) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: currentDungeon.currentFloor - 1 };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                }\n              }}\n              disabled={currentDungeon.currentFloor <= 1}\n              style={{\n                background: currentDungeon.currentFloor <= 1 ? '#6b7280' : '#3b82f6',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: currentDungeon.currentFloor <= 1 ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬆️ 이전 층\n            </button>\n            \n            <input\n              type=\"number\"\n              min=\"1\"\n              max={currentDungeon.floors}\n              value={currentDungeon.currentFloor}\n              placeholder=\"층\"\n              onChange={(e) => {\n                const targetFloor = parseInt(e.target.value);\n                if (targetFloor >= 1 && targetFloor <= currentDungeon.floors) {\n                  // Check if all previous floors are cleared\n                  let canMoveTo = true;\n                  for (let i = 1; i < targetFloor; i++) {\n                    if (!currentDungeon.clearedFloors.has(i)) {\n                      canMoveTo = false;\n                      addToCombatLog(`${i}층을 먼저 클리어해야 ${targetFloor}층으로 이동할 수 있습니다.`);\n                      break;\n                    }\n                  }\n                  \n                  if (canMoveTo) {\n                    const updatedDungeon = { ...currentDungeon, currentFloor: targetFloor };\n                    setCurrentDungeon(updatedDungeon);\n                    setCurrentMonster(null);\n                    addToCombatLog(`${targetFloor}층으로 이동했습니다.`);\n                    setTimeout(() => {\n                      spawnDungeonMonster(updatedDungeon, true);\n                    }, 1000);\n                  }\n                }\n              }}\n              style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                color: 'white',\n                border: '1px solid rgba(255, 255, 255, 0.3)',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                textAlign: 'center',\n                width: '80px'\n              }}\n            />\n            \n            <button\n              onClick={() => {\n                const nextFloor = currentDungeon.currentFloor + 1;\n                const currentFloorCleared = currentDungeon.clearedFloors.has(currentDungeon.currentFloor);\n                \n                if (currentDungeon.currentFloor < currentDungeon.floors && currentFloorCleared) {\n                  const updatedDungeon = { ...currentDungeon, currentFloor: nextFloor };\n                  setCurrentDungeon(updatedDungeon);\n                  setCurrentMonster(null);\n                  addToCombatLog(`${updatedDungeon.currentFloor}층으로 이동했습니다.`);\n                  setTimeout(() => {\n                    spawnDungeonMonster(updatedDungeon, true);\n                  }, 1000);\n                } else if (!currentFloorCleared) {\n                  addToCombatLog(`현재 층에서 적어도 한 마리의 몬스터를 처치해야 다음 층으로 진행할 수 있습니다.`);\n                }\n              }}\n              disabled={currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)}\n              style={{\n                background: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? '#6b7280' : '#10b981',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                padding: '8px 12px',\n                cursor: (currentDungeon.currentFloor >= currentDungeon.floors || !currentDungeon.clearedFloors.has(currentDungeon.currentFloor)) ? 'not-allowed' : 'pointer',\n                fontSize: '14px'\n              }}\n            >\n              ⬇️ 다음 층\n            </button>\n          </div>\n        </div>\n\n        {/* 층 진행 상태 표시 */}\n      {showDungeonChoice && (\n        <div style={{\n          background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n          borderRadius: '15px',\n          padding: '20px',\n          marginBottom: '20px',\n          color: 'white',\n          textAlign: 'center'\n        }}>\n          <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '10px' }}>\n            🏃 다음 층으로 이동 중...\n          </div>\n          <div style={{\n            background: 'rgba(255, 255, 255, 0.2)',\n            borderRadius: '10px',\n            height: '8px',\n            overflow: 'hidden',\n            marginBottom: '10px'\n          }}>\n            <div style={{\n              background: 'linear-gradient(90deg, #10b981, #059669)',\n              height: '100%',\n              width: '100%',\n              borderRadius: '10px',\n              animation: 'progress 3s linear'\n            }} />\n          </div>\n          <div style={{ fontSize: '14px', opacity: 0.9 }}>\n            잠시만 기다려주세요...\n          </div>\n        </div>\n      )}\n\n      {/* 전투 영역 - 기존 renderCombatTab과 동일한 전투 시스템 */}\n        {currentMonster && (\n          <div style={{\n            background: '#374151',\n            borderRadius: '15px',\n            padding: '20px',\n            marginBottom: '20px'\n          }}>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>\n              {/* 캐릭터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  ⚔️\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {character.name} Lv.{character.level}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(character.hp / character.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {character.hp}/{character.maxHp}\n                  </div>\n                </div>\n              </div>\n\n              {/* 몬스터 */}\n              <div style={{ textAlign: 'center' }}>\n                <div style={{\n                  width: '80px',\n                  height: '80px',\n                  background: 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)',\n                  borderRadius: '50%',\n                  margin: '0 auto 10px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '30px'\n                }}>\n                  👹\n                </div>\n                <div style={{ color: 'white', marginBottom: '10px' }}>\n                  {currentMonster.name} Lv.{currentMonster.level}\n                  {currentMonster.isBoss && <span style={{ color: '#fbbf24' }}> 👑</span>}\n                </div>\n                <div style={{\n                  background: '#1f2937',\n                  borderRadius: '10px',\n                  padding: '5px',\n                  marginBottom: '5px'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(90deg, #ef4444 0%, #dc2626 100%)',\n                    height: '8px',\n                    borderRadius: '4px',\n                    width: `${(currentMonster.hp / currentMonster.maxHp) * 100}%`\n                  }} />\n                  <div style={{ color: 'white', fontSize: '12px', marginTop: '5px' }}>\n                    HP: {currentMonster.hp}/{currentMonster.maxHp}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 전투 버튼들 */}\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginBottom: '20px' }}>\n              <button\n                onClick={attack}\n                disabled={character.hp <= 0}\n                style={{\n                  background: 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                  opacity: character.hp > 0 ? 1 : 0.5\n                }}\n              >\n                ⚔️ 공격\n              </button>\n              <button\n                onClick={() => setIsAutoFighting(!isAutoFighting)}\n                style={{\n                  background: isAutoFighting \n                    ? 'linear-gradient(135deg, #dc2626 0%, #991b1b 100%)'\n                    : 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '10px',\n                  padding: '12px 24px',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  cursor: 'pointer'\n                }}\n              >\n                {isAutoFighting ? '⏸️ 자동 중지' : '▶️ 자동 전투'}\n              </button>\n            </div>\n\n            {/* 스킬 버튼들 */}\n            {character.skills.filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0).length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  ✨ 스킬 사용 (MP: {character.mp}/{character.maxMp})\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {character.skills\n                    .filter(skill => skill.type === 'active' && skill.isLearned && skill.level > 0)\n                    .map(skill => (\n                      <button\n                        key={skill.id}\n                        onClick={() => castSkill(skill)}\n                        disabled={character.hp <= 0 || skill.currentCooldown > 0 || character.mp < skill.manaCost}\n                        style={{\n                          background: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost\n                            ? 'linear-gradient(135deg, #7c3aed 0%, #a855f7 100%)'\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '10px 16px',\n                          fontSize: '14px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 && skill.currentCooldown === 0 && character.mp >= skill.manaCost ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${skill.description}\\n대미지: ${calculateSkillDamage(skill, character)} | 마나: ${skill.manaCost}`}\n                      >\n                        <div>{skill.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          MP: {skill.manaCost}\n                          {skill.currentCooldown > 0 && (\n                            <> | {(skill.currentCooldown/1000).toFixed(1)}s</>\n                          )}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 물약 버튼들 */}\n            {inventory.filter(item => item.type === 'consumable').length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ color: 'white', marginBottom: '10px', textAlign: 'center', fontSize: '16px' }}>\n                  🧪 물약 사용\n                </h4>\n                <div style={{ display: 'flex', gap: '8px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                  {inventory\n                    .filter(item => item.type === 'consumable')\n                    .map(item => (\n                      <button\n                        key={item.id}\n                        onClick={() => consumeItem(item)}\n                        disabled={character.hp <= 0}\n                        style={{\n                          background: character.hp > 0\n                            ? `linear-gradient(135deg, ${getRarityColor(item.rarity)} 0%, #374151 100%)`\n                            : '#4b5563',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '8px',\n                          padding: '8px 12px',\n                          fontSize: '12px',\n                          fontWeight: 'bold',\n                          cursor: character.hp > 0 ? 'pointer' : 'not-allowed',\n                          opacity: character.hp > 0 ? 1 : 0.6,\n                          position: 'relative'\n                        }}\n                        title={`${item.name}\\n${item.consumableEffect?.healHp ? `HP +${item.consumableEffect.healHp}` : ''}${item.consumableEffect?.healMp ? `MP +${item.consumableEffect.healMp}` : ''}${item.consumableEffect?.buffType ? `${item.consumableEffect.buffType} +${item.consumableEffect.buffAmount}` : ''}`}\n                      >\n                        <div>{item.name}</div>\n                        <div style={{ fontSize: '10px', opacity: 0.8 }}>\n                          {item.quantity && item.quantity > 1 ? `x${item.quantity}` : ''}\n                          {item.consumableEffect?.healHp && ` HP+${item.consumableEffect.healHp}`}\n                          {item.consumableEffect?.healMp && ` MP+${item.consumableEffect.healMp}`}\n                        </div>\n                      </button>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* 전투 로그 */}\n            <div style={{\n              background: '#1f2937',\n              borderRadius: '10px',\n              padding: '15px',\n              height: '200px',\n              overflowY: 'auto',\n              fontSize: '14px'\n            }}>\n              <div style={{ color: '#9ca3af', marginBottom: '10px', fontWeight: 'bold' }}>\n                전투 로그:\n              </div>\n              {combatLog.slice(-10).map((log, index) => (\n                <div key={index} style={{ color: '#e5e7eb', marginBottom: '5px', lineHeight: '1.4' }}>\n                  {log}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // 인벤토리 탭 렌더링\n  const renderInventoryTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',\n        borderRadius: '15px',\n        padding: '20px',\n        marginBottom: '20px',\n        color: 'white',\n        textAlign: 'center'\n      }}>\n        <h2 style={{ margin: '0 0 10px 0', fontSize: '24px' }}>🎒 인벤토리</h2>\n        <p style={{ margin: 0, opacity: 0.9 }}>보유한 아이템과 장비를 관리하세요</p>\n      </div>\n\n      {/* 현재 장착 중인 장비 */}\n      <div style={{ marginBottom: '30px' }}>\n        <h3 style={{ color: 'white', marginBottom: '15px' }}>⚔️ 장착 중인 장비</h3>\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', \n          gap: '15px' \n        }}>\n          {Object.entries(character.equipment).map(([slot, item]) => (\n            <div key={slot} style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              borderRadius: '10px',\n              padding: '15px',\n              border: item ? '2px solid #10b981' : '2px solid #4b5563'\n            }}>\n              <h4 style={{ color: '#9ca3af', margin: '0 0 10px 0', textTransform: 'capitalize' }}>\n                {slot === 'weapon' ? '무기' : \n                 slot === 'armor' ? '갑옷' :\n                 slot === 'helmet' ? '투구' :\n                 slot === 'boots' ? '신발' :\n                 slot === 'ring' ? '반지' : '목걸이'}\n              </h4>\n              {item ? (\n                <div>\n                  <p style={{ color: '#10b981', margin: '0 0 5px 0', fontWeight: 'bold' }}>\n                    {item.name}\n                  </p>\n                  <div style={{ fontSize: '12px', color: '#9ca3af' }}>\n                    <>\n                      {Object.entries(item.stats || {}).map(([stat, value]) => (\n                        <div key={stat}>\n                          {stat === 'attack' ? '공격력' :\n                           stat === 'defense' ? '방어력' :\n                           stat === 'hp' ? '체력' :\n                           stat === 'mp' ? '마나' : stat}: +{value}\n                        </div>\n                      ))}\n                    </>\n                  </div>\n                </div>\n              ) : (\n                <p style={{ color: '#6b7280', margin: 0, fontStyle: 'italic' }}>장착된 아이템 없음</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* 인벤토리 아이템 */}\n      <div>\n        <h3 style={{ color: 'white', marginBottom: '15px' }}>📦 인벤토리 ({inventory.length}개)</h3>\n        {inventory.length === 0 ? (\n          <div style={{\n            background: 'rgba(255, 255, 255, 0.05)',\n            borderRadius: '10px',\n            padding: '40px',\n            textAlign: 'center',\n            color: '#6b7280'\n          }}>\n            <p>인벤토리가 비어있습니다.</p>\n          </div>\n        ) : (\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))', \n            gap: '15px' \n          }}>\n            {inventory.map((item, index) => (\n              <div key={index} style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                borderRadius: '10px',\n                padding: '15px',\n                border: `2px solid ${getRarityColor(item.rarity)}`\n              }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                  <div style={{ flex: 1 }}>\n                    <h4 style={{ \n                      color: getRarityColor(item.rarity), \n                      margin: '0 0 5px 0', \n                      fontSize: '16px',\n                      fontWeight: 'bold'\n                    }}>\n                      {item.name}\n                    </h4>\n                    <p style={{ \n                      color: '#9ca3af', \n                      margin: '0 0 10px 0', \n                      fontSize: '12px',\n                      textTransform: 'capitalize'\n                    }}>\n                      {item.type} • {item.rarity}\n                    </p>\n                    {item.stats && Object.keys(item.stats).length > 0 && (\n                      <div style={{ \n                        fontSize: '12px', \n                        color: '#9ca3af',\n                        marginBottom: '10px'\n                      }}>\n                        {Object.entries(item.stats).map(([stat, value]) => (\n                          <div key={stat}>\n                            {stat === 'attack' ? '공격력' :\n                             stat === 'defense' ? '방어력' :\n                             stat === 'hp' ? '체력' :\n                             stat === 'mp' ? '마나' : stat}: +{value}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div style={{ display: 'flex', gap: '10px', marginTop: '10px' }}>\n                  {item.type !== 'consumable' && (\n                    <button\n                      onClick={() => {\n                        // 장착 로직 (임시)\n                        console.log('Equip item:', item.name);\n                      }}\n                      style={{\n                        background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '6px',\n                        padding: '8px 12px',\n                        fontSize: '12px',\n                        cursor: 'pointer',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      장착\n                    </button>\n                  )}\n                  {item.type === 'consumable' && (\n                    <button\n                      onClick={() => {\n                        // 사용 로직 (임시)\n                        console.log('Use item:', item.name);\n                      }}\n                      style={{\n                        background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '6px',\n                        padding: '8px 12px',\n                        fontSize: '12px',\n                        cursor: 'pointer',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      사용\n                    </button>\n                  )}\n                  <button\n                    onClick={() => {\n                      // 판매 로직 (임시)\n                      console.log('Sell item:', item.name);\n                    }}\n                    style={{\n                      background: '#dc2626',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      padding: '8px 12px',\n                      fontSize: '12px',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    판매\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderShopTab = () => (\n    <div style={{ padding: '20px', background: '#1f2937', minHeight: '600px' }}>\n      {/* 공통 캐릭터 헤더 */}\n      {renderCharacterHeader()}\n\n      <div style={{\n        background: '#374151',\n        borderRadius: '15px',\n        padding: '20px'\n      }}>\n        <h3 style={{ color: 'white', margin: '0 0 15px 0' }}>상점</h3>\n        \n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '15px'\n        }}>\n          {shop.map(item => (\n            <div\n              key={item.id}\n              style={{\n                background: '#1f2937',\n                border: `2px solid ${getRarityColor(item.rarity)}`,\n                borderRadius: '10px',\n                padding: '15px'\n              }}\n            >\n              <div style={{\n                color: getRarityColor(item.rarity),\n                fontWeight: 'bold',\n                marginBottom: '5px'\n              }}>\n                {item.name}\n              </div>\n              \n              <div style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '10px' }}>\n                {item.type} • Lv.{item.level} • {item.rarity}\n              </div>\n\n              <div style={{ color: '#d1d5db', fontSize: '12px', marginBottom: '15px' }}>\n                {Object.entries(item.stats).map(([key, value]) => \n                  value > 0 && (\n                    <div key={key}>\n                      {key === 'attack' ? '⚔️' :\n                       key === 'defense' ? '🛡️' :\n                       key === 'hp' ? '❤️' :\n                       key === 'mp' ? '💙' :\n                       key === 'speed' ? '💨' :\n                       key === 'critRate' ? '💥' : '⭐'} +{value}\n                    </div>\n                  )\n                )}\n              </div>\n\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}>\n                <div style={{ color: '#fbbf24', fontWeight: 'bold' }}>\n                  💰 {item.price.toLocaleString()}G\n                </div>\n                <button\n                  onClick={() => buyItem(item)}\n                  disabled={character.gold < item.price}\n                  style={{\n                    background: character.gold >= item.price ? '#10b981' : '#6b7280',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px',\n                    padding: '8px 16px',\n                    fontSize: '12px',\n                    cursor: character.gold >= item.price ? 'pointer' : 'not-allowed',\n                    opacity: character.gold >= item.price ? 1 : 0.6\n                  }}\n                >\n                  구매\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTabs = () => (\n    <div style={{\n      background: '#374151',\n      display: 'flex',\n      borderRadius: '15px 15px 0 0',\n      overflow: 'hidden'\n    }}>\n      {[\n        { id: 'lobby', name: t('rpg.tabs.lobby'), icon: '🏠' },\n        { id: 'character', name: t('rpg.tabs.character'), icon: '👤' },\n        { id: 'inventory', name: t('rpg.tabs.inventory'), icon: '🎒' },\n        { id: 'skills', name: t('rpg.tabs.skills'), icon: '✨' },\n        { id: 'dungeon', name: t('rpg.tabs.dungeon'), icon: '🏰' },\n        { id: 'shop', name: t('rpg.tabs.shop'), icon: '🛒' }\n      ].map(tab => (\n        <button\n          key={tab.id}\n          onClick={() => setCurrentTab(tab.id as any)}\n          style={{\n            background: currentTab === tab.id \n              ? colors.accent\n              : 'transparent',\n            color: colors.text,\n            border: 'none',\n            padding: '15px 20px',\n            fontSize: '14px',\n            cursor: 'pointer',\n            flex: 1,\n            transition: 'all 0.3s ease'\n          }}\n        >\n          <div>{tab.icon}</div>\n          <div style={{ fontSize: '12px', marginTop: '5px' }}>{tab.name}</div>\n        </button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{\n      width: '100%',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      background: colors.cardBg,\n      borderRadius: '20px',\n      overflow: 'hidden',\n      boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      border: `1px solid ${colors.cardBorder}`\n    }}>\n      {/* 게임 타이틀 */}\n      <div style={{\n        background: colors.backgroundSecondary,\n        padding: '20px',\n        textAlign: 'center',\n        position: 'relative',\n        overflow: 'hidden'\n      }}>\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.3) 0%, transparent 70%)'\n        }} />\n        <h1 style={{\n          margin: 0,\n          fontSize: '32px',\n          fontWeight: 'bold',\n          color: colors.text,\n          textShadow: '0 4px 20px rgba(147, 51, 234, 0.5)',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.title')}\n        </h1>\n        <p style={{\n          margin: '10px 0 0 0',\n          color: colors.textSecondary,\n          fontSize: '16px',\n          position: 'relative',\n          zIndex: 1\n        }}>\n          {t('rpg.subtitle')}\n        </p>\n      </div>\n\n      {/* 탭 메뉴 */}\n      {renderTabs()}\n\n      {/* 현재 탭 컨텐츠 */}\n      {currentTab === 'lobby' && renderLobbyTab()}\n      {currentTab === 'dungeon' && renderDungeonTab()}\n      {currentTab === 'character' && renderInventoryTab()}\n      {currentTab === 'inventory' && renderInventoryTab()}\n      {currentTab === 'skills' && renderSkillsTab()}\n      {currentTab === 'shop' && renderShopTab()}\n\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}